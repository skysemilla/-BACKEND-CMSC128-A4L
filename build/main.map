{"version":3,"sources":["webpack:///webpack/bootstrap 1f83fbf22ef5f2c43b5d","webpack:///external \"express\"","webpack:///./src/database/index.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///external \"sqlstring\"","webpack:///./src/index.js","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"express-session\"","webpack:///external \"express-mysql-session\"","webpack:///external \"mysql\"","webpack:///./src/router.js","webpack:///./src/entities/auth/router.js","webpack:///external \"regenerator-runtime\"","webpack:///./src/entities/auth/controller.js","webpack:///./src/entities/extension/router.js","webpack:///./src/entities/extension/controller.js","webpack:///./src/entities/publications/router.js","webpack:///./src/entities/publications/controller.js","webpack:///external \"multer\"","webpack:///./src/entities/signup/router.js","webpack:///./src/entities/signup/controller.js","webpack:///./src/entities/studyload/router.js","webpack:///./src/entities/studyload/controller.js","webpack:///./src/entities/teachload/router.js","webpack:///./src/entities/teachload/controller.js","webpack:///external \"util\"","webpack:///./src/entities/facultylist/router.js","webpack:///./src/entities/facultylist/controller.js","webpack:///./src/entities/fsr/router.js","webpack:///./src/entities/fsr/controller.js","webpack:///./src/entities/adminWork/router.js","webpack:///./src/entities/adminWork/controller.js","webpack:///./src/entities/consulHours/router.js","webpack:///./src/entities/consulHours/controller.js","webpack:///./src/entities/facultygrant/router.js","webpack:///./src/entities/facultygrant/controller.js","webpack:///./src/entities/limitedpractice/router.js","webpack:///./src/entities/limitedpractice/controller.js","webpack:///./src/entities/profile/router.js","webpack:///./src/entities/profile/controller.js","webpack:///./src/entities/admin/router.js","webpack:///./src/entities/admin/controller.js","webpack:///./src/entities/subject/router.js","webpack:///./src/entities/subject/controller.js"],"names":["db","mysql","createConnection","host","user","password","dateStrings","connect","err","console","log","message","query","app","express","MySQLStore","store","sessionStore","use","bodyParser","json","urlencoded","encoded","logger","session","key","secret","resave","saveUninitialized","createDatabaseTable","checkExpirationInterval","expiration","port","process","env","PORT","server","listen","router","Router","alphanumRegex","passRegex","post","req","res","body","username","match","length","status","data","SqlString","require","login","Promise","resolve","reject","values","queryString","format","rows","extensions","extension","extension_type","extension_name","no_of_participants","extension_role","credit_unit","funding_agency","id","getExtension","getExtensionByID","getExtensions","addExtension","no_of_hours","start_time","end_time","emp_id","results","insertId","removeExtension","affectedRows","editExtension","extension_id_update","credit_unit_update","extension_name_update","extension_type_update","no_of_hours_update","no_of_participants_update","extension_role_update","start_time_update","end_time_update","funding_agency_update","emp_id_update","multer","numRegex","creditRegex","publication","empid","publications","category","subcategory","title","credit_units","publication_id","toString","get","storage","diskStorage","destination","file","cb","filename","fieldname","Date","now","upload","any","next","File","getPublication","getPublications","addPublication","funding","role","start_date","end_date","addPublicationLog","addCoworker","coworker_id","removePublication","editPublication","getEmployees","getEmployeeCoworkers","removeCoworkers","getCoworkers","nameRegex","empIdRegex","emailRegex","type","f_name","m_name","l_name","department","college","emp_type","is_full_time","email","addEmployee","emp_type_no","getEmployee","checkValid","credits","courseno","school","days","studyload_id","book","sample","subjects","degree","uni","studyleave","fellowship","out","addStudyLoad","json2","send_response","result","args","last_query","send","insertDays","error","fields","tempid","forEach","item","getTempID","Error","start","removeStudyLoadDays","removeStudyLoad","editStudyLoad","getStudyLoad","getStudyEmp","getAllStudyLoad","getStudyCredentials","editStudyCredentials","university","getDays","addDays","no_of_students","subject_code","section_code","existHourTeachLoad","existDayTeachLoad","existHourConsultation","existDayConsultation","teachingload_id","units","addTeachLoad","room","creditw","checkExistDayTeachLoad","count","checkExistDayConsultation","checkExistHourConsultation","checkExistHourTeachLoad","removeTeachLoad","editTeachLoad","getTeachLoad","getTeachEmp","newArray","visitedArray","i","j","daysArray","includes","push","day","getTeachEmpAdmin","getAllTeachLoad","editAddTeachLoadUnits","editRemoveTeachLoadUnits","getSubjectByTeachLoad","empidRegex","faculty","getFaculty","getAllFaculty","fsr","name","getApprovedFSR","getApprovedByName","getApprovedById","getPendingFSR","getPendingByName","getPendingById","sendToAdmin","office","nature_of_work","consultation","position","positions","addPosition","getPosition","getAllPositions","removePosition","editPosition","position_id","consultation_start_time","consultation_end_time","consultation_place","consultation_id","consultations","addConsulHours","removeConsulHours","getConsultation","getAllConsulHours","editConsulHours","facultygrant","addFacultyGrant","getAllFacultyGrant","getFacultyGrant","getAllFacultyGrantByEmp","removeFacultyGrant","editFacultyGrant","is_approved","professional_chair","grants","grant_title","haveApplied","date_submitted","limited_practice_id","addLimitedPractice","removeLimitedPractice","editLimitedPractice","getLimitedPractice","getAllLimitedPractice","fname","mname","lname","emptype","emptypeno","dept","year","term","isnew","editFaculty","editTerm","getData","enableFaculty","disableFaculty","getFacultyByName","getFacultyById","subject","delete","params","put","getSubject","getSubjects","addSubject","isLecture","removeSubject","editSubject","subject_id","getSubjectDay"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1f83fbf22ef5f2c43b5d","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","import mysql from 'mysql';\n\nconst db = mysql.createConnection({\n  host: 'localhost',\n  user: 'skydev',\n  password: 'skydev',\n  db: 'skydev',\n  dateStrings: true\n});\n\ndb.connect(err => {\n  if (err) {\n    console.log('Error in connecting to database');\n    console.log(err.message);\n  } else {\n    console.log('Success in connecting to database');\n  }\n});\n\ndb.query('USE skydev');\n\nexport default db;\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/index.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 2\n// module chunks = 0","module.exports = require(\"sqlstring\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sqlstring\"\n// module id = 3\n// module chunks = 0","import express from 'express';\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport session from 'express-session';\nimport store from 'express-mysql-session';\nimport db from './database';\nimport router from './router';\n\nconst app = express();\nconst MySQLStore = store(session);\nconst sessionStore = new MySQLStore({}, db);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ encoded: true }));\napp.use(logger('dev'));\n\napp.use(\n  session({\n    key: 'skydev',\n    secret: 'skydev',\n    resave: true,\n    saveUninitialized: true,\n    store: sessionStore,\n    createDatabaseTable: true,\n    checkExpirationInterval: 900000,\n    expiration: 86400000\n  })\n);\n\napp.use(router);\n\nconst port = process.env.PORT || 3001;\n\nconst server = app.listen(port, () => {\n  console.log(`Server is running at port: ${port}`);\n});\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"express-mysql-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-mysql-session\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"mysql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mysql\"\n// module id = 10\n// module chunks = 0","import { Router } from 'express';\n\n// put import routers here\nimport authRouter from './entities/auth/router';\nimport extensionRouter from './entities/extension/router';\nimport publicationsRouter from './entities/publications/router';\nimport signupRouter from './entities/signup/router';\nimport studyRouter from './entities/studyload/router';\nimport teachRouter from './entities/teachload/router';\nimport facultyRouter from './entities/facultylist/router';\nimport fsrRouter from './entities/fsr/router';\nimport adminWorkRouter from './entities/adminWork/router';\nimport consulHourRouter from './entities/consulHours/router';\nimport facultygrantRouter from './entities/facultygrant/router';\nimport limitedpracticeRouter from './entities/limitedpractice/router';\nimport profileRouter from './entities/profile/router';\nimport adminRouter from './entities/admin/router';\nimport subjectRouter from './entities/subject/router';\n\nconst router = Router();\n\n// put use statements here\nrouter.use('/', authRouter);\nrouter.use(extensionRouter);\nrouter.use(publicationsRouter);\nrouter.use(signupRouter);\nrouter.use(studyRouter);\nrouter.use(teachRouter);\nrouter.use(facultyRouter);\nrouter.use(fsrRouter);\nrouter.use(adminWorkRouter);\nrouter.use(consulHourRouter);\nrouter.use(facultygrantRouter);\nrouter.use(limitedpracticeRouter);\nrouter.use(profileRouter);\nrouter.use(adminRouter);\nrouter.use(subjectRouter);\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nconst alphanumRegex = /^[A-Za-z0-9]+$/;\nconst passRegex = /^[A-Za-z0-9\\-_.]+$/;\n\nrouter.post('/api/login', async (req, res) => {\n  if (\n    req.body.username.match(alphanumRegex) &&\n    req.body.password &&\n    req.body.password.length >= 6 &&\n    req.body.password.length <= 16 &&\n    req.body.password.match(passRegex)\n  ) {\n    try {\n      const user = await Ctrl.login(req.body);\n      req.session.user = user;\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully logged in',\n        data: user\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 500:\n          message = 'Internal server error while logging in';\n          break;\n        case 404:\n          message = 'Wrong credentials';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nrouter.post('/api/logout', (req, res) => {\n  req.session.user = null;\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully logged out'\n  });\n});\n\nrouter.post('/api/session', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully fetched current session',\n    data: req.session.user ? req.session.user : null\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/router.js","module.exports = require(\"regenerator-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime\"\n// module id = 13\n// module chunks = 0","import db from '../../database';\nvar SqlString = require('sqlstring');\n\nexport const login = ({ username, password }) => {\n  return new Promise((resolve, reject) => {\n    const values = [username, password];\n    const queryString = SqlString.format(\n      `\n      SELECT \n        *\n      FROM\n        EMPLOYEE\n      WHERE\n        username = BINARY ? and\n        password = BINARY sha2(?,256)\n    `,\n      values\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets extension\nrouter.post('/api/extension/viewByID', async (req, res) => {\n  try {\n    const extensions = await Ctrl.getExtensionByID(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all Extensions',\n      data: extensions\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// get a extensions\nrouter.post('/api/extension/view', async (req, res) => {\n  try {\n    const extension = await Ctrl.getExtension(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched Extension',\n      data: extension\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\nrouter.post('/api/extension/viewByID', async (req, res) => {\n  try {\n    const extension = await Ctrl.getExtensionByID(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched Extension',\n      data: extension\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n// add a extension\nrouter.post('/api/extension/add', async (req, res) => {\n  if (\n    req.body.extension_type &&\n    req.body.extension_name &&\n    req.body.no_of_participants >= 0 &&\n    req.body.extension_role &&\n    req.body.credit_unit >= 0 &&\n    req.body.funding_agency\n  ) {\n    try {\n      const id = await Ctrl.addExtension(req.body);\n      // const extensionAdded = await Ctrl.getExtension({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added Extension',\n        // data: extensionAdded\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else{\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes an extension\nrouter.post('/api/extension/delete', async (req, res) => {\n  try {\n    // const extension = await Ctrl.getExtension(req.body);\n    await Ctrl.removeExtension(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed sample',\n      // data: extension\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Cannot Delete: Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a extension\nrouter.post('/api/extension/edit', async (req, res) => {\n  try {\n    await Ctrl.editExtension(req.body);\n    // const extensionEdited = await Ctrl.getExtension({ id: req.body.extension_id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited extension',\n      // data: extensionEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extension/router.js","import db from '../../database';\n\n// gets extensions\nexport const getExtension = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `SELECT * from EXTENSION where emp_id = ?`;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets a extension\nexport const getExtensionByID = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT * from EXTENSION where extension_id = ?;\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n// gets all extensions\nexport const getExtensions = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      view_extension();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a extension\nexport const addExtension = ({\n  credit_unit,\n  extension_name,\n  extension_type,\n  no_of_hours,\n  no_of_participants,\n  extension_role,\n  start_time,\n  end_time,\n  funding_agency,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_extension(?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\n        `;\n\n    const values = [\n      credit_unit,\n      extension_name,\n      extension_type,\n      no_of_hours,\n      no_of_participants,\n      extension_role,\n      start_time,\n      end_time,\n      funding_agency,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a extension\nexport const removeExtension = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_extension(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a sample\nexport const editExtension = ({\n  extension_id_update,\n  credit_unit_update,\n  extension_name_update,\n  extension_type_update,\n  no_of_hours_update,\n  no_of_participants_update,\n  extension_role_update,\n  start_time_update,\n  end_time_update,\n  funding_agency_update,\n  emp_id_update\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_extension(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      extension_id_update,\n      credit_unit_update,\n      extension_name_update,\n      extension_type_update,\n      no_of_hours_update,\n      no_of_participants_update,\n      extension_role_update,\n      start_time_update,\n      end_time_update,\n      funding_agency_update,\n      emp_id_update\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extension/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\nvar multer = require('multer');\n\nconst router = Router();\nconst alphanumRegex = /^[a-zA-Z0-9 ]*[a-zA-Z ][a-zA-Z0-9 ]*$/;\nconst numRegex = /^[0-9\\s\\-']+$/;\nconst creditRegex = /^[0-9]$/;\n\n// gets a publication by id\nrouter.post('/api/publication/view', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const publication = await Ctrl.getPublication(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched publication',\n        data: publication\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Publication not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// gets publications\nrouter.post('/api/publication/viewAll', async (req, res) => {\n  if (req.body.empid) {\n    try {\n      const publications = await Ctrl.getPublications(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched all publications',\n        data: publications\n      });\n    } catch (status) {\n      let message = '';\n\n      switch (status) {\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n\n      res.status(200).json({ status, message });\n    }\n  }\n});\n\n// add a publication\nrouter.post('/api/publication/add', async (req, res) => {\n  if (\n    req.body.category &&\n    req.body.subcategory &&\n    req.body.title &&\n    !req.body.title.match(numRegex) &&\n    req.body.title.match(alphanumRegex) &&\n    req.body.credit_units >= 0 &&\n    req.body.credit_units.match(creditRegex)\n  ) {\n    try {\n      const id = await Ctrl.addPublication(req.body);\n      console.log('title');\n      console.log(req.body.title);\n      // const log = await Ctrl.addPublicationLog(req.body.title);\n      // const publication = await Ctrl.getPublication({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created publication',\n        data: id\n        // data: log\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// add a coworker\nrouter.post('/api/coworker/add', async (req, res) => {\n  if (req.body.publication_id) {\n    try {\n      await Ctrl.addCoworker(req.body);\n      // const row = Ctrl.checkIfExisting(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added coworker'\n        // data: row\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/delete', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const publication = await Ctrl.getPublication(req.body);\n      await Ctrl.removePublication(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed publication',\n        data: publication\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Publication not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// edits a publication\nrouter.post('/api/publication/edit', async (req, res) => {\n  if (\n    req.body.category &&\n    req.body.subcategory &&\n    req.body.title &&\n    !req.body.title.match(numRegex) &&\n    req.body.title.match(alphanumRegex) &&\n    req.body.credit_units >= 0 &&\n    req.body.credit_units.toString().match(creditRegex) &&\n    req.body.publication_id\n  ) {\n    try {\n      await Ctrl.editPublication(req.body);\n      const publication = await Ctrl.getPublication({\n        id: req.body.publication_id\n      });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited publication',\n        data: publication\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Publication not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewEmployees', async (req, res) => {\n  try {\n    const publications = await Ctrl.getEmployees();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all emps',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.post('/api/publication/viewEmployeeCoworkers', async (req, res) => {\n  if (req.body.empid) {\n    try {\n      const publications = await Ctrl.getEmployeeCoworkers(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched all possible coworkers',\n        data: publications\n      });\n    } catch (status) {\n      let message = '';\n\n      switch (status) {\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n\n      res.status(200).json({ status, message });\n    }\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewCoworkers', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const publications = await Ctrl.getCoworkers(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched all coworkers',\n        data: publications\n      });\n    } catch (status) {\n      let message = '';\n\n      switch (status) {\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n\n      res.status(200).json({ status, message });\n    }\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/deleteCoworkers', async (req, res) => {\n  if (req.body.id) {\n    try {\n      // const publication = await Ctrl.getPublication(req.body);\n      await Ctrl.removeCoworkers(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed coworkers'\n        // data: publication\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Publication not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// gets coworkers of a publication\nrouter.post('/api/publication/getCoworkers', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const publications = await Ctrl.getCoworkers(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched all emps',\n        data: publications\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Publication not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n\n      res.status(200).json({ status, message });\n    }\n  }\n});\n\nvar storage = multer.diskStorage({\n  destination: function(req, file, cb) {\n    cb(null, 'src/uploads/');\n  },\n  filename: function(req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now() + '.pdf');\n  }\n});\n\nvar upload = multer({ storage: storage }).any();\n\nrouter.post('/api/publication/attach', function(req, res, next) {\n  upload(req, res, err => {\n    if (err) {\n      console.log('sux');\n    } else {\n      console.log(req.File);\n      console.log('success');\n    }\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// gets a publication by id\nexport const getPublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          CALL view_publication_by_ID(?);\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all publications\nexport const getPublications = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      CALL view_employee_publication(?);\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a publication\nexport const addPublication = ({\n  credit_units,\n  category,\n  subcategory,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    if (start_date === '' || end_date === '') {\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        emp_id\n      ];\n      const queryString = SqlString.format(\n        `\n          INSERT INTO PUBLICATION values(NULL, ?, ?, ?, ?, ?, ?, NULL, NULL, NULL, ?);\n        `,\n        values\n      );\n\n      db.query(queryString, (err, results) => {\n        if (err) {\n          console.log(err);\n          console.log('ERROR!!');\n          return reject(500);\n        }\n\n        return resolve(results.insertId);\n      });\n    } else {\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        start_date,\n        end_date,\n        emp_id\n      ];\n      const queryString = SqlString.format(\n        `\n          INSERT INTO PUBLICATION values(NULL, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?);\n        `,\n        values\n      );\n\n      db.query(queryString, (err, results) => {\n        if (err) {\n          console.log(err);\n          console.log('ERROR!!');\n          return reject(500);\n        }\n\n        return resolve(results.insertId);\n      });\n    }\n  });\n};\n\nexport const addPublicationLog = ({ title }) => {\n  return new Promise((resolve, reject) => {\n    const values = [title];\n    const queryString = SqlString.format(\n      `\n        call insert_log(concat(\"Publication with title\", ?, \" has been added to the table PUBLICATION\"));\n        `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        console.log('ERROR!!');\n        return reject(500);\n      }\n\n      return resolve(results);\n    });\n  });\n};\n\n// adds a coworker\nexport const addCoworker = ({ coworker_id, publication_id }) => {\n  return new Promise((resolve, reject) => {\n    const values = [coworker_id, publication_id];\n    const queryString = SqlString.format(\n      `\n            CALL insert_coworker(?, ?);\n        `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a publication\nexport const removePublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      CALL delete_publication(?);\n    `,\n      [id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a publication\nexport const editPublication = ({\n  credit_units,\n  category,\n  subcategory,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  publication_id\n}) => {\n  return new Promise((resolve, reject) => {\n    if (start_date === '' || end_date === '') {\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        publication_id\n      ];\n      const queryString = SqlString.format(\n        `\n        CALL update_publication(?, ?, ?, ?, ?, ?, null, null, ?);\n      `,\n        values\n      );\n\n      db.query(queryString, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    } else {\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        start_date,\n        end_date,\n        publication_id\n      ];\n      const queryString = SqlString.format(\n        `\n        CALL update_publication(?, ?, ?, ?, ?, ?, ?, ?, ?);\n      `,\n        values\n      );\n\n      db.query(queryString, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    }\n  });\n};\n\n// gets employees\nexport const getEmployees = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT * from EMPLOYEE;\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets all employee except self\nexport const getEmployeeCoworkers = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      SELECT * from EMPLOYEE WHERE emp_id != ?;\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// removes coworkers of a publication\nexport const removeCoworkers = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      CALL delete_coworker(?);\n    `,\n      [id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// gets all coworkers of a publication\nexport const getCoworkers = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      SELECT c.emp_id, e.f_name, e.l_name FROM COWORKER c, EMPLOYEE e WHERE c.emp_id = e.emp_id and publication_id = ?;\n    `,\n      [id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/controller.js","module.exports = require(\"multer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer\"\n// module id = 19\n// module chunks = 0","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\nconst nameRegex = /^[A-Za-z\\-'\\s]+$/;\nconst alphanumRegex = /^[A-Za-z0-9]+$/;\nconst passRegex = /^[A-Za-z0-9\\-_.]+$/;\nconst empIdRegex = /^[0-9]{9}$/;\nconst emailRegex = /^[^;\"']+@up.edu.ph$/;\n\nrouter.post('/api/signup', async (req, res) => {\n  if (\n    req.body.emp_id &&\n    req.body.emp_id.match(empIdRegex) &&\n    req.body.username &&\n    req.body.username.match(alphanumRegex) &&\n    req.body.password &&\n    req.body.password.length >= 6 &&\n    req.body.password.length <= 16 &&\n    req.body.password.match(passRegex) &&\n    req.body.type &&\n    req.body.f_name &&\n    req.body.f_name.match(nameRegex) &&\n    req.body.m_name &&\n    req.body.m_name.match(nameRegex) &&\n    req.body.l_name &&\n    req.body.l_name.match(nameRegex) &&\n    req.body.department &&\n    req.body.college &&\n    req.body.emp_type &&\n    req.body.is_full_time &&\n    req.body.email &&\n    req.body.email.match(emailRegex)\n  ) {\n    try {\n      const id = await Ctrl.addEmployee(req.body);\n      // const employee = await Ctrl.getEmployee({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created employee'\n        // data: employee\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// get users\nrouter.post('/api/checkValid', async (req, res) => {\n  if (\n    req.body.empid &&\n    req.body.empid.match(empIdRegex) &&\n    req.body.username &&\n    req.body.username.match(alphanumRegex) &&\n    req.body.email &&\n    req.body.email.match(emailRegex)\n  ) {\n    try {\n      const data = await Ctrl.checkValid(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched users',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'User not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n//adds an employee\nexport const addEmployee = ({\n  emp_id,\n  username,\n  password,\n  type,\n  f_name,\n  m_name,\n  l_name,\n  department,\n  college,\n  emp_type,\n  emp_type_no,\n  is_full_time,\n  email\n}) => {\n  return new Promise((resolve, reject) => {\n    const values = [\n      emp_id,\n      username,\n      password,\n      type,\n      f_name,\n      m_name,\n      l_name,\n      department,\n      college,\n      emp_type,\n      emp_type_no,\n      is_full_time,\n      email\n    ];\n    const queryString = SqlString.format(\n      `\n      CALL insert_employee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 1, 0);\n    `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      // console.log(results);\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// gets an employee\nexport const getEmployee = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id_increment = ?;\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets an employee\nexport const checkValid = ({ empid, username, email }) => {\n  return new Promise((resolve, reject) => {\n    const values = [empid, username, email];\n    const queryString = SqlString.format(\n      `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id = ? OR\n            username = ? OR\n            email = ?\n        `,\n      values\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/studyload/add', async (req, res) => {\n  // console.log(req.body);\n  if (req.body.credits &&\n      req.body.courseno &&\n      req.session.user.emp_id &&\n      req.body.start_time &&\n      req.body.end_time &&\n      req.body.school &&\n      req.body.days\n     ){\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addStudyLoad(req.body,req.session.user);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created study load'//,\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/delete', async (req, res) => {\n  console.log(req.body);\n  if (req.body.studyload_id) {\n    try {\n      const book = await Ctrl.getStudyLoad([req.body.studyload_id]);\n      await Ctrl.removeStudyLoad(req.body);\n      await Ctrl.removeStudyLoadDays(req.body.studyload_id);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed study load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/edit', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.studyload_id &&\n    req.body.credits &&\n    req.body.courseno &&\n    req.body.start_time &&\n    req.body.school &&\n    req.body.days &&\n    req.session.user\n  ) {\n    try {\n      await Ctrl.editStudyLoad(req.body,req.session.user.emp_id);\n      const sample = await Ctrl.getStudyLoad( \n        [req.body.studyload_id\n      ]);\n      await Ctrl.removeStudyLoadDays(req.body.studyload_id);\n      await Ctrl.addDays(req.body.studyload_id,req.body.days);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study load',\n        // data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyEmp(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Study load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\nrouter.post('/api/studyload/viewByStudyloadId', async (req, res) => {\n  console.log(req.body);\n  if(\n    req.session.user &&\n    req.body.studyload_id\n  ){\n    try {\n      const book = await Ctrl.getStudyLoad(req.body.studyload_id);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched study load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Study load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n  });\n\nrouter.get('/api/studyload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllStudyLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all studyload',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\nrouter.get('/api/studyload/viewStudyCredentials', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyCredentials(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study credentials',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Credentials not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/studyload/editStudyCredentials', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.degree &&\n    req.body.uni &&\n    req.body.studyleave &&\n    req.body.fellowship &&\n    req.session.user\n  ) {\n    try {\n      await Ctrl.editStudyCredentials(req.body,req.session.user.emp_id);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study credentials',\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\nrouter.post('/api/studyload/getDays',async(req,res)=>{\n  if(req.body.studyload_id &&\n      req.session.user.emp_id\n  ){\n   try{\n    const out = await Ctrl.getDays(req.body.studyload_id);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully got days',\n      data: out\n    });\n  } catch (status) {\n    res.status(500).json({ status: 500, message: 'Internal server error' });\n  }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });    \n  }\n})\nrouter.post('/api/studyload/getStudyLoadFSR',async(req,res)=>{\n  if(req.body.emp_id &&\n      req.session.user.emp_id\n  ){\n   try{\n    const out = await Ctrl.getStudyEmp(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully got Studyload',\n      data: out\n    });\n  } catch (status) {\n    res.status(500).json({ status: 500, message: 'Internal server error' });\n  }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });    \n  }\n})\nrouter.post('/api/studyload/getStudyLoadCredentialsFSR',async(req,res)=>{\n  if(req.body.emp_id &&\n      req.session.user.emp_id\n  ){\n   try{\n    const out = await Ctrl.getStudyCredentials(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully got Studyload',\n      data: out\n    });\n  } catch (status) {\n    res.status(500).json({ status: 500, message: 'Internal server error' });\n  }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });    \n  }\n})\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/router.js","import db from '../../database';\n\nexport const addStudyLoad = (json,json2) => {\n  const credits = json.credits;\n  const courseno = json.courseno;\n  const start_time = json.start_time;\n  const end_time = json.end_time;\n  const school = json.school;\n  const days = json.days\n  const emp_id = json2.emp_id;\n\n  function send_response(err, result, args, last_query) {\n    if(err) {\n      return res.status(500).send(err);\n    }\n    return res.status(200).send(result);\n}\n\nfunction insertDays(error,results,fields) {\n  const queryString = \"Insert into STUDYLOAD_DAY VALUES (?,?)\"\n  const tempid = results[0].id;\n  days.forEach(item => {\n    db.query(queryString, [tempid, item]);\n  },send_response);\n}\n\nfunction getTempID(error, results, fields) {\n  if (error) throw new Error(error);\n  // const queryString = \"SELECT studyload_id from STUDYLOAD where credits = ? and course_no = ? and emp_id = ? and start_time = ? and end_time = ? and school = ?\"\n  const queryString = \" Select max(studyload_id) id from STUDYLOAD\";\n  console.log(values);\n  db.query(queryString,values,insertDays);\n}\n\nfunction start() {\n  const queryString = `call insert_studyload(?, ?, ?,?,?,?)`;\n  db.query(queryString, values, getTempID);\n\n}\n\nconst values = [\n  credits,\n  courseno,\n  emp_id,\n  start_time,\n  end_time,\n  school\n];\nstart();\n\n};\n\nexport const removeStudyLoadDays = (studyload_id)=>{\n  console.log(studyload_id);\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    DELETE FROM STUDYLOAD_DAY WHERE studyload_id = ?\n    `;\n\n    db.query(queryString, studyload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n}\nexport const removeStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call delete_studyload(?)\n    `;\n\n    db.query(queryString, studyload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editStudyLoad = (json,emp_id) => {\n    const studyload_id = json.studyload_id;\n    const credits = json.credits;\n    const courseno = json.courseno;\n    const start_time = json.start_time;\n    const end_time = json.end_time;\n    const school = json.school;\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call update_studyload(?,?,?,?,?,?,?)\n    `;\n\n    const values = [\n      studyload_id,\n      credits,\n      courseno,\n      start_time,\n      end_time,\n      school,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getStudyLoad = ( studyload_id ) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call view_studyload_id_studyload(?)\n        `;\n\n    db.query(queryString, studyload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getStudyEmp = ( json ) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n        call view_employee_studyload(?)\n        `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\nexport const getAllStudyLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call view_studyload()\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\nexport const getStudyCredentials = ( json ) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      SELECT * FROM STUDY_CREDENTIALS WHERE emp_id = ?\n    `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const editStudyCredentials = (json,emp_id) => {\n  const university = json.uni;\n  const degree = json.degree;\n  var fellowship = false;\n  var studyleave = false;\n  if(json.fellowship === \"Yes\"){\n    fellowship = true;\n  }\n  if(json.studyleave === \"Yes\"){\n    studyleave = true;\n  }\n\nreturn new Promise((resolve, reject) => {\n  const queryString = `\n  call update_study_credentials(?,?,?,?,?)\n  `;\n\n  const values = [\n    emp_id,\n    degree,\n    university,\n    studyleave,\n    fellowship\n  ];\n\n  db.query(queryString, values, (err, res) => {\n    if (err) {\n      console.log(err);\n      return reject(500);\n    }\n\n    if (!res.affectedRows) {\n      return reject(403);\n    }\n\n    return resolve();\n  });\n});\n};\n\nexport const getDays = ( studyload_id) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    Select * from STUDYLOAD_DAY WHERE studyload_id = ?\n    `;\n\n    db.query(queryString, studyload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\nexport const addDays = (studyload_id,days)=>{\n  const queryString = \"Insert into STUDYLOAD_DAY VALUES (?,?)\"\n  days.forEach(item => {\n    db.query(queryString, [studyload_id, item]);\n  })\n}\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\nimport { isNull } from 'util';\n\nconst router = Router();\n\nrouter.post('/api/teachload/add', async (req, res) => {\n  if (\n    req.body.no_of_students &&\n    req.body.subject_code &&\n    req.body.section_code \n  ) {\n    try {\n      const existHourTeachLoad = await Ctrl.checkExistHourTeachLoad(req.body, req.session.user);    //If value > 1 then there is an overlapping schedule with the hour\n      const existDayTeachLoad = await Ctrl.checkExistDayTeachLoad(req.body, req.session.user);      //If value > 1 then there is an overlapping schedule within the day\n      const existHourConsultation = await Ctrl.checkExistHourConsultation(req.body, req.session.user);\n      const existDayConsultation = await Ctrl.checkExistDayConsultation(req.body, req.session.user);\n      if((existDayConsultation==0||existHourConsultation==0)&&(existHourTeachLoad==0||existDayTeachLoad==0)){\n        const id = await Ctrl.addTeachLoad(req.body, req.session.user);\n        const sample = await Ctrl.getTeachLoad({teachingload_id: id});\n\n        res.status(200).json({\n          status: 200,\n          message: 'Successfully created teaching load',\n          data: sample\n        });\n      }else{\n        res.status(400).json({\n          status: 400,\n          message: 'Overlapping schedule error'\n        });\n      }\n     \n        \n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/delete/', async (req, res) => {\n  if (req.body.teachingload_id) {\n    try {\n      const book = await Ctrl.getTeachLoad(req.body);\n      await Ctrl.removeTeachLoad(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed teach load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/edit/', async (req, res) => {\n  if (\n    req.body.no_of_students &&\n    req.body.subject_code &&\n    req.body.section_code &&\n    req.body.teachingload_id\n  ) {\n    try {\n      await Ctrl.editTeachLoad(req.body);\n      const sample = await Ctrl.getTeachLoad({\n        teachingload_id: req.body.teachingload_id\n      });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachingload/viewByTeachloadId', async (req, res) => {\n  console.log(req.body);\n  if(\n    req.session.user &&\n    req.body.teachingload_id\n  ){\n    try {\n      const book = await Ctrl.getTeachLoad(req.body.teachingload_id);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched study load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Study load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n  });\n\nrouter.post('/api/teachload/viewempadmin', async (req, res) => {\n  console.log(req.body.emp_id);\n  if(req.body.emp_id){    \n    try {\n      const book = await Ctrl.getTeachEmpAdmin(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched teach load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Teach load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n\nrouter.post('/api/teachload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getTeachEmp(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched teach load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Teach load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/teachload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllTeachLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all teaching load',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nrouter.post('/api/teachload/editAddTeachLoadUnits/', async (req, res) => {\n  if (\n    req.body.units\n  ) {\n    try {\n      await Ctrl.editAddTeachLoadUnits(req.body, req.session.user);\n      const sample = await Ctrl.getEmployee(req.session.user);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/editRemoveTeachLoadUnits/', async (req, res) => {\n  if (\n    req.body.units\n  ) {\n    try {\n      await Ctrl.editRemoveTeachLoadUnits(req.body, req.session.user);\n      const sample = await Ctrl.getEmployee(req.session.user);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachingload/viewByTeachloadId', async (req, res) => {\n  console.log(req.body);\n  if(\n    req.body.teachingload_id\n  ){\n    try {\n      const book = await Ctrl.getTeachLoad(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched teach load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Teach load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n  });\n\nrouter.post('/api/teachload/subjectByTeachId', async (req, res) => {\n  // console.log(\"BODY: \"+req.body.teachingload_id);\n  if(\n    req.body.teachingload_id\n  ){\n  try {\n    const book = await Ctrl.getSubjectByTeachLoad(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched subject',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Subject not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n}else{\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/router.js","import db from '../../database';\n\nexport const addTeachLoad = ({ no_of_students, subject_code, section_code, room, days, start_time, end_time, creditw},json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      INSERT INTO TEACHINGLOAD\n          (emp_id, no_of_students, subject_id)\n        VALUES\n          (?, ?, (SELECT subject_id FROM SUBJECT \n                  WHERE subject_code = ? AND\n                        section_code = ? limit 1));\n    `;\n    //FIX QUERY LATER ON ADD SUBJECT IF SUBJECT DOES NOT EXIST\n    // console.log(no_of_students);\n    const values = [emp_id, no_of_students, subject_code, section_code];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const checkExistDayTeachLoad = ({ subject_code, section_code}, json) =>{\n  return new Promise((resolve, reject) =>{\n    const emp_id = json.emp_id;\n\n                      const queryString = `\n                        SELECT COUNT(*) as count FROM\n                        (SELECT day from SUBJECT_DAY where subject_id = (SELECT subject_id from SUBJECT where subject_code = ? and section_code = ? ))a,\n                        (SELECT day from SUBJECT_DAY where subject_id IN (SELECT subject_id FROM SUBJECT NATURAL JOIN TEACHINGLOAD where emp_id = ?))b\n                        WHERE(\n                        a.day=b.day\n                        );\n                      `;\n\n                      // const queryString = `\n                      //   SELECT COUNT(*) as count FROM\n                      //   (SELECT day from SUBJECT_DAY NATURAL JOIN SUBJECT where subject_code = ? and section_code = ?)a,\n                      //   (SELECT day from CONSULTATION_DAY NATURAL JOIN CONSULTATION where emp_id = ?)b\n                      //   WHERE(\n                      //   a.day=b.day);\n                      // `;\n\n    // SELECT COUNT(*) as count FROM\n    // (SELECT day from SUBJECT_DAY NATURAL JOIN SUBJECT where subject_code = 'cmsc 11' and section_code = 'a')a,\n    // (SELECT day from CONSULTATION_DAY NATURAL JOIN CONSULTATION where emp_id = '000000001')b\n    // WHERE(\n    // a.day=b.day);\n\n    // const queryString = `\n    //   SELECT COUNT(*) as count FROM\n    //   (SELECT day from SUBJECT NATURAL JOIN SUBJECT_DAY where subject_code = ? and section_code = ?)a,\n    //   (SELECT day from CONSULTATION_DAY NATURAL JOIN CONSULTATION WHERE emp_id = ?)b,\n    //   (SELECT day FROM SUBJECT NATURAL JOIN SUBJECT_DAY WHERE subject_id IN(SELECT subject_id FROM SUBJECT NATURAL JOIN TEACHINGLOAD where emp_id = ?))c\n    //   WHERE\n    //   a.day = b.day OR a.day = c.day OR b.day = c.day;\n    // `;\n\n    const values = [subject_code, section_code, emp_id];\n    db.query(queryString, values, (err, results) =>{\n      console.log(results);\n      if (err){\n        console.log('swswswswswsw');\n        return reject(500);\n      }\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const checkExistDayConsultation = ({ subject_code, section_code}, json ) =>{\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n\n    const queryString = `\n     SELECT COUNT(*) as count FROM\n     (SELECT day from SUBJECT_DAY NATURAL JOIN SUBJECT where subject_code = ? and section_code = ?)a,\n      (SELECT day from CONSULTATION_DAY NATURAL JOIN CONSULTATION where emp_id = ?)b\n      WHERE(\n      a.day=b.day);\n    `;\n\n    \n    const values = [ subject_code, section_code, emp_id];\n    db.query(queryString, values, (err, results) =>{\n      console.log(results);\n      if(err){\n        console.log('AHHHHHHHHHHHHK');\n        return reject(500);\n      }\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const checkExistHourConsultation = ({ subject_code, section_code}, json ) =>{\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n\n    const queryString = `\n      SELECT COUNT(*) as count FROM\n      (SELECT consultation_start_time,consultation_end_time from CONSULTATION WHERE emp_id = ?)a,\n      (SELECT start_time, end_time FROM SUBJECT WHERE subject_code = ? and section_code = ?)b\n      WHERE(\n      (b.start_time > a.consultation_start_time AND b.start_time < a.consultation_end_time) OR\n      (b.end_time > a.consultation_start_time AND b.end_time < a.consultation_end_time) OR\n      (b.start_time = a.consultation_start_time AND b.end_time = a.consultation_end_time));\n    `;\n\n    const values = [ emp_id, subject_code, section_code];\n    db.query(queryString, values, (err, results) =>{\n      console.log(results);\n      if(err){\n        console.log('Bepis');\n        return reject(500);\n      }\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const checkExistHourTeachLoad = ({ subject_code, section_code}, json) =>{\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    //  const queryString = `\n    //   SELECT COUNT(*) as count FROM (SELECT start_time, end_time FROM SUBJECT \n    //   WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD \n    //   WHERE emp_id = ?))a, (SELECT start_time, end_time FROM \n    //   SUBJECT WHERE subject_code = ? and \n    //   section_code = ? limit 1)b \n    //   WHERE\n    //   (b.start_time < b.end_time and b.end_time < a.start_time) OR \n    //   (b.start_time > a.end_time and b.end_time > b.start_time) OR \n    //   (a.start_time > b.start_time and b.end_time > b.start_time);\n    // `;\n\n    // const queryString = `\n    //   SELECT COUNT(*) as count FROM \n    //   (SELECT start_time, end_time FROM SUBJECT \n    //   WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD \n    //   WHERE emp_id = ?))a, (SELECT start_time, end_time FROM \n    //   SUBJECT WHERE subject_code = ? and \n    //   section_code = ? limit 1)b \n    //   WHERE(\n    //   (b.start_time < b.end_time and b.end_time < a.start_time) OR \n    //   (b.start_time > a.end_time and b.end_time > b.start_time) OR \n    //   (a.start_time > b.start_time and b.end_time > b.start_time) OR\n    //   (b.start_time < a.end_time and b.end_time > a.end_time));\n    //   `;\n\n    const queryString = `\n      SELECT COUNT(*) as count FROM\n      (SELECT start_time,end_time from TEACHINGLOAD NATURAL JOIN SUBJECT WHERE emp_id = ?)a,\n      (SELECT start_time, end_time FROM SUBJECT WHERE subject_code = ? and section_code = ?)b\n      WHERE(\n      (b.start_time > a.start_time AND b.start_time < a.end_time) OR\n      (b.end_time > a.start_time AND b.end_time < a.end_time) OR\n      (b.end_time = a.end_time AND b.start_time = a.start_time));\n    `;\n\n    const values = [emp_id, subject_code, section_code];\n\n    db.query(queryString, values, (err, results) =>{\n      console.log(results);\n      if (err){\n        console.log(\"wsswswswswsws\");\n        return reject(500);\n      }\n\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const removeTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        DELETE \n          FROM TEACHINGLOAD\n        WHERE \n          teachingload_id = ?\n      `;\n\n    db.query(queryString, teachingload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editTeachLoad = ({ no_of_students, emp_id, subject_code, section_code, room, days, start_time, end_time, creditw, teachingload_id}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      UPDATE TEACHINGLOAD\n        SET\n          no_of_students = ?\n        WHERE\n          teachingload_id=?;\n    `;\n   \n    const values = [no_of_students, teachingload_id];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            TEACHINGLOAD\n          WHERE\n            teachingload_id = ?;\n        `;\n\n    db.query(queryString, teachingload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getTeachEmp = (json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n        call view_employee_teachingload(?)\n        `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      var newArray = [];\n      var visitedArray = []; \n      var i, j;\n      for(i=0;i<rows[0].length;i++){\n        var daysArray = [];\n        if(visitedArray.includes(rows[0][i].teachingload_id)){\n\n        }else{\n          for(j=0;j<rows[0].length;j++){\n            if(rows[0][i].teachingload_id==rows[0][j].teachingload_id){\n              daysArray.push(rows[0][j].day);\n            }\n          }\n          rows[0][i].day = daysArray;\n          visitedArray.push(rows[0][i].teachingload_id);\n          newArray.push(rows[0][i]);\n        }\n      }\n\n      return resolve(newArray);\n    });\n  });\n};\n\nexport const getTeachEmpAdmin = ({emp_id}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        call view_employee_teachingload(?);\n        `;\n\n    db.query(queryString, emp_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      var newArray = [];\n      var visitedArray = []; \n      var i, j;\n      for(i=0;i<rows[0].length;i++){\n        var daysArray = [];\n        if(visitedArray.includes(rows[0][i].teachingload_id)){\n\n        }else{\n          for(j=0;j<rows[0].length;j++){\n            if(rows[0][i].teachingload_id==rows[0][j].teachingload_id){\n              daysArray.push(rows[0][j].day);\n            }\n          }\n          rows[0][i].day = daysArray;\n          visitedArray.push(rows[0][i].teachingload_id);\n          newArray.push(rows[0][i]);\n        }\n      }\n\n      return resolve(newArray);\n    });\n  });\n};\n\nexport const getAllTeachLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT *\n          FROM TEACHINGLOAD\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\nexport const editAddTeachLoadUnits = ({ units}, json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      update EMPLOYEE set current_teaching_units=(select current_teaching_units from (select * from EMPLOYEE)e  where e.emp_id=?)+? where emp_id=?;\n    `;\n   \n    const values = [emp_id,units,emp_id];\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editRemoveTeachLoadUnits = ({ units}, json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      update EMPLOYEE set current_teaching_units=(select current_teaching_units from (select * from EMPLOYEE)e  where e.emp_id=?)-? where emp_id=?;\n    `;\n   \n    const values = [emp_id,units,emp_id];\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getSubjectByTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT subj.subject_code, subj.section_code, subj.units, subj.isLecture, subj.isGraduate, tl.no_of_students FROM SUBJECT subj, TEACHINGLOAD tl\n          WHERE\n            subj.subject_id = (select subject_id from\n            TEACHINGLOAD where teachingload_id=?) and teachingload_id=?;\n        `;\n\n      const values=[teachingload_id, teachingload_id];\n    db.query(queryString, values, (err, rows) => {\n      // console.log(queryString);\n      // console.log(teachingload_id);\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getEmployee = (json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      select * from EMPLOYEE where emp_id=?;\n    `;\n   \n    const values = [emp_id];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.length) {\n        return reject(404);\n      }\n\n      return resolve(res[0]);\n    });\n  });\n};\n\n// SELECT COUNT(*) as count FROM \n// (SELECT start_time, end_time FROM SUBJECT \n// WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD \n// WHERE emp_id = ?))a, (SELECT start_time, end_time FROM \n// SUBJECT WHERE subject_code = ? and \n// section_code = ? limit 1)b \n// WHERE(\n// (b.start_time < b.end_time and b.end_time < a.start_time) OR \n// (b.start_time > a.end_time and b.end_time > b.start_time) OR \n// (a.start_time > b.start_time and b.end_time > b.start_time) OR\n// (b.start_time < a.end_time and b.end_time > a.end_time));\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/controller.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 26\n// module chunks = 0","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nconst empidRegex = /^[0-9]{9}$/;\n\n// gets one faculty\nrouter.post('/api/faculty/view', async (req, res) => {\n  if (req.body.id.match(empidRegex)) {\n    try {\n      const faculty = await Ctrl.getFaculty(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched faculty',\n        data: faculty\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// gets all faculty\nrouter.get('/api/faculty/viewAll', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getAllFaculty();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// gets one faculty\nexport const getFaculty = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          call view_employee_by_id(?);\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all faculty\nexport const getAllFaculty = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call view_employee();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nconst empidRegex = /^[0-9]{9}$/;\nconst nameRegex = /^[A-Za-z\\-'\\s]+$/;\n\n// gets all pending fsr\nrouter.post('/api/fsr/viewPending', async (req, res) => {\n  try {\n    const fsr = await Ctrl.getPendingFSR();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched FSRs',\n      data: fsr\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// gets all approved fsr\nrouter.post('/api/fsr/viewApproved', async (req, res) => {\n  try {\n    const fsr = await Ctrl.getApprovedFSR();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched FSRs',\n      data: fsr\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// get a pending fsr by id\nrouter.post('/api/fsr/viewPendingById', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      const data = await Ctrl.getPendingById(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched FSRs',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          data = data;\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get a pending fsr by name\nrouter.post('/api/fsr/viewPendingByName', async (req, res) => {\n  if (req.body.name.match(nameRegex)) {\n    try {\n      const data = await Ctrl.getPendingByName(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched FSRs',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          data: data;\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get an approved fsr by id\nrouter.post('/api/fsr/viewApprovedById', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      const data = await Ctrl.getApprovedById(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched FSRs',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          data = data;\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get an approved fsr by name\nrouter.post('/api/fsr/viewApprovedByName', async (req, res) => {\n  if (req.body.name.match(nameRegex)) {\n    try {\n      const data = await Ctrl.getApprovedByName(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched FSRs',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          data = data;\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// send to admin\nrouter.post('/api/fsr/send', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      await Ctrl.sendToAdmin(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully sent FSR'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/fsr/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// gets all approved fsr\nexport const getApprovedFSR = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT \n            *\n        FROM \n            EMPLOYEE a, \n            EMPLOYEE_FSR b\n        WHERE\n            a.emp_id = b.emp_id\n        AND\n            a.type = \"FACULTY\"\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search an approved fsr by name\nexport const getApprovedByName = ({ name }) => {\n  return new Promise((resolve, reject) => {\n    const values = [name, name, name];\n    const queryString = SqlString.format(\n      `\n        SELECT \n            a.*\n        FROM \n            EMPLOYEE a, \n            EMPLOYEE_FSR b\n        WHERE\n            a.emp_id = b.emp_id\n        AND\n            a.type = \"FACULTY\"\n        AND\n            (a.f_name = ? OR\n            a.m_name = ? OR\n            a.l_name = ?);\n        `,\n      values\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search an approved fsr by id\nexport const getApprovedById = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n        SELECT \n            a.*\n        FROM \n            EMPLOYEE a, \n            EMPLOYEE_FSR b\n        WHERE\n            a.emp_id = b.emp_id\n        AND\n            a.type = \"FACULTY\"\n        AND\n            a.emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets all pending FSR\nexport const getPendingFSR = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    SELECT \n        *\n    FROM \n        EMPLOYEE\n    WHERE\n        is_being_approved = 1\n    AND\n        type = \"FACULTY\";\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search a pending fsr by name\nexport const getPendingByName = ({ name }) => {\n  return new Promise((resolve, reject) => {\n    const values = [name, name, name];\n    const queryString = SqlString.format(\n      `\n        SELECT \n            *\n        FROM \n          (SELECT * FROM EMPLOYEE WHERE is_being_approved = 1 AND type = \"FACULTY\") AS PENDING\n        WHERE\n            PENDING.f_name = ? OR PENDING.m_name = ? OR PENDING.l_name = ?;\n        `,\n      values\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search a pending fsr by id\nexport const getPendingById = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n        SELECT \n          *\n        FROM \n          EMPLOYEE\n        WHERE\n          is_being_approved = 1\n        AND\n          type = \"FACULTY\"\n        AND\n          emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// sends fsr to data\nexport const sendToAdmin = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      UPDATE EMPLOYEE\n      SET\n        is_being_approved = 1\n      WHERE\n        emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/fsr/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/position/add', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.office &&\n    req.body.credit_units &&\n    req.body.nature_of_work &&\n    req.body.emp_id\n  ) {\n    try {\n      const id = await Ctrl.addPosition(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added position'\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/position/delete', async (req, res) => {\n  try {\n    const consultation = await Ctrl.getPosition(req.body);\n    await Ctrl.removePosition(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed position',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//edit a position\nrouter.post('/api/position/edit', async (req, res) => {\n  console.log(req.body);\n  try {\n    await Ctrl.editPosition(req.body);\n    const position = await Ctrl.getPosition({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited position',\n      data: position\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/position/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getPosition(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched position',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/position/viewAll', async (req, res) => {\n  try {\n    const positions = await Ctrl.getAllPositions();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all positions',\n      data: positions\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/router.js","import db from '../../database';\n\n// add position\nexport const addPosition = ({\n  office,\n  credit_units,\n  nature_of_work,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL insert_position(?, ?, ?, ?);\n    `;\n\n    const values = [office, credit_units, nature_of_work, emp_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// get position\nexport const getPosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL\n          view_position_by_ID(?)\n        `;\n\n    db.query(queryString, [id, id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// get all positions\nexport const getAllPositions = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL \n          view_position();\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes position\nexport const removePosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_position(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a position\nexport const editPosition = ({\n  position_id,\n  office,\n  credit_units,\n  nature_of_work,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_position(?, ?, ?, ?, ?);\n    `;\n\n    const values = [position_id, office, credit_units, nature_of_work, emp_id];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n//add a consultation hours\nrouter.post('/api/consulHours/add', async (req, res) => {\n  if (\n    req.body.consultation_start_time &&\n    req.body.consultation_end_time &&\n    req.body.consultation_place &&\n    req.body.day &&\n    req.body.emp_id\n  ) {\n    try {\n      const id = await Ctrl.addConsulHours(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added consultation hours'\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n//delete a consultation hours\nrouter.post('/api/consulHours/delete', async (req, res) => {\n  try {\n    // const consultation = await Ctrl.getConsultation({ id: req.body.id });\n    console.log(req.body);\n    await Ctrl.removeConsulHours({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed consulation hours',\n      data: []\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation hours not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//edit a consultation hours\nrouter.post('/api/consulHours/edit', async (req, res) => {\n  try {\n    await Ctrl.editConsulHours(req.body);\n    const consultation = await Ctrl.getConsultation({\n      id: req.body.consultation_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited consultation hour',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//view all consultation hours\nrouter.get('/api/consulHours/viewAll', async (req, res) => {\n  try {\n    const consultations = await Ctrl.getAllConsulHours();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all consultations',\n      data: consultations\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nrouter.get('/api/consulHours/view', async (req, res) => {\n  try {\n    console.log(req.body);\n    const book = await Ctrl.getConsultation(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched consultation',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/router.js","import db from '../../database';\n\nexport const addConsulHours = ({\n  consultation_start_time,\n  consultation_end_time,\n  consultation_place,\n  day,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL \n      insert_consultation(?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      consultation_start_time,\n      consultation_end_time,\n      consultation_place,\n      day,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes consultation hours\nexport const removeConsulHours = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    CALL \n    delete_consultation(?)\n     \n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// get a consultation hour\nexport const getConsultation = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL\n          view_consultation_by_ID(?);\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n//gets all consultation hours\nexport const getAllConsulHours = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        view_consultation()\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const editConsulHours = ({\n  consultation_start_time,\n  consultation_end_time,\n  consultation_place,\n  day,\n  consultation_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n     CALL \n     update_consultation(?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      consultation_start_time,\n      consultation_end_time,\n      consultation_place,\n      day,\n      consultation_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// get a faculty grant by emp id\nrouter.post('/api/facultygrant/viewEmp', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getAllFacultyGrantByEmp(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets a faculty grant by id\nrouter.get('/api/facultygrant/view', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\n// gets a faculty grant by id\nrouter.get('/api/facultygrant/viewAll', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getAllFacultyGrant(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a faculty grant\nrouter.post('/api/facultygrant/add', async (req, res) => {\n  if (\n    req.body\n  ) {\n    try {\n      const id = await Ctrl.addFacultyGrant(req.body);\n     // const facultygrant = await Ctrl.getFacultyGrant({faculty_grant_id: id});\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created faculty grant',\n        // data: facultygrant\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\n// removes a faculty grant\nrouter.post('/api/facultygrant/delete', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    await Ctrl.removeFacultyGrant(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a facultygrant\nrouter.post('/api/facultygrant/edit', async (req, res) => {\n  try {\n    await Ctrl.editFacultyGrant(req.body);\n    // const facultygrant = await Ctrl.getAllFacultyGrantByEmp(req.body)({\n    //   emp_id: req.body.emp_id\n    // });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited faculty grant',\n      // data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/router.js","import db from '../../database';\n\n//adds a faculty grant\n  export const addFacultyGrant = ({emp_id}) => {\n    console.log({emp_id})\n    return new Promise((resolve, reject) => {\n      const queryString = `\n        CALL \n        insert_faculty_grant(NULL, NULL, NULL, NULL, NULL, NULL, NULL, ?);\n      `;\n      const values = [emp_id];\n  \n      db.query(queryString,values, (err, results) => {\n        if (err) {\n          console.log(err.message);\n          return reject(500);\n        }\n        return resolve(results.insertId);\n      });\n    });\n  };\n  \n// gets all faculty\n  export const getAllFacultyGrant = () => {\n    return new Promise((resolve, reject) => {\n      const queryString = `\n        CALL view_faculty_grant();\n      `;\n  \n      db.query(queryString, (err, rows) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n  \n        if (!rows.length) {\n          return reject(404);\n        }\n  \n        return resolve(rows);\n      });\n    });\n  };\n  \n// gets a faculty grant by id\nexport const getFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            FACULTYGRANT\n          WHERE\n            faculty_grant_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets a faculty grant by id by emp_id\nexport const getAllFacultyGrantByEmp = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_faculty_grant_by_emp_id(?)\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n// removes a faculty grant\nexport const removeFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      delete_faculty_grant();\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve(); \n    });\n  });\n};\n\n// edits a faculty grant\nexport const editFacultyGrant = ({\n  emp_id,\n\ttype,\n\tis_approved,\n\tprofessional_chair,\n\tgrants,\n\tgrant_title,\n\tstart_date,\n\tend_date\n\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL \n      update_faculty_grant(?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      emp_id,\n      type,\n      is_approved,\n      professional_chair,\n      grants,\n      grant_title,\n      start_date,\n      end_date\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/limitedpractice/add', async (req, res) => {\n  if (\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      // const sample = await Ctrl.getLimitedPractice({ limited_practice_id: id });\n      await Ctrl.addLimitedPractice(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created limited practice',\n        // data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\nrouter.post('/api/limitedpractice/delete', async (req, res) => {\n  if (\n    req.body.limited_practice_id\n  ) {\n    try {\n      // const book = await Ctrl.getLimitedPractice(req.body);\n      await Ctrl.removeLimitedPractice(req.body);\n  \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed limited practice',\n        // data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\nrouter.post('/api/limitedpractice/edit', async (req, res) => {\n  if (\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      await Ctrl.editLimitedPractice(req.body);\n      // const sample = await Ctrl.getLimitedPractice({\n      //   limited_practice_id: req.body.limited_practice_id\n      // });\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited limited practice',\n        // data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/limitedpractice/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getLimitedPractice(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched limited practice',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Limited practice not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/limitedpractice/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllLimitedPractice();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all limited practice',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/router.js","import db from '../../database';\n\nexport const addLimitedPractice = ({\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL  \n      insert_limited_practice(?, ?, ?)\n    `;\n    \n    const values = [\n      haveApplied,\n      date_submitted,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n      return resolve(results.insertId);\n    });\n  });\n};\n\n\nexport const removeLimitedPractice = ({ limited_practice_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        delete_limited_practice(?);\n      `;\n\n    db.query(queryString, limited_practice_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\nexport const editLimitedPractice = ({\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  console.log(\"ALOLOLOLO\")\n  return new Promise((resolve, reject) => {\n    if(haveApplied == 1){\n      console.log(\"wtf\")\n      const queryString = `\n          CALL\n          update_limited_practice(?, ?, ?)\n        `;\n\n      const values = [\n        haveApplied,\n        date_submitted,\n        emp_id\n      ];\n\n      db.query(queryString, values, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    }else{\n      \n      const queryString = `\n      CALL\n      update_limited_practice(?, null, ?)\n        `;\n\n      const values = [\n        \n        haveApplied,\n        emp_id\n      ];\n\n      db.query(queryString, values, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    }\n  });\n};\n\nexport const getLimitedPractice = ({ emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL\n          view_limited_practice_by_emp_id(?)\n        `;\n\n    db.query(queryString, emp_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllLimitedPractice = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        view_limited_practice()\n      `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\nconst nameRegex = /^[A-Za-z\\-'\\s]+$/;\nconst alphanumRegex = /^[A-Za-z0-9]+$/;\nconst passRegex = /^[A-Za-z0-9\\-_.]+$/;\nconst empIdRegex = /^[0-9]{9}$/;\nconst emailRegex = /^[^;\"']+@up.edu.ph$/;\n\n// edits the faculty\nrouter.post('/api/faculty/edit', async (req, res) => {\n  if (\n    req.body.empid &&\n    req.body.empid.match(empIdRegex) &&\n    req.body.username &&\n    req.body.username.match(alphanumRegex) &&\n    req.body.password &&\n    req.body.password.length >= 6 &&\n    req.body.password.length <= 16 &&\n    req.body.password.match(passRegex) &&\n    req.body.fname &&\n    req.body.fname.match(nameRegex) &&\n    req.body.mname &&\n    req.body.mname.match(nameRegex) &&\n    req.body.lname &&\n    req.body.lname.match(nameRegex) &&\n    req.body.emptype &&\n    req.body.emptypeno &&\n    req.body.email &&\n    req.body.email.match(emailRegex) &&\n    req.body.college &&\n    req.body.dept &&\n    req.body.is_full_time\n  ) {\n    try {\n      await Ctrl.editFaculty(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited faculty'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// edits the semester information\nrouter.post('/api/faculty/termEdit', async (req, res) => {\n  if (\n    req.body.year &&\n    req.body.term &&\n    req.body.empid &&\n    req.body.empid.match(empIdRegex) &&\n    req.body.isnew\n  ) {\n    try {\n      await Ctrl.editTerm(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited term information'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get the faculty data\nrouter.post('/api/faculty/data', async (req, res) => {\n  if (req.body.empid && req.body.empid.match(empIdRegex)) {\n    try {\n      const data = await Ctrl.getData(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched faculty data',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/profile/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// edits the faculty\nexport const editFaculty = ({\n  empid,\n  username,\n  password,\n  fname,\n  mname,\n  lname,\n  dept,\n  college,\n  emptype,\n  emptypeno,\n  email,\n  is_full_time\n}) => {\n  return new Promise((resolve, reject) => {\n    const values = [\n      empid,\n      username,\n      password,\n      fname,\n      mname,\n      lname,\n      dept,\n      college,\n      emptype,\n      emptypeno,\n      email,\n      is_full_time\n    ];\n    const queryString = SqlString.format(\n      `\n      call update_employee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 1, 0);\n    `,\n      values\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits the faculty\nexport const editTerm = ({ empid, year, term, isnew }) => {\n  return new Promise((resolve, reject) => {\n    const values = [year, term, isnew, empid];\n    const queryString = SqlString.format(\n      `\n    UPDATE \n      EMPLOYEE\n    SET \n      year = ?,\n      semester = ?,\n      is_new = ?\n    WHERE \n      emp_id = ?;\n    `,\n      values\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// gets faculty data\nexport const getData = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id = ?\n        `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/profile/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\nconst empidRegex = /^[0-9]{9}$/;\nconst nameRegex = /^[A-Za-z\\-'\\s]+$/;\n\n// enable faculty\nrouter.post('/api/admin/enable', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      await Ctrl.enableFaculty(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully enabled faculty'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// disable faculty\nrouter.post('/api/admin/disable', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      await Ctrl.disableFaculty(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully disabled faculty'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get a faculty by id\nrouter.post('/api/faculty/searchById', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      const data = await Ctrl.getFacultyById(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched faculty',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get a faculty by name\nrouter.post('/api/faculty/searchByName', async (req, res) => {\n  if (req.body.name.match(nameRegex)) {\n    try {\n      const data = await Ctrl.getFacultyByName(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched faculties',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/admin/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// enables a faculty\nexport const enableFaculty = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      UPDATE EMPLOYEE\n      SET\n        is_active = 1\n      WHERE\n        emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// disables a faculty\nexport const disableFaculty = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n        UPDATE EMPLOYEE\n        SET\n          is_active = 0\n        WHERE\n          emp_id = ?\n      `,\n      [empid]\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// search a faculty by name\nexport const getFacultyByName = ({ name }) => {\n  return new Promise((resolve, reject) => {\n    var values = [name, name, name];\n    const queryString = SqlString.format(\n      `\n        SELECT \n            *\n        FROM \n            EMPLOYEE\n        WHERE\n            f_name = ? OR\n            m_name = ? OR\n            l_name = ?\n        `,\n      values\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search a faculty by id\nexport const getFacultyById = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n        SELECT \n        *\n        FROM \n        EMPLOYEE\n        WHERE\n        emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/admin/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets samples\nrouter.post('/api/subject/viewAll', async (req, res) => {\n  try {\n    const subject = await Ctrl.getSubjects();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all subjects',\n      data: subject\n    }); \n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// gets samples\nrouter.post('/api/subject/viewsubject', async (req, res) => {\n  try {\n    const subject = await Ctrl.getSubject(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched subject',\n      data: subject\n    }); \n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a sample\nrouter.post('/api/subject/add', async (req, res) => {\n  if (\n    req.body.subject_code &&\n    req.body.section_code &&\n    req.body.units &&\n    req.body.room &&\n    req.body.start_time &&\n    req.body.end_time\n  ) {\n    try {\n      const id = await Ctrl.addSubject(req.body);\n      //const subject = await Ctrl.getSubject({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created subject',\n        data: subject\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a subject\nrouter.delete('/api/subject/remove', async (req, res) => {\n  try {\n    const subject = await Ctrl.getSubject(req.params);\n    await Ctrl.removeSubject(req.params);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed subject',\n      data: subject\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Sample not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\n// edits a subject\nrouter.put('/api/subject/edit', async (req, res) => {\n  try {\n    await Ctrl.editSubject(req.body);\n    const subject = await Ctrl.getSubject({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited subject',\n      data: subject\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Subject not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/subject/router.js","import db from '../../database';\n\n\nexport const getSubject = ({ subject_code, section_code }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            SUBJECT\n          WHERE\n            subject_code = ? and section_code = ?;\n        `;\n    const values = [subject_code, section_code]\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all subjects\nexport const getSubjects = () => {\n  return new Promise((resolve, reject) => {\n    // const queryString = `\n      // CALL view_subjects()\n    // `;\n    const queryString = `\n      SELECT * FROM SUBJECT;\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a sample\nexport const addSubject = ({ subject_code, section_code, isLecture, units, room, start_time, end_time }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL add_subject(?,?,?,?,?,?,?)`;\n\n    const values = [subject_code, section_code, isLecture, units, room, start_time, end_time];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a sample\nexport const removeSubject = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_subject(?)\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\nexport const editSubject = ({subject_id, subject_code, section_code, isLecture, units, room, start_time, end_time}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `CALL update_subject(?, ?, ?, ?, ?, ?, ?, ?)\n    `;\n\n    const values = [subject_id, subject_code, section_code, isLecture, units, room, start_time, end_time];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getSubjectDay = (json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    // const queryString = \n    // `\n    //       SELECT \n    //         CONCAT(\n    //         (SELECT subject_code,section_code, room,start_time,end_time FROM SUBJECT WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD WHERE emp_id = ?)),\n    //         (SELECT no_of_students FROM TEACHINGLOAD WHERE emp_id = ?), \n    //         (SELECT * FROM SUBJECT_DAY WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD WHERE emp_id = ?)) \n    //         );\n    //     `;\n\n    const queryString =  `\n      SELECT * FROM TEACHINGLOAD JOIN SUBJECT_DAY WHERE SUBJECT_DAY.subject_id = TEACHINGLOAD.subject_id ;\n    `;\n    db.query(queryString, emp_id, (err, results) => {\n      if (err) {\n        return reject(500);\n      }\n\n      if (!results.length) {\n        return reject(404);\n      }\n      console.log(results);\n      return resolve(results);\n    });\n  });\n};\n\n\n// WEBPACK FOOTER //\n// ./src/entities/subject/controller.js"],"sourceRoot":""}