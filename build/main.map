{"version":3,"sources":["webpack:///webpack/bootstrap f74d3bafe305038a60b7","webpack:///external \"express\"","webpack:///./src/database/index.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./src/index.js","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"express-session\"","webpack:///external \"express-mysql-session\"","webpack:///external \"mysql\"","webpack:///./src/router.js","webpack:///./src/entities/auth/router.js","webpack:///external \"regenerator-runtime\"","webpack:///./src/entities/auth/controller.js","webpack:///./src/entities/extensions/router.js","webpack:///./src/entities/extensions/controller.js","webpack:///./src/entities/publications/router.js","webpack:///./src/entities/publications/controller.js","webpack:///./src/entities/studyload/router.js","webpack:///./src/entities/studyload/controller.js","webpack:///./src/entities/teachload/router.js","webpack:///./src/entities/teachload/controller.js","webpack:///./src/entities/facultylist/router.js","webpack:///./src/entities/facultylist/controller.js"],"names":["db","mysql","createConnection","host","user","password","dateStrings","connect","err","console","log","message","query","app","express","MySQLStore","store","sessionStore","use","bodyParser","json","urlencoded","encoded","logger","session","key","secret","resave","saveUninitialized","createDatabaseTable","checkExpirationInterval","expiration","port","process","env","PORT","server","listen","router","Router","post","req","res","body","status","data","login","username","Promise","resolve","reject","queryString","values","rows","length","get","services","service","category","title","no_of_hours","no_of_participants","role","credits","id","serviceAdded","service_id","serviceEdited","getService","getServices","addService","emp_id","results","insertId","removeService","affectedRows","editService","publication","publications","credit_units","funding","start_date","end_date","publication_id","row","getPublication","getPublications","addPublication","addCoworker","coworker_id","checkIfExisting","removePublication","editPublication","degree","university","isFullTime","subject_code","studyload_id","sample","book","subjects","addStudyLoad","removeStudyLoad","editStudyLoad","getStudyLoad","getStudyEmp","getAllStudyLoad","noOfStudents","teachingload_id","params","addTeachLoad","removeTeachLoad","editTeachLoad","getTeachLoad","getTeachEmp","getAllTeachLoad","faculty","getFaculty","getAllFaculty"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f74d3bafe305038a60b7","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","import mysql from 'mysql';\n\nconst db = mysql.createConnection({\n  host: 'localhost',\n  user: 'skydev',\n  password: 'skydev',\n  db: 'skydev',\n  dateStrings: true\n});\n\ndb.connect(err => {\n  if (err) {\n    console.log('Error in connecting to database');\n    console.log(err.message);\n  } else {\n    console.log('Success in connecting to database');\n  }\n});\n\ndb.query('USE skydev');\n\nexport default db;\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/index.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 2\n// module chunks = 0","import express from 'express';\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport session from 'express-session';\nimport store from 'express-mysql-session';\nimport db from './database';\nimport router from './router';\n\nconst app = express();\nconst MySQLStore = store(session);\nconst sessionStore = new MySQLStore({}, db);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ encoded: true }));\napp.use(logger('dev'));\n\napp.use(\n  session({\n    key: 'skydev',\n    secret: 'skydev',\n    resave: true,\n    saveUninitialized: true,\n    store: sessionStore,\n    createDatabaseTable: true,\n    checkExpirationInterval: 900000,\n    expiration: 86400000\n  })\n);\n\napp.use(router);\n\nconst port = process.env.PORT || 3001;\n\nconst server = app.listen(port, () => {\n  console.log(`Server is running at port: ${port}`);\n});\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"express-mysql-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-mysql-session\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"mysql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mysql\"\n// module id = 9\n// module chunks = 0","import { Router } from 'express';\n\n// put import routers here\nimport authRouter from './entities/auth/router';\nimport extensionRouter from './entities/extensions/router';\nimport publicationsRouter from './entities/publications/router';\n//import signupRouter from './entities/signup/router';\nimport studyRouter from './entities/studyload/router';\nimport teachRouter from './entities/teachload/router';\nimport facultyRouter from './entities/facultylist/router';\n//import fsrRouter from './entities/fsrlist/router';\n\nconst router = Router();\n\n// put use statements here\nrouter.use('/', authRouter);\nrouter.use(extensionRouter);\nrouter.use(publicationsRouter);\n//router.use(signupRouter);\nrouter.use(studyRouter);\nrouter.use(teachRouter);\nrouter.use(facultyRouter);\n//router.use(fsrRouter);\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/login', async (req, res) => {\n  try {\n    const user = await Ctrl.login(req.body);\n    req.session.user = user;\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully logged in',\n      data: user\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 500:\n        message = 'Internal server error while logging in';\n        break;\n      case 404:\n        message = 'Wrong credentials';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/logout', (req, res) => {\n  req.session.user = null;\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully logged out'\n  });\n});\n\nrouter.post('/api/session', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully fetched current session',\n    data: req.session.user ? req.session.user : null\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/router.js","module.exports = require(\"regenerator-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime\"\n// module id = 12\n// module chunks = 0","import db from '../../database';\n\nexport const login = ({ username, password }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT \n        *\n      FROM\n        EMPLOYEE\n      WHERE\n        username = BINARY ? and\n        password = BINARY ?\n    `;\n\n    const values = [username, password];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets services\nrouter.get('/api/service/viewAll', async (req, res) => {\n  try {\n    const services = await Ctrl.getServices();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all services',\n      data: services\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// get a service\nrouter.post('/api/service/view', async (req, res) => {\n  try {\n    const service = await Ctrl.getService(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched service',\n      data: service\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a service\nrouter.post('/api/service/add', async (req, res) => {\n  if (\n    req.body.category &&\n    req.body.title &&\n    req.body.no_of_hours >= 0 &&\n    req.body.no_of_participants >= 0 &&\n    req.body.role &&\n    req.body.credits >= 0\n  ) {\n    try {\n      const id = await Ctrl.addService(req.body);\n      const serviceAdded = await Ctrl.getService({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created sample',\n        data: serviceAdded\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a service\nrouter.post('/api/service/delete', async (req, res) => {\n  try {\n    const service = await Ctrl.getService(req.body);\n    await Ctrl.removeService(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed sample',\n      data: service\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Cannot Delete: Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a service\nrouter.post('/api/service/edit', async (req, res) => {\n  try {\n    await Ctrl.editService(req.body);\n    const serviceEdited = await Ctrl.getService({ id: req.body.service_id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited service',\n      data: serviceEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extensions/router.js","import db from '../../database';\n\n// gets a service\nexport const getService = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            SERVICE\n          WHERE\n            service_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all services\nexport const getServices = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      view_service()\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a service\nexport const addService = ({\n  category,\n  title,\n  no_of_hours,\n  no_of_participants,\n  role,\n  credits,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            INSERT INTO SERVICE\n            VALUES (DEFAULT, ?, ?, ?, ?, ?, ?, ?)\n        `;\n\n    const values = [\n      category,\n      title,\n      no_of_hours,\n      no_of_participants,\n      role,\n      credits,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a service\nexport const removeService = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      DELETE \n        FROM SERVICE\n      WHERE \n        service_id = ?\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a sample\nexport const editService = ({\n  category,\n  title,\n  no_of_hours,\n  no_of_participants,\n  role,\n  credits,\n  service_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      UPDATE SERVICE\n      SET\n        category = ?,\n        title = ?,\n        no_of_hours = ?,\n        no_of_participants = ?,\n        role = ?,\n        credits = ?\n      WHERE\n        service_id = ?\n    `;\n\n    const values = [\n      category,\n      title,\n      no_of_hours,\n      no_of_participants,\n      role,\n      credits,\n      service_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extensions/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets a publication by id\nrouter.post('/api/publication/view', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewAll', async (req, res) => {\n  try {\n    const publications = await Ctrl.getPublications();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all publications',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// add a publication\nrouter.post('/api/publication/add', async (req, res) => {\n  if (\n    req.body.credit_units >= 0 &&\n    req.body.category &&\n    req.body.funding &&\n    req.body.title &&\n    req.body.role &&\n    req.body.start_date &&\n    req.body.end_date\n  ) {\n    try {\n      const id = await Ctrl.addPublication(req.body);\n      const publication = await Ctrl.getPublication({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created publication',\n        data: publication\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// add a coworker\nrouter.post('/api/publication/add', async (req, res) => {\n  if (req.body.publication_id) {\n    try {\n      await Ctrl.addCoworker(req.body);\n      const row = Ctrl.checkIfExisting(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added coworker',\n        data: row\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/delete', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.body);\n    await Ctrl.removePublication(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a publication\nrouter.post('/api/publication/edit', async (req, res) => {\n  try {\n    await Ctrl.editPublication(req.body);\n    const publication = await Ctrl.getPublication({\n      id: req.body.publication_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/router.js","import db from '../../database';\n\n// gets a publication by id\nexport const getPublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            PUBLICATION\n          WHERE\n            publication_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all publications\nexport const getPublications = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT *\n      FROM PUBLICATION\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a publication\nexport const addPublication = ({\n  credit_units,\n  category,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            INSERT INTO PUBLICATION\n            VALUES (DEFAULT, ?, ?, ?, ?, ?, ?, ?, ?)\n        `;\n\n    const values = [\n      credit_units,\n      category,\n      funding,\n      title,\n      role,\n      start_date,\n      end_date,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// adds a coworker\nexport const addCoworker = ({ publication_id, coworker_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            INSERT INTO COWORKER\n            VALUES (?, ?)\n        `;\n\n    const values = [publication_id, coworker_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// checks if publication_id and coworker_id exists\nexport const checkIfExisting = ({ publication_id, coworker_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            SELECT * \n            FROM COWORKER\n            WHERE\n            publication_id = ? AND coworker_id = ?\n        `;\n\n    const values = [publication_id, coworker_id];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes a publication\nexport const removePublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      DELETE \n        FROM PUBLICATION\n      WHERE \n        publication_id = ?\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a publication\nexport const editPublication = ({\n  credit_units,\n  category,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  publication_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      UPDATE PUBLICATION\n      SET\n        credit_units = ?,\n        category = ?,\n        funding = ?,\n        title = ?,\n        role = ?,\n        start_date = ?,\n        end_date = ?\n      WHERE\n        publication_id = ?\n    `;\n\n    const values = [\n      credit_units,\n      category,\n      funding,\n      title,\n      role,\n      start_date,\n      end_date,\n      publication_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/studyload/add', async (req, res) => {\n  if (\n    req.body.degree &&\n    req.body.university &&\n    req.body.isFullTime &&\n    req.body.credits &&\n    req.body.emp_id &&\n    req.body.subject_code\n  ) {\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addStudyLoad(req.body);\n      const sample = await Ctrl.getStudyLoad({ studyload_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created study load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/delete', async (req, res) => {\n  if (\n    req.body.studyload_id\n  ) {\n    try {\n      const book = await Ctrl.getStudyLoad(req.body);\n      await Ctrl.removeStudyLoad(req.body);\n  \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed study load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/edit', async (req, res) => {\n  if (\n    req.body.studyload_id &&\n    req.body.degree &&\n    req.body.university &&\n    req.body.isFullTime &&\n    req.body.credits &&\n    req.body.emp_id &&\n    req.body.subject_code\n  ) {\n    try {\n      await Ctrl.editStudyLoad(req.body);\n      const sample = await Ctrl.getStudyLoad({\n        studyload_id: req.body.studyload_id\n      });\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyEmp(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Study load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/studyload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllStudyLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all studyload',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/router.js","import db from '../../database';\n\nexport const addStudyLoad = ({\n  degree,\n  university,\n  isFullTime,\n  credits,\n  emp_id,\n  subject_code\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      INSERT INTO\n      STUDYLOAD\n      (degree, university, isFullTime, credits, emp_id, subject_code)\n      VALUES\n      (?, ?, ?, ?, ?, ?)\n    `;\n\n    const values = [\n      degree,\n      university,\n      isFullTime,\n      credits,\n      emp_id,\n      subject_code\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        DELETE \n          FROM STUDYLOAD\n        WHERE \n          studyload_id = ?\n      `;\n\n    db.query(queryString, studyload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editStudyLoad = ({\n  studyload_id,\n  degree,\n  university,\n  isFullTime,\n  credits,\n  emp_id,\n  subject_code\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        UPDATE STUDYLOAD\n        SET\n          degree = ?,\n          university = ?,\n          isFullTime = ?,\n          credits = ?,\n          emp_id = ?, \n          subject_code = ?\n        WHERE\n          studyload_id = ?\n      `;\n\n    const values = [\n      degree,\n      university,\n      isFullTime,\n      credits,\n      emp_id,\n      subject_code,\n      studyload_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            STUDYLOAD\n          WHERE\n          studyload_id = ?\n        `;\n\n    db.query(queryString, studyload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getStudyEmp = ({ emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            STUDYLOAD\n          WHERE\n          emp_id = ?\n        `;\n\n    db.query(queryString, emp_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getAllStudyLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT *\n        FROM STUDYLOAD\n      `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/teachload/add', async (req, res) => {\n  if (req.body.emp_id && req.body.noOfStudents && req.body.subject_code) {\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addTeachLoad(req.body);\n      const sample = await Ctrl.getTeachLoad({ teachingload_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created teaching load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/delete/', async (req, res) => {\n  if (\n    req.body.teachingload_id\n  ) {\n    try {\n      const book = await Ctrl.getTeachLoad(req.body);\n      await Ctrl.removeTeachLoad(req.body);\n    \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed teach load',\n        data: book\n      });\n      } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/edit/', async (req, res) => {\n  if (\n    req.body.teachingload_id &&\n    req.body.emp_id &&\n    req.body.noOfStudents &&\n    req.body.subject_code\n  ) {\n    try {\n      await Ctrl.editTeachLoad(req.body);\n      const sample = await Ctrl.getTeachLoad({\n        teachingload_id: req.body.teachingload_id\n      });\n    \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n      } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.get('/api/teachload/view/:teachingload_id', async (req, res) => {\n  try {\n    const book = await Ctrl.getTeachLoad(req.params);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched teach load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Teach load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/teachload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllTeachLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all teaching load',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/router.js","import db from '../../database';\n\nexport const addTeachLoad = ({ emp_id, noOfStudents, subject_code }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      INSERT INTO\n      TEACHINGLOAD\n      (emp_id, noOfStudents, subject_code)\n      VALUES\n      (?, ?, ?)\n    `;\n\n    const values = [emp_id, noOfStudents, subject_code];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        DELETE \n          FROM TEACHINGLOAD\n        WHERE \n          teachingload_id = ?\n      `;\n\n    db.query(queryString, teachingload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editTeachLoad = ({\n  teachingload_id,\n  emp_id,\n  noOfStudents,\n  subject_code\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        UPDATE TEACHINGLOAD\n        SET\n          noOfStudents = ?,\n          emp_id = ?,\n          subject_code = ?\n        WHERE\n          teachingload_id = ?\n      `;\n\n    const values = [noOfStudents, emp_id, subject_code,teachingload_id];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            TEACHINGLOAD\n          WHERE\n          teachingload_id = ?\n        `;\n\n    db.query(queryString, teachingload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getTeachEmp = ({ emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            TEACHINGLOAD\n          WHERE\n            emp_id = ?\n        `;\n\n    db.query(queryString, emp_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getAllTeachLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT *\n          FROM TEACHINGLOAD\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets one faculty\nrouter.post('/api/faculty/view', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getFaculty(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets all faculty\nrouter.get('/api/faculty/viewAll', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getAllFaculty();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/router.js","import db from '../../database';\n\n// gets one faculty\nexport const getFaculty = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id = ? and\n            type = 'FACULTY'\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all faculty\nexport const getAllFaculty = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT \n        *\n      FROM \n        EMPLOYEE\n      WHERE\n        type = 'FACULTY'\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/controller.js"],"sourceRoot":""}