{"version":3,"sources":["webpack:///webpack/bootstrap 8dbd6690bce856d4a664","webpack:///external \"express\"","webpack:///./src/database/index.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./src/index.js","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"express-session\"","webpack:///external \"express-mysql-session\"","webpack:///external \"mysql\"","webpack:///./src/router.js","webpack:///./src/entities/auth/router.js","webpack:///external \"regenerator-runtime\"","webpack:///./src/entities/auth/controller.js","webpack:///./src/entities/extension/router.js","webpack:///./src/entities/extension/controller.js","webpack:///./src/entities/publications/router.js","webpack:///./src/entities/publications/controller.js","webpack:///external \"multer\"","webpack:///./src/entities/signup/router.js","webpack:///./src/entities/signup/controller.js","webpack:///./src/entities/studyload/router.js","webpack:///./src/entities/studyload/controller.js","webpack:///./src/entities/teachload/router.js","webpack:///./src/entities/teachload/controller.js","webpack:///external \"util\"","webpack:///./src/entities/facultylist/router.js","webpack:///./src/entities/facultylist/controller.js","webpack:///./src/entities/fsr/router.js","webpack:///./src/entities/fsr/controller.js","webpack:///./src/entities/adminWork/router.js","webpack:///./src/entities/adminWork/controller.js","webpack:///./src/entities/consulHours/router.js","webpack:///./src/entities/consulHours/controller.js","webpack:///./src/entities/facultygrant/router.js","webpack:///./src/entities/facultygrant/controller.js","webpack:///./src/entities/limitedpractice/router.js","webpack:///./src/entities/limitedpractice/controller.js","webpack:///./src/entities/profile/router.js","webpack:///./src/entities/profile/controller.js","webpack:///./src/entities/admin/router.js","webpack:///./src/entities/admin/controller.js","webpack:///./src/entities/subject/router.js","webpack:///./src/entities/subject/controller.js"],"names":["db","mysql","createConnection","host","user","password","dateStrings","connect","err","console","log","message","query","app","express","MySQLStore","store","sessionStore","use","bodyParser","json","urlencoded","encoded","logger","session","key","secret","resave","saveUninitialized","createDatabaseTable","checkExpirationInterval","expiration","port","process","env","PORT","server","listen","router","Router","post","req","res","body","status","data","login","username","Promise","resolve","reject","queryString","values","rows","length","extensions","extension","extension_type","extension_name","no_of_participants","extension_role","credit_unit","funding_agency","id","getExtension","getExtensionByID","getExtensions","addExtension","no_of_hours","start_time","end_time","emp_id","results","insertId","removeExtension","affectedRows","editExtension","extension_id_update","credit_unit_update","extension_name_update","extension_type_update","no_of_hours_update","no_of_participants_update","extension_role_update","start_time_update","end_time_update","funding_agency_update","emp_id_update","multer","require","publication","publications","credit_units","category","title","publication_id","get","storage","diskStorage","destination","file","cb","filename","fieldname","Date","now","upload","any","next","File","getPublication","getPublications","empid","addPublication","subcategory","funding","role","start_date","end_date","addPublicationLog","addCoworker","coworker_id","removePublication","editPublication","getEmployees","getEmployeeCoworkers","removeCoworkers","getCoworkers","type","f_name","m_name","l_name","department","college","emp_type","is_full_time","email","addEmployee","emp_type_no","getEmployee","checkValid","credits","courseno","school","day1","day2","sample","studyload_id","book","subjects","degree","uni","studyleave","fellowship","addStudyLoad","removeStudyLoad","editStudyLoad","getStudyLoad","getStudyEmp","getAllStudyLoad","getStudyCredentials","editStudyCredentials","university","no_of_students","subject_code","section_code","existHourTeachLoad","existDayTeachLoad","existHourConsultation","existDayConsultation","teachingload_id","addTeachLoad","room","days","creditw","checkExistDayTeachLoad","count","checkExistDayConsultation","checkExistHourConsultation","checkExistHourTeachLoad","removeTeachLoad","editTeachLoad","getTeachLoad","getTeachEmp","getAllTeachLoad","faculty","getFaculty","getAllFaculty","fsr","getApprovedFSR","getApprovedByName","name","getApprovedById","getPendingFSR","getPendingByName","getPendingById","sendToAdmin","office","nature_of_work","consultation","position","positions","addPosition","getPosition","getAllPositions","removePosition","editPosition","position_id","consultation_start_time","consultation_end_time","consultation_place","day","consultation_id","consultations","addConsulHours","removeConsulHours","getConsultation","getAllConsulHours","editConsulHours","facultygrant","addFacultyGrant","getAllFacultyGrant","getFacultyGrant","getAllFacultyGrantByEmp","removeFacultyGrant","editFacultyGrant","is_approved","professional_chair","grants","grant_title","haveApplied","date_submitted","limited_practice_id","addLimitedPractice","removeLimitedPractice","editLimitedPractice","getLimitedPractice","getAllLimitedPractice","editFaculty","fname","mname","lname","dept","emptype","emptypeno","editTerm","year","term","isnew","getData","enableFaculty","disableFaculty","getFacultyByName","getFacultyById","subject","units","delete","params","put","getSubject","getSubjects","addSubject","isLecture","removeSubject","editSubject","subject_id","getSubjectDay"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8dbd6690bce856d4a664","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","import mysql from 'mysql';\n\nconst db = mysql.createConnection({\n  host: 'localhost',\n  user: 'skydev',\n  password: 'skydev',\n  db: 'skydev',\n  dateStrings: true\n});\n\ndb.connect(err => {\n  if (err) {\n    console.log('Error in connecting to database');\n    console.log(err.message);\n  } else {\n    console.log('Success in connecting to database');\n  }\n});\n\ndb.query('USE skydev');\n\nexport default db;\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/index.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 2\n// module chunks = 0","import express from 'express';\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport session from 'express-session';\nimport store from 'express-mysql-session';\nimport db from './database';\nimport router from './router';\n\nconst app = express();\nconst MySQLStore = store(session);\nconst sessionStore = new MySQLStore({}, db);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ encoded: true }));\napp.use(logger('dev'));\n\napp.use(\n  session({\n    key: 'skydev',\n    secret: 'skydev',\n    resave: true,\n    saveUninitialized: true,\n    store: sessionStore,\n    createDatabaseTable: true,\n    checkExpirationInterval: 900000,\n    expiration: 86400000\n  })\n);\n\napp.use(router);\n\nconst port = process.env.PORT || 3001;\n\nconst server = app.listen(port, () => {\n  console.log(`Server is running at port: ${port}`);\n});\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"express-mysql-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-mysql-session\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"mysql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mysql\"\n// module id = 9\n// module chunks = 0","import { Router } from 'express';\n\n// put import routers here\nimport authRouter from './entities/auth/router';\nimport extensionRouter from './entities/extension/router';\nimport publicationsRouter from './entities/publications/router';\nimport signupRouter from './entities/signup/router';\nimport studyRouter from './entities/studyload/router';\nimport teachRouter from './entities/teachload/router';\nimport facultyRouter from './entities/facultylist/router';\nimport fsrRouter from './entities/fsr/router';\nimport adminWorkRouter from './entities/adminWork/router';\nimport consulHourRouter from './entities/consulHours/router';\nimport facultygrantRouter from './entities/facultygrant/router';\nimport limitedpracticeRouter from './entities/limitedpractice/router';\nimport profileRouter from './entities/profile/router';\nimport adminRouter from './entities/admin/router';\nimport subjectRouter from './entities/subject/router';\n\nconst router = Router();\n\n// put use statements here\nrouter.use('/', authRouter);\nrouter.use(extensionRouter);\nrouter.use(publicationsRouter);\nrouter.use(signupRouter);\nrouter.use(studyRouter);\nrouter.use(teachRouter);\nrouter.use(facultyRouter);\nrouter.use(fsrRouter);\nrouter.use(adminWorkRouter);\nrouter.use(consulHourRouter);\nrouter.use(facultygrantRouter);\nrouter.use(limitedpracticeRouter);\nrouter.use(profileRouter);\nrouter.use(adminRouter);\nrouter.use(subjectRouter);\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/login', async (req, res) => {\n  try {\n    const user = await Ctrl.login(req.body);\n    req.session.user = user;\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully logged in',\n      data: user\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 500:\n        message = 'Internal server error while logging in';\n        break;\n      case 404:\n        message = 'Wrong credentials';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/logout', (req, res) => {\n  req.session.user = null;\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully logged out'\n  });\n});\n\nrouter.post('/api/session', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully fetched current session',\n    data: req.session.user ? req.session.user : null\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/router.js","module.exports = require(\"regenerator-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime\"\n// module id = 12\n// module chunks = 0","import db from '../../database';\n\nexport const login = ({ username, password }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT \n        *\n      FROM\n        EMPLOYEE\n      WHERE\n        username = BINARY ? and\n        password = BINARY sha2(?,256)\n    `;\n\n    const values = [username, password];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets extension\nrouter.post('/api/extension/viewByID', async (req, res) => {\n  try {\n    const extensions = await Ctrl.getExtensionByID(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all Extensions',\n      data: extensions\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// get a extensions\nrouter.post('/api/extension/view', async (req, res) => {\n  try {\n    const extension = await Ctrl.getExtension(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched Extension',\n      data: extension\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\nrouter.post('/api/extension/viewByID', async (req, res) => {\n  try {\n    const extension = await Ctrl.getExtensionByID(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched Extension',\n      data: extension\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n// add a extension\nrouter.post('/api/extension/add', async (req, res) => {\n  if (\n    req.body.extension_type &&\n    req.body.extension_name &&\n    req.body.no_of_participants >= 0 &&\n    req.body.extension_role &&\n    req.body.credit_unit >= 0 &&\n    req.body.funding_agency\n  ) {\n    try {\n      const id = await Ctrl.addExtension(req.body);\n      // const extensionAdded = await Ctrl.getExtension({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added Extension',\n        // data: extensionAdded\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else{\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes an extension\nrouter.post('/api/extension/delete', async (req, res) => {\n  try {\n    // const extension = await Ctrl.getExtension(req.body);\n    await Ctrl.removeExtension(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed sample',\n      // data: extension\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Cannot Delete: Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a extension\nrouter.post('/api/extension/edit', async (req, res) => {\n  try {\n    await Ctrl.editExtension(req.body);\n    // const extensionEdited = await Ctrl.getExtension({ id: req.body.extension_id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited extension',\n      // data: extensionEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extension/router.js","import db from '../../database';\n\n// gets extensions\nexport const getExtension = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `SELECT * from EXTENSION where emp_id = ?`;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets a extension\nexport const getExtensionByID = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT * from EXTENSION where extension_id = ?;\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n// gets all extensions\nexport const getExtensions = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      view_extension();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a extension\nexport const addExtension = ({\n  credit_unit,\n  extension_name,\n  extension_type,\n  no_of_hours,\n  no_of_participants,\n  extension_role,\n  start_time,\n  end_time,\n  funding_agency,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_extension(?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\n        `;\n\n    const values = [\n      credit_unit,\n      extension_name,\n      extension_type,\n      no_of_hours,\n      no_of_participants,\n      extension_role,\n      start_time,\n      end_time,\n      funding_agency,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a extension\nexport const removeExtension = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_extension(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a sample\nexport const editExtension = ({\n  extension_id_update,\n  credit_unit_update,\n  extension_name_update,\n  extension_type_update,\n  no_of_hours_update,\n  no_of_participants_update,\n  extension_role_update,\n  start_time_update,\n  end_time_update,\n  funding_agency_update,\n  emp_id_update\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_extension(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      extension_id_update,\n      credit_unit_update,\n      extension_name_update,\n      extension_type_update,\n      no_of_hours_update,\n      no_of_participants_update,\n      extension_role_update,\n      start_time_update,\n      end_time_update,\n      funding_agency_update,\n      emp_id_update\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extension/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\nvar multer  = require('multer')\n\nconst router = Router();\n\n// gets a publication by id\nrouter.post('/api/publication/view', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.post('/api/publication/viewAll', async (req, res) => {\n  try {\n    const publications = await Ctrl.getPublications(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all publications',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// add a publication\nrouter.post('/api/publication/add', async (req, res) => {\n  if (\n    req.body.credit_units >= 0 &&\n    req.body.category &&\n    // req.body.funding &&\n    req.body.title\n    // req.body.role &&\n    // req.body.start_date &&\n    // req.body.end_date\n  ) {\n    try {\n      const id = await Ctrl.addPublication(req.body);\n      console.log('title');\n      console.log(req.body.title);\n      // const log = await Ctrl.addPublicationLog(req.body.title);\n      // const publication = await Ctrl.getPublication({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created publication',\n        data: id\n        // data: log\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// add a coworker\nrouter.post('/api/coworker/add', async (req, res) => {\n  if (req.body.publication_id) {\n    try {\n      await Ctrl.addCoworker(req.body);\n      // const row = Ctrl.checkIfExisting(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added coworker',\n        // data: row\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/delete', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.body);\n    await Ctrl.removePublication(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a publication\nrouter.post('/api/publication/edit', async (req, res) => {\n  try {\n    await Ctrl.editPublication(req.body);\n    const publication = await Ctrl.getPublication({\n      id: req.body.publication_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewEmployees', async (req, res) => {\n  try {\n    const publications = await Ctrl.getEmployees();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all emps',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.post('/api/publication/viewEmployeeCoworkers', async (req, res) => {\n  try {\n    const publications = await Ctrl.getEmployeeCoworkers(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all possible coworkers',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewCoworkers', async (req, res) => {\n  try {\n    const publications = await Ctrl.getCoworkers(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all coworkers',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/deleteCoworkers', async (req, res) => {\n  try {\n    // const publication = await Ctrl.getPublication(req.body);\n    await Ctrl.removeCoworkers(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed coworkers'\n      // data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets coworkers of a publication\nrouter.post('/api/publication/getCoworkers', async (req, res) => {\n  try {\n    const publications = await Ctrl.getCoworkers(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all emps',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nvar storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, 'src/uploads/')\n  },\n  filename: function (req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now() + \".pdf\")\n  }\n})\n\nvar upload = multer({ storage: storage }).any();\n\nrouter.post('/api/publication/attach', function (req, res, next) {\n  upload(req, res, (err) => {\n    if(err) {\n      console.log(\"sux\");\n    }else{\n      console.log(req.File);\n      console.log(\"success\");\n    }\n  })\n})\n\nexport default router;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/router.js","import db from '../../database';\n\n// gets a publication by id\nexport const getPublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_publication_by_ID(?);\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all publications\nexport const getPublications = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL view_employee_publication(?);\n    `;\n\n    db.query(queryString, empid, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a publication\nexport const addPublication = ({\n  credit_units,\n  category,\n  subcategory,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    if (start_date === '' || end_date === '') {\n      const queryString = `\n          INSERT INTO PUBLICATION values(NULL, ?, ?, ?, ?, ?, ?, NULL, NULL, NULL, ?);\n        `;\n\n      const values = [credit_units, category, subcategory, funding, title, role, emp_id];\n      db.query(queryString, values, (err, results) => {\n        if (err) {\n          console.log(err);\n          console.log('ERROR!!');\n          return reject(500);\n        }\n\n        return resolve(results.insertId);\n      });\n    } else {\n      const queryString = `\n          INSERT INTO PUBLICATION values(NULL, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?);\n        `;\n\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        start_date,\n        end_date,\n        emp_id\n      ];\n      db.query(queryString, values, (err, results) => {\n        if (err) {\n          console.log(err);\n          console.log('ERROR!!');\n          return reject(500);\n        }\n\n        return resolve(results.insertId);\n      });\n    }\n  });\n};\n\nexport const addPublicationLog = ({ title }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        call insert_log(concat(\"Publication with title\", ?, \" has been added to the table PUBLICATION\"));\n        `;\n\n    const values = [title];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        console.log('ERROR!!');\n        return reject(500);\n      }\n\n      return resolve(results);\n    });\n  });\n};\n\n// adds a coworker\nexport const addCoworker = ({ coworker_id, publication_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_coworker(?, ?);\n        `;\n\n    const values = [coworker_id, publication_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a publication\nexport const removePublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_publication(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a publication\nexport const editPublication = ({\n  credit_units,\n  category,\n  subcategory,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  publication_id\n}) => {\n  return new Promise((resolve, reject) => {\n    if (start_date === '' || end_date === '') {\n      const queryString = `\n        CALL update_publication(?, ?, ?, ?, ?, ?, null, null, ?);\n      `;\n\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        publication_id\n      ];\n\n      db.query(queryString, values, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n\n    }else{\n      const queryString = `\n        CALL update_publication(?, ?, ?, ?, ?, ?, ?, ?, ?);\n      `;\n\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        start_date,\n        end_date,\n        publication_id\n      ];\n\n      db.query(queryString, values, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    }\n  });\n};\n\n// gets employees\nexport const getEmployees = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT * from EMPLOYEE;\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets all employee except self\nexport const getEmployeeCoworkers = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT * from EMPLOYEE WHERE emp_id != ?;\n    `;\n\n    db.query(queryString, empid, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// removes coworkers of a publication\nexport const removeCoworkers = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_coworker(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// gets all coworkers of a publication\nexport const getCoworkers = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT c.emp_id, e.f_name, e.l_name FROM COWORKER c, EMPLOYEE e WHERE c.emp_id = e.emp_id and publication_id = ?;\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results);\n    });\n  });\n};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/controller.js","module.exports = require(\"multer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer\"\n// module id = 18\n// module chunks = 0","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/signup', async (req, res) => {\n  if (\n    req.body.emp_id &&\n    req.body.username &&\n    req.body.password &&\n    req.body.type &&\n    req.body.f_name &&\n    req.body.m_name &&\n    req.body.l_name &&\n    req.body.department &&\n    req.body.college &&\n    req.body.emp_type &&\n    req.body.is_full_time &&\n    req.body.email\n  ) {\n    try {\n      const id = await Ctrl.addEmployee(req.body);\n      // const employee = await Ctrl.getEmployee({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created employee'\n        // data: employee\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// get users\nrouter.post('/api/checkValid', async (req, res) => {\n  try {\n    const data = await Ctrl.checkValid(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched users',\n      data: data\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'User not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/router.js","import db from '../../database';\n\n//adds an employee\nexport const addEmployee = ({\n  emp_id,\n  username,\n  password,\n  type,\n  f_name,\n  m_name,\n  l_name,\n  department,\n  college,\n  emp_type,\n  emp_type_no,\n  is_full_time,\n  email\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL insert_employee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 1, 0);\n    `;\n\n    const values = [\n      emp_id,\n      username,\n      password,\n      type,\n      f_name,\n      m_name,\n      l_name,\n      department,\n      college,\n      emp_type,\n      emp_type_no,\n      is_full_time,\n      email\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      // console.log(results);\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// gets an employee\nexport const getEmployee = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id_increment = ?;\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets an employee\nexport const checkValid = ({ empid, username, email }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id = ? OR\n            username = ? OR\n            email = ?\n        `;\n\n    const values = [empid, username, email];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/studyload/add', async (req, res) => {\n  console.log(req.body);\n  if (req.body.credits &&\n      req.body.courseno &&\n      req.session.user.emp_id &&\n      req.body.start_time &&\n      req.body.end_time &&\n      req.body.school &&\n      req.body.day1 &&\n      req.body.day2){\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addStudyLoad(req.body,req.session.user);\n      const sample = await Ctrl.getStudyLoad(  id );\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created study load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/delete', async (req, res) => {\n  console.log(req.body);\n  if (req.body.studyload_id) {\n    try {\n      const book = await Ctrl.getStudyLoad([req.body.studyload_id]);\n      await Ctrl.removeStudyLoad(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed study load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/edit', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.studyload_id &&\n    req.body.credits &&\n    req.body.courseno &&\n    req.body.start_time &&\n    req.body.school &&\n    req.body.day1 &&\n    req.body.day2 &&\n    req.session.user\n  ) {\n    try {\n      await Ctrl.editStudyLoad(req.body,req.session.user.emp_id);\n      const sample = await Ctrl.getStudyLoad( \n        [req.body.studyload_id\n      ]);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study load',\n        // data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyEmp(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Study load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\nrouter.post('/api/studyload/viewByStudyloadId', async (req, res) => {\n  console.log(req.body);\n  if(\n    req.session.user &&\n    req.body.studyload_id\n  ){\n    try {\n      const book = await Ctrl.getStudyLoad(req.body.studyload_id);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched study load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Study load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n  });\n\nrouter.get('/api/studyload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllStudyLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all studyload',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\nrouter.get('/api/studyload/viewStudyCredentials', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyCredentials(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study credentials',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Credentials not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/studyload/editStudyCredentials', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.degree &&\n    req.body.uni &&\n    req.body.studyleave &&\n    req.body.fellowship &&\n    req.session.user\n  ) {\n    try {\n      await Ctrl.editStudyCredentials(req.body,req.session.user.emp_id);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study credentials',\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/router.js","import db from '../../database';\n\nexport const addStudyLoad = ({\n  credits,\n  courseno,\n  start_time,\n  end_time,\n  school,\n  day1,\n  day2\n},\n  json\n) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      call insert_studyload(?, ?, ?,?,?,?,?,?)\n    `;\n\n    const values = [credits, courseno, emp_id, start_time,end_time, school, day1,day2];\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call delete_studyload(?)\n    `;\n\n    db.query(queryString, studyload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editStudyLoad = (json,emp_id) => {\n    const studyload_id = json.studyload_id;\n    const credits = json.credits;\n    const courseno = json.courseno;\n    const start_time = json.start_time;\n    const end_time = json.end_time;\n    const school = json.school;\n    const day1 = json.day1;\n    var day2 = json.day2;\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call update_studyload(?,?,?,?,?,?,?,?,?)\n    `;\n\n    const values = [\n      studyload_id,\n      credits,\n      courseno,\n      start_time,\n      end_time,\n      school,\n      day1,\n      day2,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getStudyLoad = ( studyload_id ) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call view_studyload_id_studyload(?)\n        `;\n\n    db.query(queryString, studyload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getStudyEmp = ( json ) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n        call view_employee_studyload(?)\n        `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\nexport const getAllStudyLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call view_studyload()\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\nexport const getStudyCredentials = ( json ) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      SELECT * FROM STUDY_CREDENTIALS WHERE emp_id = ?\n    `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const editStudyCredentials = (json,emp_id) => {\n  const university = json.uni;\n  const degree = json.degree;\n  var fellowship = false;\n  var studyleave = false;\n  if(json.fellowship === \"Yes\"){\n    fellowship = true;\n  }\n  if(json.studyleave === \"Yes\"){\n    studyleave = true;\n  }\n\nreturn new Promise((resolve, reject) => {\n  const queryString = `\n  call update_study_credentials(?,?,?,?,?)\n  `;\n\n  const values = [\n    emp_id,\n    degree,\n    university,\n    studyleave,\n    fellowship\n  ];\n\n  db.query(queryString, values, (err, res) => {\n    if (err) {\n      console.log(err);\n      return reject(500);\n    }\n\n    if (!res.affectedRows) {\n      return reject(403);\n    }\n\n    return resolve();\n  });\n});\n};\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\nimport { isNull } from 'util';\n\nconst router = Router();\n\nrouter.post('/api/teachload/add', async (req, res) => {\n  if (\n    req.body.no_of_students &&\n    req.body.subject_code &&\n    req.body.section_code \n  ) {\n    try {\n      const existHourTeachLoad = await Ctrl.checkExistHourTeachLoad(req.body, req.session.user);    //If value > 1 then there is an overlapping schedule with the hour\n      const existDayTeachLoad = await Ctrl.checkExistDayTeachLoad(req.body, req.session.user);      //If value > 1 then there is an overlapping schedule within the day\n      const existHourConsultation = await Ctrl.checkExistHourConsultation(req.body, req.session.user);\n      const existDayConsultation = await Ctrl.checkExistDayConsultation(req.body, req.session.user);\n      if((existDayConsultation==0||existHourConsultation==0)&&(existHourTeachLoad==0||existDayTeachLoad==0)){\n        const id = await Ctrl.addTeachLoad(req.body, req.session.user);\n        const sample = await Ctrl.getTeachLoad({teachingload_id: id});\n\n        res.status(200).json({\n          status: 200,\n          message: 'Successfully created teaching load',\n          data: sample\n        });\n      }else{\n        res.status(400).json({\n          status: 400,\n          message: 'Overlapping schedule error'\n        });\n      }\n     \n        \n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/delete/', async (req, res) => {\n  if (req.body.teachingload_id) {\n    try {\n      const book = await Ctrl.getTeachLoad(req.body);\n      await Ctrl.removeTeachLoad(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed teach load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/edit/', async (req, res) => {\n  if (\n    req.body.no_of_students &&\n    req.body.subject_code &&\n    req.body.section_code &&\n    req.body.teachingload_id\n  ) {\n    try {\n      await Ctrl.editTeachLoad(req.body);\n      const sample = await Ctrl.getTeachLoad({\n        teachingload_id: req.body.teachingload_id\n      });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachingload/viewByTeachloadId', async (req, res) => {\n  console.log(req.body);\n  if(\n    req.session.user &&\n    req.body.teachingload_id\n  ){\n    try {\n      const book = await Ctrl.getTeachLoad(req.body.teachingload_id);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched study load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Study load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n  });\n\nrouter.post('/api/teachload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getTeachEmp(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched teach load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Teach load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/teachload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllTeachLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all teaching load',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/router.js","import db from '../../database';\n\nexport const addTeachLoad = ({ no_of_students, subject_code, section_code, room, days, start_time, end_time, creditw},json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      INSERT INTO TEACHINGLOAD\n          (emp_id, no_of_students, subject_id)\n        VALUES\n          (?, ?, (SELECT subject_id FROM SUBJECT \n                  WHERE subject_code = ? AND\n                        section_code = ? limit 1));\n    `;\n    //FIX QUERY LATER ON ADD SUBJECT IF SUBJECT DOES NOT EXIST\n    // console.log(no_of_students);\n    const values = [emp_id, no_of_students, subject_code, section_code];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const checkExistDayTeachLoad = ({ subject_code, section_code}, json) =>{\n  return new Promise((resolve, reject) =>{\n    const emp_id = json.emp_id;\n\n                      const queryString = `\n                        SELECT COUNT(*) as count FROM\n                        (SELECT day from SUBJECT_DAY where subject_id = (SELECT subject_id from SUBJECT where subject_code = ? and section_code = ? ))a,\n                        (SELECT day from SUBJECT_DAY where subject_id IN (SELECT subject_id FROM SUBJECT NATURAL JOIN TEACHINGLOAD where emp_id = ?))b\n                        WHERE(\n                        a.day=b.day\n                        );\n                      `;\n\n                      // const queryString = `\n                      //   SELECT COUNT(*) as count FROM\n                      //   (SELECT day from SUBJECT_DAY NATURAL JOIN SUBJECT where subject_code = ? and section_code = ?)a,\n                      //   (SELECT day from CONSULTATION_DAY NATURAL JOIN CONSULTATION where emp_id = ?)b\n                      //   WHERE(\n                      //   a.day=b.day);\n                      // `;\n\n    // SELECT COUNT(*) as count FROM\n    // (SELECT day from SUBJECT_DAY NATURAL JOIN SUBJECT where subject_code = 'cmsc 11' and section_code = 'a')a,\n    // (SELECT day from CONSULTATION_DAY NATURAL JOIN CONSULTATION where emp_id = '000000001')b\n    // WHERE(\n    // a.day=b.day);\n\n    // const queryString = `\n    //   SELECT COUNT(*) as count FROM\n    //   (SELECT day from SUBJECT NATURAL JOIN SUBJECT_DAY where subject_code = ? and section_code = ?)a,\n    //   (SELECT day from CONSULTATION_DAY NATURAL JOIN CONSULTATION WHERE emp_id = ?)b,\n    //   (SELECT day FROM SUBJECT NATURAL JOIN SUBJECT_DAY WHERE subject_id IN(SELECT subject_id FROM SUBJECT NATURAL JOIN TEACHINGLOAD where emp_id = ?))c\n    //   WHERE\n    //   a.day = b.day OR a.day = c.day OR b.day = c.day;\n    // `;\n\n    const values = [subject_code, section_code, emp_id];\n    db.query(queryString, values, (err, results) =>{\n      console.log(results);\n      if (err){\n        console.log('swswswswswsw');\n        return reject(500);\n      }\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const checkExistDayConsultation = ({ subject_code, section_code}, json ) =>{\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n\n    const queryString = `\n     SELECT COUNT(*) as count FROM\n     (SELECT day from SUBJECT_DAY NATURAL JOIN SUBJECT where subject_code = ? and section_code = ?)a,\n      (SELECT day from CONSULTATION_DAY NATURAL JOIN CONSULTATION where emp_id = ?)b\n      WHERE(\n      a.day=b.day);\n    `;\n\n    \n    const values = [ subject_code, section_code, emp_id];\n    db.query(queryString, values, (err, results) =>{\n      console.log(results);\n      if(err){\n        console.log('AHHHHHHHHHHHHK');\n        return reject(500);\n      }\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const checkExistHourConsultation = ({ subject_code, section_code}, json ) =>{\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n\n    const queryString = `\n      SELECT COUNT(*) as count FROM\n      (SELECT consultation_start_time,consultation_end_time from CONSULTATION WHERE emp_id = ?)a,\n      (SELECT start_time, end_time FROM SUBJECT WHERE subject_code = ? and section_code = ?)b\n      WHERE(\n      (b.start_time > a.consultation_start_time AND b.start_time < a.consultation_end_time) OR\n      (b.end_time > a.consultation_start_time AND b.end_time < a.consultation_end_time) OR\n      (b.start_time = a.consultation_start_time AND b.end_time = a.consultation_end_time));\n    `;\n\n    const values = [ emp_id, subject_code, section_code];\n    db.query(queryString, values, (err, results) =>{\n      console.log(results);\n      if(err){\n        console.log('Bepis');\n        return reject(500);\n      }\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const checkExistHourTeachLoad = ({ subject_code, section_code}, json) =>{\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    //  const queryString = `\n    //   SELECT COUNT(*) as count FROM (SELECT start_time, end_time FROM SUBJECT \n    //   WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD \n    //   WHERE emp_id = ?))a, (SELECT start_time, end_time FROM \n    //   SUBJECT WHERE subject_code = ? and \n    //   section_code = ? limit 1)b \n    //   WHERE\n    //   (b.start_time < b.end_time and b.end_time < a.start_time) OR \n    //   (b.start_time > a.end_time and b.end_time > b.start_time) OR \n    //   (a.start_time > b.start_time and b.end_time > b.start_time);\n    // `;\n\n    // const queryString = `\n    //   SELECT COUNT(*) as count FROM \n    //   (SELECT start_time, end_time FROM SUBJECT \n    //   WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD \n    //   WHERE emp_id = ?))a, (SELECT start_time, end_time FROM \n    //   SUBJECT WHERE subject_code = ? and \n    //   section_code = ? limit 1)b \n    //   WHERE(\n    //   (b.start_time < b.end_time and b.end_time < a.start_time) OR \n    //   (b.start_time > a.end_time and b.end_time > b.start_time) OR \n    //   (a.start_time > b.start_time and b.end_time > b.start_time) OR\n    //   (b.start_time < a.end_time and b.end_time > a.end_time));\n    //   `;\n\n    const queryString = `\n      SELECT COUNT(*) as count FROM\n      (SELECT start_time,end_time from TEACHINGLOAD NATURAL JOIN SUBJECT WHERE emp_id = ?)a,\n      (SELECT start_time, end_time FROM SUBJECT WHERE subject_code = ? and section_code = ?)b\n      WHERE(\n      (b.start_time > a.start_time AND b.start_time < a.end_time) OR\n      (b.end_time > a.start_time AND b.end_time < a.end_time) OR\n      (b.end_time = a.end_time AND b.start_time = a.start_time));\n    `;\n\n    const values = [emp_id, subject_code, section_code];\n\n    db.query(queryString, values, (err, results) =>{\n      console.log(results);\n      if (err){\n        console.log(\"wsswswswswsws\");\n        return reject(500);\n      }\n\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const removeTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        DELETE \n          FROM TEACHINGLOAD\n        WHERE \n          teachingload_id = ?\n      `;\n\n    db.query(queryString, teachingload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editTeachLoad = ({ no_of_students, emp_id, subject_code, section_code, room, days, start_time, end_time, creditw, teachingload_id}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      UPDATE TEACHINGLOAD\n        SET\n          no_of_students = ?\n        WHERE\n          teachingload_id=?;\n    `;\n   \n    const values = [no_of_students, teachingload_id];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            TEACHINGLOAD\n          WHERE\n            teachingload_id = ?;\n        `;\n\n    db.query(queryString, teachingload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getTeachEmp = (json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n        call view_employee_teachingload(?)\n        `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllTeachLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT *\n          FROM TEACHINGLOAD\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n// SELECT COUNT(*) as count FROM \n// (SELECT start_time, end_time FROM SUBJECT \n// WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD \n// WHERE emp_id = ?))a, (SELECT start_time, end_time FROM \n// SUBJECT WHERE subject_code = ? and \n// section_code = ? limit 1)b \n// WHERE(\n// (b.start_time < b.end_time and b.end_time < a.start_time) OR \n// (b.start_time > a.end_time and b.end_time > b.start_time) OR \n// (a.start_time > b.start_time and b.end_time > b.start_time) OR\n// (b.start_time < a.end_time and b.end_time > a.end_time));\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/controller.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 25\n// module chunks = 0","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets one faculty\nrouter.post('/api/faculty/view', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getFaculty(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets all faculty\nrouter.get('/api/faculty/viewAll', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getAllFaculty();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/router.js","import db from '../../database';\n\n// gets one faculty\nexport const getFaculty = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          call view_employee_by_id(?);\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all faculty\nexport const getAllFaculty = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call view_employee();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets all pending fsr\nrouter.post('/api/fsr/viewPending', async (req, res) => {\n  try {\n    const fsr = await Ctrl.getPendingFSR();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched FSRs',\n      data: fsr\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// gets all approved fsr\nrouter.post('/api/fsr/viewApproved', async (req, res) => {\n  try {\n    const fsr = await Ctrl.getApprovedFSR();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched FSRs',\n      data: fsr\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// get a pending fsr by id\nrouter.post('/api/fsr/viewPendingById', async (req, res) => {\n  try {\n    const data = await Ctrl.getPendingById(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched FSRs',\n      data: data\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'FSR not found';\n        data = data;\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// get a pending fsr by name\nrouter.post('/api/fsr/viewPendingByName', async (req, res) => {\n  try {\n    const data = await Ctrl.getPendingByName(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched FSRs',\n      data: data\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'FSR not found';\n        data: data;\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// get an approved fsr by id\nrouter.post('/api/fsr/viewApprovedById', async (req, res) => {\n  try {\n    const data = await Ctrl.getApprovedById(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched FSRs',\n      data: data\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'FSR not found';\n        data = data;\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// get an approved fsr by name\nrouter.post('/api/fsr/viewApprovedByName', async (req, res) => {\n  try {\n    const data = await Ctrl.getApprovedByName(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched FSRs',\n      data: data\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'FSR not found';\n        data = data;\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// send to admin\nrouter.post('/api/fsr/send', async (req, res) => {\n  try {\n    await Ctrl.sendToAdmin(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully sent FSR'\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'FSR not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/fsr/router.js","import db from '../../database';\n\n// gets all approved fsr\nexport const getApprovedFSR = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT \n            *\n        FROM \n            EMPLOYEE a, \n            EMPLOYEE_FSR b\n        WHERE\n            a.emp_id = b.emp_id\n        AND\n            a.type = \"FACULTY\"\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search an approved fsr by name\nexport const getApprovedByName = ({ name }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT \n            a.*\n        FROM \n            EMPLOYEE a, \n            EMPLOYEE_FSR b\n        WHERE\n            a.emp_id = b.emp_id\n        AND\n            a.type = \"FACULTY\"\n        AND\n            (a.f_name = ? OR\n            a.m_name = ? OR\n            a.l_name = ?);\n        `;\n\n    var values = [name, name, name];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search an approved fsr by id\nexport const getApprovedById = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT \n            a.*\n        FROM \n            EMPLOYEE a, \n            EMPLOYEE_FSR b\n        WHERE\n            a.emp_id = b.emp_id\n        AND\n            a.type = \"FACULTY\"\n        AND\n            a.emp_id = ?\n    `;\n\n    db.query(queryString, empid, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets all pending FSR\nexport const getPendingFSR = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    SELECT \n        *\n    FROM \n        EMPLOYEE\n    WHERE\n        is_being_approved = 1\n    AND\n        type = \"FACULTY\";\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search a pending fsr by name\nexport const getPendingByName = ({ name }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT \n            *\n        FROM \n          (SELECT * FROM EMPLOYEE WHERE is_being_approved = 1 AND type = \"FACULTY\") AS PENDING\n        WHERE\n            PENDING.f_name = ? OR PENDING.m_name = ? OR PENDING.l_name = ?;\n        `;\n\n    var values = [name, name, name];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search a pending fsr by id\nexport const getPendingById = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT \n          *\n        FROM \n          EMPLOYEE\n        WHERE\n          is_being_approved = 1\n        AND\n          type = \"FACULTY\"\n        AND\n          emp_id = ?\n    `;\n\n    db.query(queryString, empid, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// sends fsr to data\nexport const sendToAdmin = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      UPDATE EMPLOYEE\n      SET\n        is_being_approved = 1\n      WHERE\n        emp_id = ?\n    `;\n\n    db.query(queryString, empid, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/fsr/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/position/add', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.office &&\n    req.body.credit_units &&\n    req.body.nature_of_work &&\n    req.body.emp_id\n  ) {\n    try {\n      const id = await Ctrl.addPosition(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added position'\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/position/delete', async (req, res) => {\n  try {\n    const consultation = await Ctrl.getPosition(req.body);\n    await Ctrl.removePosition(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed position',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//edit a position\nrouter.post('/api/position/edit', async (req, res) => {\n  console.log(req.body);\n  try {\n    await Ctrl.editPosition(req.body);\n    const position = await Ctrl.getPosition({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited position',\n      data: position\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/position/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getPosition(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched position',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/position/viewAll', async (req, res) => {\n  try {\n    const positions = await Ctrl.getAllPositions();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all positions',\n      data: positions\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/router.js","import db from '../../database';\n\n// add position\nexport const addPosition = ({\n  office,\n  credit_units,\n  nature_of_work,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL insert_position(?, ?, ?, ?);\n    `;\n\n    const values = [office, credit_units, nature_of_work, emp_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// get position\nexport const getPosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL\n          view_position_by_ID(?)\n        `;\n\n    db.query(queryString, [id, id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// get all positions\nexport const getAllPositions = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL \n          view_position();\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes position\nexport const removePosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_position(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a position\nexport const editPosition = ({\n  position_id,\n  office,\n  credit_units,\n  nature_of_work,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_position(?, ?, ?, ?, ?);\n    `;\n\n    const values = [position_id, office, credit_units, nature_of_work, emp_id];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n//add a consultation hours\nrouter.post('/api/consulHours/add', async (req, res) => {\n  if (\n    req.body.consultation_start_time &&\n    req.body.consultation_end_time &&\n    req.body.consultation_place &&\n    req.body.day &&\n    req.body.emp_id\n  ) {\n    try {\n      const id = await Ctrl.addConsulHours(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added consultation hours'\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n//delete a consultation hours\nrouter.post('/api/consulHours/delete', async (req, res) => {\n  try {\n    // const consultation = await Ctrl.getConsultation({ id: req.body.id });\n    console.log(req.body);\n    await Ctrl.removeConsulHours({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed consulation hours',\n      data: []\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation hours not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//edit a consultation hours\nrouter.post('/api/consulHours/edit', async (req, res) => {\n  try {\n    await Ctrl.editConsulHours(req.body);\n    const consultation = await Ctrl.getConsultation({\n      id: req.body.consultation_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited consultation hour',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//view all consultation hours\nrouter.get('/api/consulHours/viewAll', async (req, res) => {\n  try {\n    const consultations = await Ctrl.getAllConsulHours();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all consultations',\n      data: consultations\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nrouter.get('/api/consulHours/view', async (req, res) => {\n  try {\n    console.log(req.body);\n    const book = await Ctrl.getConsultation(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched consultation',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/router.js","import db from '../../database';\n\nexport const addConsulHours = ({\n  consultation_start_time,\n  consultation_end_time,\n  consultation_place,\n  day,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL \n      insert_consultation(?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      consultation_start_time,\n      consultation_end_time,\n      consultation_place,\n      day,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes consultation hours\nexport const removeConsulHours = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    CALL \n    delete_consultation(?)\n     \n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// get a consultation hour\nexport const getConsultation = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL\n          view_consultation_by_ID(?);\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n//gets all consultation hours\nexport const getAllConsulHours = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        view_consultation()\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const editConsulHours = ({\n  consultation_start_time,\n  consultation_end_time,\n  consultation_place,\n  day,\n  consultation_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n     CALL \n     update_consultation(?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      consultation_start_time,\n      consultation_end_time,\n      consultation_place,\n      day,\n      consultation_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// get a faculty grant by emp id\nrouter.post('/api/facultygrant/viewEmp', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getAllFacultyGrantByEmp(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets a faculty grant by id\nrouter.get('/api/facultygrant/view', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\n// gets a faculty grant by id\nrouter.get('/api/facultygrant/viewAll', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getAllFacultyGrant(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a faculty grant\nrouter.post('/api/facultygrant/add', async (req, res) => {\n  if (\n    req.body\n  ) {\n    try {\n      const id = await Ctrl.addFacultyGrant(req.body);\n     // const facultygrant = await Ctrl.getFacultyGrant({faculty_grant_id: id});\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created faculty grant',\n        // data: facultygrant\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\n// removes a faculty grant\nrouter.post('/api/facultygrant/delete', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    await Ctrl.removeFacultyGrant(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a facultygrant\nrouter.post('/api/facultygrant/edit', async (req, res) => {\n  try {\n    await Ctrl.editFacultyGrant(req.body);\n    // const facultygrant = await Ctrl.getAllFacultyGrantByEmp(req.body)({\n    //   emp_id: req.body.emp_id\n    // });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited faculty grant',\n      // data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/router.js","import db from '../../database';\n\n//adds a faculty grant\n  export const addFacultyGrant = ({emp_id}) => {\n    console.log({emp_id})\n    return new Promise((resolve, reject) => {\n      const queryString = `\n        CALL \n        insert_faculty_grant(NULL, NULL, NULL, NULL, NULL, NULL, NULL, ?);\n      `;\n      const values = [emp_id];\n  \n      db.query(queryString,values, (err, results) => {\n        if (err) {\n          console.log(err.message);\n          return reject(500);\n        }\n        return resolve(results.insertId);\n      });\n    });\n  };\n  \n// gets all faculty\n  export const getAllFacultyGrant = () => {\n    return new Promise((resolve, reject) => {\n      const queryString = `\n        CALL view_faculty_grant();\n      `;\n  \n      db.query(queryString, (err, rows) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n  \n        if (!rows.length) {\n          return reject(404);\n        }\n  \n        return resolve(rows);\n      });\n    });\n  };\n  \n// gets a faculty grant by id\nexport const getFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            FACULTYGRANT\n          WHERE\n            faculty_grant_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets a faculty grant by id by emp_id\nexport const getAllFacultyGrantByEmp = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_faculty_grant_by_emp_id(?)\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n// removes a faculty grant\nexport const removeFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      delete_faculty_grant();\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve(); \n    });\n  });\n};\n\n// edits a faculty grant\nexport const editFacultyGrant = ({\n  emp_id,\n\ttype,\n\tis_approved,\n\tprofessional_chair,\n\tgrants,\n\tgrant_title,\n\tstart_date,\n\tend_date\n\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL \n      update_faculty_grant(?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      emp_id,\n      type,\n      is_approved,\n      professional_chair,\n      grants,\n      grant_title,\n      start_date,\n      end_date\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/limitedpractice/add', async (req, res) => {\n  if (\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      // const sample = await Ctrl.getLimitedPractice({ limited_practice_id: id });\n      await Ctrl.addLimitedPractice(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created limited practice',\n        // data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\nrouter.post('/api/limitedpractice/delete', async (req, res) => {\n  if (\n    req.body.limited_practice_id\n  ) {\n    try {\n      // const book = await Ctrl.getLimitedPractice(req.body);\n      await Ctrl.removeLimitedPractice(req.body);\n  \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed limited practice',\n        // data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\nrouter.post('/api/limitedpractice/edit', async (req, res) => {\n  if (\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      await Ctrl.editLimitedPractice(req.body);\n      // const sample = await Ctrl.getLimitedPractice({\n      //   limited_practice_id: req.body.limited_practice_id\n      // });\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited limited practice',\n        // data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/limitedpractice/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getLimitedPractice(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched limited practice',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Limited practice not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/limitedpractice/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllLimitedPractice();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all limited practice',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/router.js","import db from '../../database';\n\nexport const addLimitedPractice = ({\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL  \n      insert_limited_practice(?, ?, ?)\n    `;\n    \n    const values = [\n      haveApplied,\n      date_submitted,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n      return resolve(results.insertId);\n    });\n  });\n};\n\n\nexport const removeLimitedPractice = ({ limited_practice_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        delete_limited_practice(?);\n      `;\n\n    db.query(queryString, limited_practice_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\nexport const editLimitedPractice = ({\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  console.log(\"ALOLOLOLO\")\n  return new Promise((resolve, reject) => {\n    if(haveApplied == 1){\n      console.log(\"wtf\")\n      const queryString = `\n          CALL\n          update_limited_practice(?, ?, ?)\n        `;\n\n      const values = [\n        haveApplied,\n        date_submitted,\n        emp_id\n      ];\n\n      db.query(queryString, values, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    }else{\n      \n      const queryString = `\n      CALL\n      update_limited_practice(?, null, ?)\n        `;\n\n      const values = [\n        \n        haveApplied,\n        emp_id\n      ];\n\n      db.query(queryString, values, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    }\n  });\n};\n\nexport const getLimitedPractice = ({ emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL\n          view_limited_practice_by_emp_id(?)\n        `;\n\n    db.query(queryString, emp_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllLimitedPractice = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        view_limited_practice()\n      `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// edits the faculty\nrouter.post('/api/faculty/edit', async (req, res) => {\n  try {\n    await Ctrl.editFaculty(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited faculty'\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits the semester information\nrouter.post('/api/faculty/termEdit', async (req, res) => {\n  try {\n    await Ctrl.editTerm(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited term information'\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// get the faculty data\nrouter.post('/api/faculty/data', async (req, res) => {\n  try {\n    const data = await Ctrl.getData(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty data',\n      data: data\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/profile/router.js","import db from '../../database';\n\n// edits the faculty\nexport const editFaculty = ({\n  empid,\n  username,\n  password,\n  fname,\n  mname,\n  lname,\n  dept,\n  college,\n  emptype,\n  emptypeno,\n  email,\n  is_full_time\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call update_employee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 1, 0);\n    `;\n\n    const values = [\n      empid,\n      username,\n      password,\n      fname,\n      mname,\n      lname,\n      dept,\n      college,\n      emptype,\n      emptypeno,\n      email,\n      is_full_time\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits the faculty\nexport const editTerm = ({ empid, year, term, isnew }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    UPDATE \n      EMPLOYEE\n    SET \n      year = ?,\n      semester = ?,\n      is_new = ?\n    WHERE \n      emp_id = ?;\n    `;\n\n    const values = [year, term, isnew, empid];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// gets faculty data\nexport const getData = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id = ?\n        `;\n\n    db.query(queryString, empid, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/profile/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// enable faculty\nrouter.post('/api/admin/enable', async (req, res) => {\n  try {\n    await Ctrl.enableFaculty(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully enabled faculty'\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// disable faculty\nrouter.post('/api/admin/disable', async (req, res) => {\n  try {\n    await Ctrl.disableFaculty(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully disabled faculty'\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// get a faculty by id\nrouter.post('/api/faculty/searchById', async (req, res) => {\n  try {\n    const data = await Ctrl.getFacultyById(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty',\n      data: data\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// get a faculty by name\nrouter.post('/api/faculty/searchByName', async (req, res) => {\n  try {\n    const data = await Ctrl.getFacultyByName(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculties',\n      data: data\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/admin/router.js","import db from '../../database';\n\n// enables a faculty\nexport const enableFaculty = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      UPDATE EMPLOYEE\n      SET\n        is_active = 1\n      WHERE\n        emp_id = ?\n    `;\n\n    db.query(queryString, empid, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// disables a faculty\nexport const disableFaculty = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        UPDATE EMPLOYEE\n        SET\n          is_active = 0\n        WHERE\n          emp_id = ?\n      `;\n\n    db.query(queryString, empid, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// search a faculty by name\nexport const getFacultyByName = ({ name }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT \n            *\n        FROM \n            EMPLOYEE\n        WHERE\n            f_name = ? OR\n            m_name = ? OR\n            l_name = ?\n        `;\n\n    var values = [name, name, name];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search a faculty by id\nexport const getFacultyById = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT \n        *\n        FROM \n        EMPLOYEE\n        WHERE\n        emp_id = ?\n    `;\n\n    db.query(queryString, empid, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/admin/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets samples\nrouter.post('/api/subject/viewAll', async (req, res) => {\n  try {\n    const subject = await Ctrl.getSubjects();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all subjects',\n      data: subject\n    }); \n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// add a sample\nrouter.post('/api/subject/add', async (req, res) => {\n  if (\n    req.body.subject_code &&\n    req.body.section_code &&\n    req.body.units &&\n    req.body.room &&\n    req.body.start_time &&\n    req.body.end_time\n  ) {\n    try {\n      const id = await Ctrl.addSubject(req.body);\n      //const subject = await Ctrl.getSubject({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created subject',\n        data: subject\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a subject\nrouter.delete('/api/subject/remove', async (req, res) => {\n  try {\n    const subject = await Ctrl.getSubject(req.params);\n    await Ctrl.removeSubject(req.params);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed subject',\n      data: subject\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Sample not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\n// edits a subject\nrouter.put('/api/subject/edit', async (req, res) => {\n  try {\n    await Ctrl.editSubject(req.body);\n    const subject = await Ctrl.getSubject({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited subject',\n      data: subject\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Subject not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/subject/router.js","import db from '../../database';\n\n\nexport const getSubject = ({ subject_code, section_code }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            SUBJECT\n          WHERE\n            subject_code = ? and section_code = ?;\n        `;\n    const values = [subject_code, section_code]\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all subjects\nexport const getSubjects = () => {\n  return new Promise((resolve, reject) => {\n    // const queryString = `\n      // CALL view_subjects()\n    // `;\n    const queryString = `\n      SELECT * FROM SUBJECT;\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a sample\nexport const addSubject = ({ subject_code, section_code, isLecture, units, room, start_time, end_time }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL add_subject(?,?,?,?,?,?,?)`;\n\n    const values = [subject_code, section_code, isLecture, units, room, start_time, end_time];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a sample\nexport const removeSubject = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_subject(?)\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\nexport const editSubject = ({subject_id, subject_code, section_code, isLecture, units, room, start_time, end_time}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `CALL update_subject(?, ?, ?, ?, ?, ?, ?, ?)\n    `;\n\n    const values = [subject_id, subject_code, section_code, isLecture, units, room, start_time, end_time];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getSubjectDay = (json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    // const queryString = \n    // `\n    //       SELECT \n    //         CONCAT(\n    //         (SELECT subject_code,section_code, room,start_time,end_time FROM SUBJECT WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD WHERE emp_id = ?)),\n    //         (SELECT no_of_students FROM TEACHINGLOAD WHERE emp_id = ?), \n    //         (SELECT * FROM SUBJECT_DAY WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD WHERE emp_id = ?)) \n    //         );\n    //     `;\n\n    const queryString =  `\n      SELECT * FROM TEACHINGLOAD JOIN SUBJECT_DAY WHERE SUBJECT_DAY.subject_id = TEACHINGLOAD.subject_id ;\n    `;\n    db.query(queryString, emp_id, (err, results) => {\n      if (err) {\n        return reject(500);\n      }\n\n      if (!results.length) {\n        return reject(404);\n      }\n      console.log(results);\n      return resolve(results);\n    });\n  });\n};\n\n\n// WEBPACK FOOTER //\n// ./src/entities/subject/controller.js"],"sourceRoot":""}