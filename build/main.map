{"version":3,"sources":["webpack:///webpack/bootstrap 3aa16a71afe52adaecfe","webpack:///external \"express\"","webpack:///./src/database/index.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///external \"sqlstring\"","webpack:///./src/index.js","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"express-session\"","webpack:///external \"express-mysql-session\"","webpack:///external \"mysql\"","webpack:///./src/router.js","webpack:///./src/entities/auth/router.js","webpack:///external \"regenerator-runtime\"","webpack:///./src/entities/auth/controller.js","webpack:///./src/entities/extension/router.js","webpack:///./src/entities/extension/controller.js","webpack:///./src/entities/publications/router.js","webpack:///./src/entities/publications/controller.js","webpack:///external \"multer\"","webpack:///./src/entities/signup/router.js","webpack:///./src/entities/signup/controller.js","webpack:///./src/entities/studyload/router.js","webpack:///./src/entities/studyload/controller.js","webpack:///./src/entities/teachload/router.js","webpack:///./src/entities/teachload/controller.js","webpack:///external \"util\"","webpack:///./src/entities/facultylist/router.js","webpack:///./src/entities/facultylist/controller.js","webpack:///./src/entities/fsr/router.js","webpack:///./src/entities/fsr/controller.js","webpack:///./src/entities/adminWork/router.js","webpack:///./src/entities/adminWork/controller.js","webpack:///./src/entities/consulHours/router.js","webpack:///./src/entities/consulHours/controller.js","webpack:///./src/entities/facultygrant/router.js","webpack:///./src/entities/facultygrant/controller.js","webpack:///./src/entities/limitedpractice/router.js","webpack:///./src/entities/limitedpractice/controller.js","webpack:///./src/entities/profile/router.js","webpack:///./src/entities/profile/controller.js","webpack:///./src/entities/admin/router.js","webpack:///./src/entities/admin/controller.js","webpack:///./src/entities/subject/router.js","webpack:///./src/entities/subject/controller.js"],"names":["db","mysql","createConnection","host","user","password","dateStrings","connect","err","console","log","message","query","app","express","MySQLStore","store","sessionStore","use","bodyParser","json","urlencoded","encoded","logger","session","key","secret","resave","saveUninitialized","createDatabaseTable","checkExpirationInterval","expiration","port","process","env","PORT","server","listen","router","Router","alphanumRegex","passRegex","post","req","res","body","username","match","length","status","data","destroy","SqlString","require","login","Promise","resolve","reject","values","queryString","format","rows","numRegex","creditRegex","empidRegex","nameRegex","extensions","id","extension","parseInt","credit_unit","extension_type","extension_name","no_of_participants","extension_role","funding_agency","getExtension","getExtensionByID","getExtensions","addExtension","no_of_hours","start_time","end_time","emp_id","results","insertId","removeExtension","affectedRows","editExtension","extension_id_update","credit_unit_update","extension_name_update","extension_type_update","no_of_hours_update","no_of_participants_update","extension_role_update","start_time_update","end_time_update","funding_agency_update","emp_id_update","multer","publication","empid","publications","category","subcategory","title","credit_units","publication_id","toString","get","storage","diskStorage","destination","file","cb","filename","fieldname","Date","now","upload","any","next","File","getPublication","getPublications","addPublication","funding","role","start_date","end_date","addPublicationLog","addCoworker","coworker_id","removePublication","editPublication","getEmployees","getEmployeeCoworkers","removeCoworkers","getCoworkers","empIdRegex","emailRegex","type","f_name","m_name","l_name","department","college","emp_type","is_full_time","email","addEmployee","emp_type_no","getEmployee","checkValid","credits","courseno","school","days","studyload_id","book","sample","subjects","studyleave","fellowship","out","addStudyLoad","json2","send_response","result","args","last_query","send","insertDays","error","fields","tempid","forEach","item","getTempID","Error","start","removeStudyLoadDays","removeStudyLoad","editStudyLoad","getStudyLoad","getStudyEmp","getAllStudyLoad","getStudyCredentials","editStudyCredentials","university","uni","degree","getDays","addDays","no_of_students","subject_code","section_code","existHourTeachLoad","existDayTeachLoad","existHourConsultation","existDayConsultation","teachingload_id","units","addTeachLoad","room","creditw","checkExistDayTeachLoad","count","checkExistDayConsultation","checkExistHourConsultation","checkExistHourTeachLoad","removeTeachLoad","editTeachLoad","getTeachLoad","getTeachEmp","newArray","visitedArray","i","j","daysArray","includes","push","day","getTeachEmpAdmin","getAllTeachLoad","editAddTeachLoadUnits","editRemoveTeachLoadUnits","getSubjectByTeachLoad","faculty","getFaculty","getAllFaculty","fsr","name","getApprovedFSR","getApprovedByName","getApprovedById","getPendingFSR","getPendingByName","getPendingById","sendToAdmin","rejectFSR","office","nature_of_work","work_position","consultation","position","positions","addPosition","getPosition","getAllPositions","getHisPosition","removePosition","editPosition","position_id","consultation_start_time","consultation_end_time","consultation_place","consultation_id","consultations","addConsulHours","removeConsulHours","getConsultation","getSpecificConsul","escape","getAllConsulHours","editConsulHours","facultygrant","addFacultyGrant","getAllFacultyGrant","getFacultyGrant","getAllFacultyGrantByEmp","removeFacultyGrant","editFacultyGrant","is_approved","professional_chair","grants","grant_title","haveApplied","date_submitted","limited_practice_id","addLimitedPractice","removeLimitedPractice","editLimitedPractice","getLimitedPractice","getAllLimitedPractice","fname","mname","lname","emptype","emptypeno","dept","year","term","isnew","editFaculty","editTerm","getData","enableFaculty","disableFaculty","getFacultyByName","getFacultyById","subject","isLecture","isGraduate","getSubject","getSubjectByID","subject_id","getSubjects","addSubject","queryID","queryAddSubjectDay","removeSubject","editSubject","getSubjectDay"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3aa16a71afe52adaecfe","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","import mysql from 'mysql';\n\nconst db = mysql.createConnection({\n  host: 'localhost',\n  user: 'skydev',\n  password: 'skydev',\n  db: 'skydev',\n  dateStrings: true\n});\n\ndb.connect(err => {\n  if (err) {\n    console.log('Error in connecting to database');\n    console.log(err.message);\n  } else {\n    console.log('Success in connecting to database');\n  }\n});\n\ndb.query('USE skydev');\n\nexport default db;\n\n\n// WEBPACK FOOTER //\n// ./src/database/index.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 2\n// module chunks = 0","module.exports = require(\"sqlstring\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sqlstring\"\n// module id = 3\n// module chunks = 0","import express from 'express';\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport session from 'express-session';\nimport store from 'express-mysql-session';\nimport db from './database';\nimport router from './router';\n\nconst app = express();\nconst MySQLStore = store(session);\nconst sessionStore = new MySQLStore({}, db);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ encoded: true }));\napp.use(logger('dev'));\n\napp.use(\n  session({\n    key: 'skydev',\n    secret: 'skydev',\n    resave: true,\n    saveUninitialized: true,\n    store: sessionStore,\n    createDatabaseTable: true,\n    checkExpirationInterval: 900000,\n    expiration: 86400000\n  })\n);\n\napp.use(router);\n\nconst port = process.env.PORT || 3001;\n\nconst server = app.listen(port, () => {\n  console.log(`Server is running at port: ${port}`);\n});\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"express-mysql-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-mysql-session\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"mysql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mysql\"\n// module id = 10\n// module chunks = 0","import { Router } from 'express';\n\n// put import routers here\nimport authRouter from './entities/auth/router';\nimport extensionRouter from './entities/extension/router';\nimport publicationsRouter from './entities/publications/router';\nimport signupRouter from './entities/signup/router';\nimport studyRouter from './entities/studyload/router';\nimport teachRouter from './entities/teachload/router';\nimport facultyRouter from './entities/facultylist/router';\nimport fsrRouter from './entities/fsr/router';\nimport adminWorkRouter from './entities/adminWork/router';\nimport consulHourRouter from './entities/consulHours/router';\nimport facultygrantRouter from './entities/facultygrant/router';\nimport limitedpracticeRouter from './entities/limitedpractice/router';\nimport profileRouter from './entities/profile/router';\nimport adminRouter from './entities/admin/router';\nimport subjectRouter from './entities/subject/router';\n\nconst router = Router();\n\n// put use statements here\nrouter.use('/', authRouter);\nrouter.use(extensionRouter);\nrouter.use(publicationsRouter);\nrouter.use(signupRouter);\nrouter.use(studyRouter);\nrouter.use(teachRouter);\nrouter.use(facultyRouter);\nrouter.use(fsrRouter);\nrouter.use(adminWorkRouter);\nrouter.use(consulHourRouter);\nrouter.use(facultygrantRouter);\nrouter.use(limitedpracticeRouter);\nrouter.use(profileRouter);\nrouter.use(adminRouter);\nrouter.use(subjectRouter);\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nconst alphanumRegex = /^[A-Za-z0-9]+$/;\nconst passRegex = /^[A-Za-z0-9\\-_.]+$/;\n\nrouter.post('/api/login', async (req, res) => {\n  if (\n    req.body.username.match(alphanumRegex) &&\n    req.body.password &&\n    req.body.password.length >= 6 &&\n    req.body.password.length <= 16 &&\n    req.body.password.match(passRegex)\n  ) {\n    try {\n      const user = await Ctrl.login(req.body);\n      req.session.user = user;\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully logged in',\n        data: user\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 500:\n          message = 'Internal server error while logging in';\n          break;\n        case 404:\n          message = 'Wrong credentials';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nrouter.post('/api/logout', (req, res) => {\n  req.session.destroy();\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully logged out'\n  });\n});\n\nrouter.post('/api/session', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully fetched current session',\n    data: req.session.user ? req.session.user : null\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/router.js","module.exports = require(\"regenerator-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime\"\n// module id = 13\n// module chunks = 0","import db from '../../database';\nvar SqlString = require('sqlstring');\n\nexport const login = ({ username, password }) => {\n  return new Promise((resolve, reject) => {\n    const values = [username, password];\n    const queryString = SqlString.format(\n      `\n      SELECT \n        *\n      FROM\n        EMPLOYEE\n      WHERE\n        username = BINARY ? and\n        password = BINARY sha2(?,256)\n    `,\n      values\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\nconst alphanumRegex = /^[a-zA-Z0-9 ]*[a-zA-Z ][a-zA-Z0-9 ]*$/;\nconst numRegex = /^[0-9\\s\\-']+$/;\nconst creditRegex = /^[0-9]$/;\nconst empidRegex = /^[0-9]{9}$/;\nconst nameRegex = /^[A-Za-z\\-'\\s]+$/;\n\n// gets extension\nrouter.post('/api/extension/viewByID', async (req, res) => {\n  try {\n    const extensions = await Ctrl.getExtensionByID(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all Extensions',\n      data: extensions\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nrouter.post('/api/extension/viewByID', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const extension = await Ctrl.getExtensionByID(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched Extension',\n        data: extension\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Extension not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get a extensions\nrouter.post('/api/extension/view', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const extension = await Ctrl.getExtension(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched Extension',\n        data: extension\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Extension not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// credit_unit,\n//   extension_name,\n//   extension_type,\n//   no_of_hours,\n//   no_of_participants,\n//   extension_role,\n//   start_time,\n//   end_time,\n//   funding_agency,\n//   emp_id\n\n// add a extension\nrouter.post('/api/extension/add', async (req, res) => {\n  if (\n    parseInt(req.body.credit_unit) >= 0 &&\n    req.body.extension_type &&\n    req.body.extension_name &&\n    parseInt(req.body.no_of_participants) >= 0 &&\n    req.body.extension_role &&\n    req.body.funding_agency &&\n    !req.body.funding_agency.match(numRegex)\n  ) {\n    try {\n      const id = await Ctrl.addExtension(req.body);\n      // const extensionAdded = await Ctrl.getExtension({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added Extension'\n        // data: extensionAdded\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes an extension\nrouter.post('/api/extension/delete', async (req, res) => {\n  if (req.body.id) {\n    try {\n      // const extension = await Ctrl.getExtension(req.body);\n      await Ctrl.removeExtension(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed sample'\n        // data: extension\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Cannot Delete: Extension not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// edits a extension\nrouter.post('/api/extension/edit', async (req, res) => {\n  if (req.body.id) {\n    try {\n      await Ctrl.editExtension(req.body);\n      // const extensionEdited = await Ctrl.getExtension({ id: req.body.extension_id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited extension'\n        // data: extensionEdited\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Extension not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extension/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// gets extensions\nexport const getExtension = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `SELECT * from EXTENSION where emp_id = ?`,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets a extension\nexport const getExtensionByID = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          SELECT * from EXTENSION where extension_id = ?;\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets all extensions\nexport const getExtensions = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      view_extension();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a extension\nexport const addExtension = ({\n  credit_unit,\n  extension_name,\n  extension_type,\n  no_of_hours,\n  no_of_participants,\n  extension_role,\n  start_time,\n  end_time,\n  funding_agency,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const values = [\n      credit_unit,\n      extension_name,\n      extension_type,\n      no_of_hours,\n      no_of_participants,\n      extension_role,\n      start_time,\n      end_time,\n      funding_agency,\n      emp_id\n    ];\n    const queryString = SqlString.format(\n      `\n            CALL insert_extension(?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\n        `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a extension\nexport const removeExtension = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      CALL delete_extension(?);\n    `,\n      [id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a sample\nexport const editExtension = ({\n  extension_id_update,\n  credit_unit_update,\n  extension_name_update,\n  extension_type_update,\n  no_of_hours_update,\n  no_of_participants_update,\n  extension_role_update,\n  start_time_update,\n  end_time_update,\n  funding_agency_update,\n  emp_id_update\n}) => {\n  return new Promise((resolve, reject) => {\n    const values = [\n      extension_id_update,\n      credit_unit_update,\n      extension_name_update,\n      extension_type_update,\n      no_of_hours_update,\n      no_of_participants_update,\n      extension_role_update,\n      start_time_update,\n      end_time_update,\n      funding_agency_update,\n      emp_id_update\n    ];\n    const queryString = SqlString.format(\n      `\n      CALL update_extension(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\n    `,\n      values\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extension/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\nvar multer = require('multer');\n\nconst router = Router();\nconst alphanumRegex = /^[a-zA-Z0-9 ]*[a-zA-Z ][a-zA-Z0-9 ]*$/;\nconst numRegex = /^[0-9\\s\\-']+$/;\nconst creditRegex = /^[0-9]$/;\nconst empidRegex = /^[0-9]{9}$/;\n\n// gets a publication by id\nrouter.post('/api/publication/view', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const publication = await Ctrl.getPublication(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched publication',\n        data: publication\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Publication not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// gets publications\nrouter.post('/api/publication/viewAll', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      const publications = await Ctrl.getPublications(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched all publications',\n        data: publications\n      });\n    } catch (status) {\n      let message = '';\n\n      switch (status) {\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n\n      res.status(200).json({ status, message });\n    }\n  }\n});\n\n// add a publication\nrouter.post('/api/publication/add', async (req, res) => {\n  if (\n    req.body.category &&\n    req.body.subcategory &&\n    req.body.title &&\n    !req.body.title.match(numRegex) &&\n    req.body.title.match(alphanumRegex) &&\n    req.body.credit_units >= 0 &&\n    req.body.credit_units.match(creditRegex)\n  ) {\n    try {\n      const id = await Ctrl.addPublication(req.body);\n      console.log('title');\n      console.log(req.body.title);\n      // const log = await Ctrl.addPublicationLog(req.body.title);\n      // const publication = await Ctrl.getPublication({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created publication',\n        data: id\n        // data: log\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// add a coworker\nrouter.post('/api/coworker/add', async (req, res) => {\n  if (req.body.publication_id) {\n    try {\n      await Ctrl.addCoworker(req.body);\n      // const row = Ctrl.checkIfExisting(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added coworker'\n        // data: row\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/delete', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const publication = await Ctrl.getPublication(req.body);\n      await Ctrl.removePublication(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed publication',\n        data: publication\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Publication not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// edits a publication\nrouter.post('/api/publication/edit', async (req, res) => {\n  if (\n    req.body.category &&\n    req.body.subcategory &&\n    req.body.title &&\n    !req.body.title.match(numRegex) &&\n    req.body.title.match(alphanumRegex) &&\n    req.body.credit_units >= 0 &&\n    req.body.credit_units.toString().match(creditRegex) &&\n    req.body.publication_id\n  ) {\n    try {\n      await Ctrl.editPublication(req.body);\n      const publication = await Ctrl.getPublication({\n        id: req.body.publication_id\n      });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited publication',\n        data: publication\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Publication not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewEmployees', async (req, res) => {\n  try {\n    const publications = await Ctrl.getEmployees();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all emps',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.post('/api/publication/viewEmployeeCoworkers', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      const publications = await Ctrl.getEmployeeCoworkers(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched all possible coworkers',\n        data: publications\n      });\n    } catch (status) {\n      let message = '';\n\n      switch (status) {\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n\n      res.status(200).json({ status, message });\n    }\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewCoworkers', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const publications = await Ctrl.getCoworkers(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched all coworkers',\n        data: publications\n      });\n    } catch (status) {\n      let message = '';\n\n      switch (status) {\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n\n      res.status(200).json({ status, message });\n    }\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/deleteCoworkers', async (req, res) => {\n  if (req.body.id) {\n    try {\n      // const publication = await Ctrl.getPublication(req.body);\n      await Ctrl.removeCoworkers(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed coworkers'\n        // data: publication\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Publication not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// gets coworkers of a publication\nrouter.post('/api/publication/getCoworkers', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const publications = await Ctrl.getCoworkers(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched all emps',\n        data: publications\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Publication not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n\n      res.status(200).json({ status, message });\n    }\n  }\n});\n\nvar storage = multer.diskStorage({\n  destination: function(req, file, cb) {\n    cb(null, 'src/uploads/');\n  },\n  filename: function(req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now() + '.pdf');\n  }\n});\n\nvar upload = multer({ storage: storage }).any();\n\nrouter.post('/api/publication/attach', function(req, res, next) {\n  upload(req, res, err => {\n    if (err) {\n      console.log('sux');\n    } else {\n      console.log(req.File);\n      console.log('success');\n    }\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// gets a publication by id\nexport const getPublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          CALL view_publication_by_ID(?);\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all publications\nexport const getPublications = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      CALL view_employee_publication(?);\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a publication\nexport const addPublication = ({\n  credit_units,\n  category,\n  subcategory,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    if (start_date === '' || end_date === '') {\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        emp_id\n      ];\n      const queryString = SqlString.format(\n        `\n          INSERT INTO PUBLICATION values(NULL, ?, ?, ?, ?, ?, ?, NULL, NULL, NULL, ?);\n        `,\n        values\n      );\n\n      db.query(queryString, (err, results) => {\n        if (err) {\n          console.log(err);\n          console.log('ERROR!!');\n          return reject(500);\n        }\n\n        return resolve(results.insertId);\n      });\n    } else {\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        start_date,\n        end_date,\n        emp_id\n      ];\n      const queryString = SqlString.format(\n        `\n          INSERT INTO PUBLICATION values(NULL, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?);\n        `,\n        values\n      );\n\n      db.query(queryString, (err, results) => {\n        if (err) {\n          console.log(err);\n          console.log('ERROR!!');\n          return reject(500);\n        }\n\n        return resolve(results.insertId);\n      });\n    }\n  });\n};\n\nexport const addPublicationLog = ({ title }) => {\n  return new Promise((resolve, reject) => {\n    const values = [title];\n    const queryString = SqlString.format(\n      `\n        call insert_log(concat(\"Publication with title\", ?, \" has been added to the table PUBLICATION\"));\n        `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        console.log('ERROR!!');\n        return reject(500);\n      }\n\n      return resolve(results);\n    });\n  });\n};\n\n// adds a coworker\nexport const addCoworker = ({ coworker_id, publication_id }) => {\n  return new Promise((resolve, reject) => {\n    const values = [coworker_id, publication_id];\n    const queryString = SqlString.format(\n      `\n            CALL insert_coworker(?, ?);\n        `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a publication\nexport const removePublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      CALL delete_publication(?);\n    `,\n      [id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a publication\nexport const editPublication = ({\n  credit_units,\n  category,\n  subcategory,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  publication_id\n}) => {\n  return new Promise((resolve, reject) => {\n    if (start_date === '' || end_date === '') {\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        publication_id\n      ];\n      const queryString = SqlString.format(\n        `\n        CALL update_publication(?, ?, ?, ?, ?, ?, null, null, ?);\n      `,\n        values\n      );\n\n      db.query(queryString, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    } else {\n      const values = [\n        credit_units,\n        category,\n        subcategory,\n        funding,\n        title,\n        role,\n        start_date,\n        end_date,\n        publication_id\n      ];\n      const queryString = SqlString.format(\n        `\n        CALL update_publication(?, ?, ?, ?, ?, ?, ?, ?, ?);\n      `,\n        values\n      );\n\n      db.query(queryString, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    }\n  });\n};\n\n// gets employees\nexport const getEmployees = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT * from EMPLOYEE;\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets all employee except self\nexport const getEmployeeCoworkers = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      SELECT * from EMPLOYEE WHERE emp_id != ?;\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// removes coworkers of a publication\nexport const removeCoworkers = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      CALL delete_coworker(?);\n    `,\n      [id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// gets all coworkers of a publication\nexport const getCoworkers = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      SELECT c.emp_id, e.f_name, e.l_name FROM COWORKER c, EMPLOYEE e WHERE c.emp_id = e.emp_id and publication_id = ?;\n    `,\n      [id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/controller.js","module.exports = require(\"multer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer\"\n// module id = 19\n// module chunks = 0","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\nconst nameRegex = /^[A-Za-z\\-'\\s]+$/;\nconst alphanumRegex = /^[A-Za-z0-9]+$/;\nconst passRegex = /^[A-Za-z0-9\\-_.]+$/;\nconst empIdRegex = /^[0-9]{9}$/;\nconst emailRegex = /^[^;\"']+@up.edu.ph$/;\n\nrouter.post('/api/signup', async (req, res) => {\n  if (\n    req.body.emp_id &&\n    req.body.emp_id.match(empIdRegex) &&\n    req.body.username &&\n    req.body.username.match(alphanumRegex) &&\n    req.body.password &&\n    req.body.password.length >= 6 &&\n    req.body.password.length <= 16 &&\n    req.body.password.match(passRegex) &&\n    req.body.type &&\n    req.body.f_name &&\n    req.body.f_name.match(nameRegex) &&\n    req.body.m_name &&\n    req.body.m_name.match(nameRegex) &&\n    req.body.l_name &&\n    req.body.l_name.match(nameRegex) &&\n    req.body.department &&\n    req.body.college &&\n    req.body.emp_type &&\n    req.body.is_full_time &&\n    req.body.email &&\n    req.body.email.match(emailRegex)\n  ) {\n    try {\n      const id = await Ctrl.addEmployee(req.body);\n      // const employee = await Ctrl.getEmployee({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created employee'\n        // data: employee\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// get users\nrouter.post('/api/checkValid', async (req, res) => {\n  if (\n    req.body.empid &&\n    req.body.empid.match(empIdRegex) &&\n    req.body.username &&\n    req.body.username.match(alphanumRegex) &&\n    req.body.email &&\n    req.body.email.match(emailRegex)\n  ) {\n    try {\n      const data = await Ctrl.checkValid(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched users',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'User not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n//adds an employee\nexport const addEmployee = ({\n  emp_id,\n  username,\n  password,\n  type,\n  f_name,\n  m_name,\n  l_name,\n  department,\n  college,\n  emp_type,\n  emp_type_no,\n  is_full_time,\n  email\n}) => {\n  return new Promise((resolve, reject) => {\n    const values = [\n      emp_id,\n      username,\n      password,\n      type,\n      f_name,\n      m_name,\n      l_name,\n      department,\n      college,\n      emp_type,\n      emp_type_no,\n      is_full_time,\n      email\n    ];\n    const queryString = SqlString.format(\n      `\n      CALL insert_employee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 1, 0);\n    `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      // console.log(results);\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// gets an employee\nexport const getEmployee = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id_increment = ?;\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets an employee\nexport const checkValid = ({ empid, username, email }) => {\n  return new Promise((resolve, reject) => {\n    const values = [empid, username, email];\n    const queryString = SqlString.format(\n      `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id = ? OR\n            username = ? OR\n            email = ?\n        `,\n      values\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/studyload/add', async (req, res) => {\n  // console.log(req.body);\n  if (req.body.credits &&\n      req.body.courseno &&\n      req.session.user.emp_id &&\n      req.body.start_time &&\n      req.body.end_time &&\n      req.body.school &&\n      req.body.days\n     ){\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addStudyLoad(req.body,req.session.user);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created study load'//,\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/delete', async (req, res) => {\n  console.log(req.body);\n  if (req.body.studyload_id) {\n    try {\n      const book = await Ctrl.getStudyLoad([req.body.studyload_id]);\n      await Ctrl.removeStudyLoad(req.body);\n      await Ctrl.removeStudyLoadDays(req.body.studyload_id);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed study load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/edit', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.studyload_id &&\n    req.body.credits &&\n    req.body.courseno &&\n    req.body.start_time &&\n    req.body.school &&\n    req.body.days &&\n    req.session.user\n  ) {\n    try {\n      await Ctrl.editStudyLoad(req.body,req.session.user.emp_id);\n      const sample = await Ctrl.getStudyLoad( \n        [req.body.studyload_id\n      ]);\n      await Ctrl.removeStudyLoadDays(req.body.studyload_id);\n      await Ctrl.addDays(req.body.studyload_id,req.body.days);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study load',\n        // data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyEmp(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Study load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\nrouter.post('/api/studyload/viewByStudyloadId', async (req, res) => {\n  console.log(req.body);\n  if(\n    req.session.user &&\n    req.body.studyload_id\n  ){\n    try {\n      const book = await Ctrl.getStudyLoad(req.body.studyload_id);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched study load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Study load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n  });\n\nrouter.get('/api/studyload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllStudyLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all studyload',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\nrouter.get('/api/studyload/viewStudyCredentials', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyCredentials(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study credentials',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Credentials not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/studyload/editStudyCredentials', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.studyleave &&\n    req.body.fellowship &&\n    req.session.user\n  ) {\n    try {\n      await Ctrl.editStudyCredentials(req.body,req.session.user.emp_id);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study credentials',\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\nrouter.post('/api/studyload/getDays',async(req,res)=>{\n  if(req.body.studyload_id &&\n      req.session.user.emp_id\n  ){\n   try{\n    const out = await Ctrl.getDays(req.body.studyload_id);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully got days',\n      data: out\n    });\n  } catch (status) {\n    res.status(500).json({ status: 500, message: 'Internal server error' });\n  }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });    \n  }\n})\nrouter.post('/api/studyload/getStudyLoadFSR',async(req,res)=>{\n  if(req.body.emp_id &&\n      req.session.user.emp_id\n  ){\n   try{\n    const out = await Ctrl.getStudyEmp(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully got Studyload',\n      data: out\n    });\n  } catch (status) {\n    res.status(500).json({ status: 500, message: 'Internal server error' });\n  }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });    \n  }\n})\nrouter.post('/api/studyload/getStudyLoadCredentialsFSR',async(req,res)=>{\n  if(req.body.emp_id &&\n      req.session.user.emp_id\n  ){\n    console.log(req.body);\n\n    try{\n    const out = await Ctrl.getStudyCredentials(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully got Studyload',\n      data: out\n    });\n  } catch (status) {\n    res.status(500).json({ status: 500, message: 'Internal server error' });\n  }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });    \n  }\n})\nrouter.post('/api/studyload/getDaysFSR',async(req,res)=>{\n  if(req.body.studyload_id &&\n      req.body.emp_id &&\n      req.session.user.emp_id\n  ){\n   try{\n    const out = await Ctrl.getDays(req.body.emp_id);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully got days',\n      data: out\n    });\n  } catch (status) {\n    res.status(500).json({ status: 500, message: 'Internal server error' });\n  }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });    \n  }\n})\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\nexport const addStudyLoad = (json, json2) => {\n  const credits = json.credits;\n  const courseno = json.courseno;\n  const start_time = json.start_time;\n  const end_time = json.end_time;\n  const school = json.school;\n  const days = json.days;\n  const emp_id = json2.emp_id;\n\n  function send_response(err, result, args, last_query) {\n    if (err) {\n      return res.status(500).send(err);\n    }\n    return res.status(200).send(result);\n  }\n\n  function insertDays(error, results, fields) {\n    const tempid = results[0].id;\n    days.forEach(item => {\n      const queryString = SqlString.format(\n        'Insert into STUDYLOAD_DAY VALUES (?,?)',\n        [tempid, item]\n      );\n      db.query(queryString);\n    }, send_response);\n  }\n\n  function getTempID(error, results, fields) {\n    if (error) throw new Error(error);\n    // const queryString = \"SELECT studyload_id from STUDYLOAD where credits = ? and course_no = ? and emp_id = ? and start_time = ? and end_time = ? and school = ?\"\n    const queryString = ' Select max(studyload_id) id from STUDYLOAD';\n    console.log(values);\n    db.query(queryString, values, insertDays);\n  }\n\n  const values = [credits, courseno, emp_id, start_time, end_time, school];\n  function start() {\n    const queryString = SqlString.format(\n      `call insert_studyload(?, ?, ?,?,?,?)`,\n      values\n    );\n    db.query(queryString, getTempID);\n  }\n\n  start();\n};\n\nexport const removeStudyLoadDays = studyload_id => {\n  console.log(studyload_id);\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n    DELETE FROM STUDYLOAD_DAY WHERE studyload_id = ?\n    `,\n      [studyload_id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\nexport const removeStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n    call delete_studyload(?)\n    `,\n      [studyload_id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editStudyLoad = (json, emp_id) => {\n  const studyload_id = json.studyload_id;\n  const credits = json.credits;\n  const courseno = json.courseno;\n  const start_time = json.start_time;\n  const end_time = json.end_time;\n  const school = json.school;\n  return new Promise((resolve, reject) => {\n    const values = [\n      studyload_id,\n      credits,\n      courseno,\n      start_time,\n      end_time,\n      school,\n      emp_id\n    ];\n    const queryString = SqlString.format(\n      `\n    call update_studyload(?,?,?,?,?,?,?)\n    `,\n      values\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getStudyLoad = studyload_id => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      call view_studyload_id_studyload(?)\n        `,\n      [studyload_id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getStudyEmp = json => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = SqlString.format(\n      `\n        call view_employee_studyload(?)\n        `,\n      [emp_id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllStudyLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call view_studyload()\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\nexport const getStudyCredentials = json => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = SqlString.format(\n      `\n      SELECT * FROM STUDY_CREDENTIALS WHERE emp_id = ?\n    `,\n      [emp_id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const editStudyCredentials = (json, emp_id) => {\n  const university = json.uni;\n  const degree = json.degree;\n  var fellowship = false;\n  var studyleave = false;\n  if (json.fellowship === 'Yes') {\n    fellowship = true;\n  }\n  if (json.studyleave === 'Yes') {\n    studyleave = true;\n  }\n\n  return new Promise((resolve, reject) => {\n    const values = [emp_id, degree, university, studyleave, fellowship];\n    const queryString = SqlString.format(\n      `\n  call update_study_credentials(?,?,?,?,?)\n  `,\n      values\n    );\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(403);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getDays = studyload_id => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n    Select * from STUDYLOAD_DAY WHERE studyload_id = ?\n    `,\n      [studyload_id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\nexport const addDays = (studyload_id, days) => {\n  days.forEach(item => {\n    const queryString = SqlString.format(\n      'Insert into STUDYLOAD_DAY VALUES (?,?)',\n      [studyload_id, item]\n    );\n    db.query(queryString);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\nimport { isNull } from 'util';\n\nconst router = Router();\n\nrouter.post('/api/teachload/add', async (req, res) => {\n  if (\n    req.body.no_of_students &&\n    req.body.subject_code &&\n    req.body.section_code &&\n    req.session.user\n  ) {\n    try {\n      const existHourTeachLoad = await Ctrl.checkExistHourTeachLoad(\n        req.body,\n        req.session.user\n      ); //If value > 1 then there is an overlapping schedule with the hour\n      const existDayTeachLoad = await Ctrl.checkExistDayTeachLoad(\n        req.body,\n        req.session.user\n      ); //If value > 1 then there is an overlapping schedule within the day\n      const existHourConsultation = await Ctrl.checkExistHourConsultation(\n        req.body,\n        req.session.user\n      );\n      const existDayConsultation = await Ctrl.checkExistDayConsultation(\n        req.body,\n        req.session.user\n      );\n      if (\n        (existDayConsultation == 0 || existHourConsultation == 0) &&\n        (existHourTeachLoad == 0 || existDayTeachLoad == 0)\n      ) {\n        const id = await Ctrl.addTeachLoad(req.body, req.session.user);\n        const sample = await Ctrl.getTeachLoad({ teachingload_id: id });\n\n        res.status(200).json({\n          status: 200,\n          message: 'Successfully created teaching load',\n          data: sample\n        });\n      } else {\n        res.status(400).json({\n          status: 400,\n          message: 'Overlapping schedule error'\n        });\n      }\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/delete/', async (req, res) => {\n  if (req.body.teachingload_id) {\n    try {\n      const book = await Ctrl.getTeachLoad(req.body);\n      await Ctrl.removeTeachLoad(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed teach load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/edit/', async (req, res) => {\n  console.log(req.body);\n  if (req.body.no_of_students && req.body.teachingload_id) {\n    try {\n      await Ctrl.editTeachLoad(req.body);\n      const sample = await Ctrl.getTeachLoad({\n        teachingload_id: req.body.teachingload_id\n      });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachingload/viewByTeachloadId', async (req, res) => {\n  console.log(req.body);\n  if (req.body.teachingload_id) {\n    try {\n      const book = await Ctrl.getTeachLoad(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched study load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Study load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/viewempadmin', async (req, res) => {\n  console.log(req.body.emp_id);\n  if (req.body.emp_id) {\n    try {\n      const book = await Ctrl.getTeachEmpAdmin(req.body);\n      console.log(book);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched teach load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Teach load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nrouter.post('/api/teachload/view', async (req, res) => {\n  if (req.session.user) {\n    try {\n      const book = await Ctrl.getTeachEmp(req.session.user);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched teach load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Teach load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nrouter.get('/api/teachload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllTeachLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all teaching load',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nrouter.post('/api/teachload/editAddTeachLoadUnits/', async (req, res) => {\n  if (req.body.units && req.session.user) {\n    try {\n      await Ctrl.editAddTeachLoadUnits(req.body, req.session.user);\n      const sample = await Ctrl.getEmployee(req.session.user);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/editRemoveTeachLoadUnits/', async (req, res) => {\n  if (req.body.units && req.session.user) {\n    try {\n      await Ctrl.editRemoveTeachLoadUnits(req.body, req.session.user);\n      const sample = await Ctrl.getEmployee(req.session.user);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachingload/viewByTeachloadId', async (req, res) => {\n  console.log(req.body);\n  if (req.body.teachingload_id) {\n    try {\n      const book = await Ctrl.getTeachLoad(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched teach load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Teach load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/subjectByTeachId', async (req, res) => {\n  // console.log(\"BODY: \"+req.body.teachingload_id);\n  if (req.body.teachingload_id) {\n    try {\n      const book = await Ctrl.getSubjectByTeachLoad(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched subject',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Subject not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n\nexport const addTeachLoad = ({ no_of_students, subject_code, section_code, room, days, start_time, end_time, creditw},json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const values = [emp_id, no_of_students, subject_code, section_code];\n\n    const queryString = SqlString.format(\n      `\n      INSERT INTO TEACHINGLOAD\n          (emp_id, no_of_students, subject_id)\n        VALUES\n          (?, ?, (SELECT subject_id FROM SUBJECT \n                  WHERE subject_code = ? AND\n                        section_code = ? limit 1));\n      `,\n      values);\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const checkExistDayTeachLoad = ({ subject_code, section_code}, json) =>{\n  return new Promise((resolve, reject) =>{\n    const emp_id = json.emp_id;\n    const values = [subject_code, section_code, emp_id];\n\n\n    const queryString = SqlString.format(`\n      SELECT COUNT(*) as count FROM\n      (SELECT day from SUBJECT_DAY where subject_id = (SELECT subject_id from SUBJECT where subject_code = ? and section_code = ? ))a,\n      (SELECT day from SUBJECT_DAY where subject_id IN (SELECT subject_id FROM SUBJECT NATURAL JOIN TEACHINGLOAD where emp_id = ?))b\n      WHERE(a.day=b.day);`,values);\n\n    db.query(queryString, (err, results) =>{\n      console.log(results);\n      if (err){\n        console.log('swswswswswsw');\n        return reject(500);\n      }\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const checkExistDayConsultation = ({ subject_code, section_code}, json ) =>{\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const values = [ subject_code, section_code, emp_id];\n\n    const queryString = SqlString.format(`\n     SELECT COUNT(*) as count FROM\n     (SELECT day from SUBJECT_DAY NATURAL JOIN SUBJECT where subject_code = ? and section_code = ?)a,\n      (SELECT day from CONSULTATION_DAY NATURAL JOIN CONSULTATION where emp_id = ?)b\n      WHERE(\n      a.day=b.day);\n    `, values);\n\n    \n    db.query(queryString, (err, results) =>{\n      console.log(results);\n      if(err){\n        console.log('AHHHHHHHHHHHHK');\n        return reject(500);\n      }\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const checkExistHourConsultation = ({ subject_code, section_code}, json ) =>{\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const values = [ emp_id, subject_code, section_code];\n\n    const queryString = SqlString.format(`\n      SELECT COUNT(*) as count FROM\n      (SELECT consultation_start_time,consultation_end_time from CONSULTATION WHERE emp_id = ?)a,\n      (SELECT start_time, end_time FROM SUBJECT WHERE subject_code = ? and section_code = ?)b\n      WHERE(\n      (b.start_time > a.consultation_start_time AND b.start_time < a.consultation_end_time) OR\n      (b.end_time > a.consultation_start_time AND b.end_time < a.consultation_end_time) OR\n      (b.start_time = a.consultation_start_time AND b.end_time = a.consultation_end_time));\n    `,values);\n\n    db.query(queryString, (err, results) =>{\n      console.log(results);\n      if(err){\n        console.log('Bepis');\n        return reject(500);\n      }\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const checkExistHourTeachLoad = ({ subject_code, section_code}, json) =>{\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const values = [emp_id, subject_code, section_code];\n\n    const queryString = SqlString.format(`\n      SELECT COUNT(*) as count FROM\n      (SELECT start_time,end_time from TEACHINGLOAD NATURAL JOIN SUBJECT WHERE emp_id = ?)a,\n      (SELECT start_time, end_time FROM SUBJECT WHERE subject_code = ? and section_code = ?)b\n      WHERE(\n      (b.start_time > a.start_time AND b.start_time < a.end_time) OR\n      (b.end_time > a.start_time AND b.end_time < a.end_time) OR\n      (b.end_time = a.end_time AND b.start_time = a.start_time));\n    `,values);\n\n\n    db.query(queryString, values, (err, results) =>{\n      console.log(results);\n      if (err){\n        console.log(\"wsswswswswsws\");\n        return reject(500);\n      }\n\n      return resolve(results[0].count);\n    });\n  });\n}\n\nexport const removeTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(`\n        DELETE \n          FROM TEACHINGLOAD\n        WHERE \n          teachingload_id = ?\n      `,teachingload_id);\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editTeachLoad = ({ no_of_students, teachingload_id}) => {\n  return new Promise((resolve, reject) => {\n    const values = [no_of_students, teachingload_id];\n\n    const queryString = SqlString.format(`\n      UPDATE TEACHINGLOAD\n        SET\n          no_of_students = ?\n        WHERE\n          teachingload_id=?;\n    `,values);\n   \n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(`\n          SELECT \n            subject_code,section_code,no_of_students\n          FROM \n            TEACHINGLOAD NATURAL JOIN SUBJECT\n          WHERE\n            teachingload_id = ?;\n        `,teachingload_id);\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getTeachEmp = (json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = SqlString.format(`\n        call view_employee_teachingload(?)\n        `,[emp_id]);\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      var newArray = [];\n      var visitedArray = []; \n      var i, j;\n      for(i=0;i<rows[0].length;i++){\n        var daysArray = [];\n        if(visitedArray.includes(rows[0][i].teachingload_id)){\n\n        }else{\n          for(j=0;j<rows[0].length;j++){\n            if(rows[0][i].teachingload_id==rows[0][j].teachingload_id){\n              daysArray.push(rows[0][j].day);\n            }\n          }\n          rows[0][i].day = daysArray;\n          visitedArray.push(rows[0][i].teachingload_id);\n          newArray.push(rows[0][i]);\n        }\n      }\n\n      return resolve(newArray);\n    });\n  });\n};\n\nexport const getTeachEmpAdmin = ({emp_id}) => {\n  return new Promise((resolve, reject) => {\n    // const queryString = `\n    //     call view_employee_teachingload(?);\n    //     `;\n    const queryString = SqlString.format(`\n      SELECT * FROM TEACHINGLOAD NATURAL JOIN SUBJECT NATURAL JOIN SUBJECT_DAY WHERE\n      emp_id = ?;\n    `,emp_id);\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      var newArray = [];\n      var visitedArray = []; \n      var i, j;\n      for(i=0;i<rows.length;i++){\n        var daysArray = [];\n        if(visitedArray.includes(rows[i].teachingload_id)){\n\n        }else{\n          for(j=0;j<rows.length;j++){\n            if(rows[i].teachingload_id==rows[j].teachingload_id){\n              daysArray.push(rows[j].day);\n            }\n          }\n          rows[i].day = daysArray;\n          visitedArray.push(rows[i].teachingload_id);\n          newArray.push(rows[i]);\n        }\n      }\n\n      console.log(newArray)\n      return resolve(newArray);\n    });\n  });\n};\n\nexport const getAllTeachLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(`\n          SELECT *\n          FROM TEACHINGLOAD\n        `);\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\nexport const editAddTeachLoadUnits = ({ units}, json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const values = [emp_id,units,emp_id];\n\n    const queryString = SqlString.format(`\n      update EMPLOYEE set current_teaching_units=(select current_teaching_units from (select * from EMPLOYEE)e  where e.emp_id=?)+? where emp_id=?;\n    `,values);\n   \n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editRemoveTeachLoadUnits = ({ units}, json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const values = [emp_id,units,emp_id];\n\n    const queryString = SqlString.format(`\n      update EMPLOYEE set current_teaching_units=(select current_teaching_units from (select * from EMPLOYEE)e  where e.emp_id=?)-? where emp_id=?;\n    `,values);\n   \n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getSubjectByTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const values=[teachingload_id, teachingload_id];\n\n    const queryString = SqlString.format(`\n          SELECT subj.subject_code, subj.section_code, subj.units, subj.isLecture, subj.isGraduate, tl.no_of_students FROM SUBJECT subj, TEACHINGLOAD tl\n          WHERE\n            subj.subject_id = (select subject_id from\n            TEACHINGLOAD where teachingload_id=?) and teachingload_id=?;\n        `,values);\n\n    db.query(queryString, (err, rows) => {\n      // console.log(queryString);\n      // console.log(teachingload_id);\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getEmployee = (json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const values = [emp_id];\n\n    const queryString = SqlString.format(`\n      select * from EMPLOYEE where emp_id=?;\n    `,values);\n   \n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.length) {\n        return reject(404);\n      }\n\n      return resolve(res[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/controller.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 26\n// module chunks = 0","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nconst empidRegex = /^[0-9]{9}$/;\n\n// gets one faculty\nrouter.post('/api/faculty/view', async (req, res) => {\n  if (req.body.id.match(empidRegex)) {\n    try {\n      const faculty = await Ctrl.getFaculty(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched faculty',\n        data: faculty\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// gets all faculty\nrouter.get('/api/faculty/viewAll', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getAllFaculty();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// gets one faculty\nexport const getFaculty = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          call view_employee_by_id(?);\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all faculty\nexport const getAllFaculty = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT * FROM EMPLOYEE WHERE type = 'FACULTY';\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nconst empidRegex = /^[0-9]{9}$/;\nconst nameRegex = /^[A-Za-z\\-'\\s]+$/;\n\n// gets all pending fsr\nrouter.post('/api/fsr/viewPending', async (req, res) => {\n  try {\n    const fsr = await Ctrl.getPendingFSR();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched FSRs',\n      data: fsr\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// gets all approved fsr\nrouter.post('/api/fsr/viewApproved', async (req, res) => {\n  try {\n    const fsr = await Ctrl.getApprovedFSR();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched FSRs',\n      data: fsr\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// get a pending fsr by id\nrouter.post('/api/fsr/viewPendingById', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      const data = await Ctrl.getPendingById(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched FSRs',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          data = data;\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get a pending fsr by name\nrouter.post('/api/fsr/viewPendingByName', async (req, res) => {\n  if (req.body.name.match(nameRegex)) {\n    try {\n      const data = await Ctrl.getPendingByName(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched FSRs',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          data: data;\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get an approved fsr by id\nrouter.post('/api/fsr/viewApprovedById', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      const data = await Ctrl.getApprovedById(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched FSRs',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          data = data;\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get an approved fsr by name\nrouter.post('/api/fsr/viewApprovedByName', async (req, res) => {\n  if (req.body.name.match(nameRegex)) {\n    try {\n      const data = await Ctrl.getApprovedByName(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched FSRs',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          data = data;\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// send to admin\nrouter.post('/api/fsr/send', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      await Ctrl.sendToAdmin(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully sent FSR'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// rejects fsr\nrouter.post('/api/fsr/reject', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      await Ctrl.rejectFSR(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully rejected FSR'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'FSR not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/fsr/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// gets all approved fsr\nexport const getApprovedFSR = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        SELECT \n            *\n        FROM \n            EMPLOYEE a, \n            EMPLOYEE_FSR b\n        WHERE\n            a.emp_id = b.emp_id\n        AND\n            a.type = \"FACULTY\"\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search an approved fsr by name\nexport const getApprovedByName = ({ name }) => {\n  return new Promise((resolve, reject) => {\n    const values = [name, name, name];\n    const queryString = SqlString.format(\n      `\n        SELECT \n            a.*\n        FROM \n            EMPLOYEE a, \n            EMPLOYEE_FSR b\n        WHERE\n            a.emp_id = b.emp_id\n        AND\n            a.type = \"FACULTY\"\n        AND\n            (a.f_name = ? OR\n            a.m_name = ? OR\n            a.l_name = ?);\n        `,\n      values\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search an approved fsr by id\nexport const getApprovedById = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n        SELECT \n            a.*\n        FROM \n            EMPLOYEE a, \n            EMPLOYEE_FSR b\n        WHERE\n            a.emp_id = b.emp_id\n        AND\n            a.type = \"FACULTY\"\n        AND\n            a.emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets all pending FSR\nexport const getPendingFSR = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    SELECT \n        *\n    FROM \n        EMPLOYEE\n    WHERE\n        is_being_approved = 1\n    AND\n        type = \"FACULTY\";\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search a pending fsr by name\nexport const getPendingByName = ({ name }) => {\n  return new Promise((resolve, reject) => {\n    const values = [name, name, name];\n    const queryString = SqlString.format(\n      `\n        SELECT \n            *\n        FROM \n          (SELECT * FROM EMPLOYEE WHERE is_being_approved = 1 AND type = \"FACULTY\") AS PENDING\n        WHERE\n            PENDING.f_name = ? OR PENDING.m_name = ? OR PENDING.l_name = ?;\n        `,\n      values\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search a pending fsr by id\nexport const getPendingById = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n        SELECT \n          *\n        FROM \n          EMPLOYEE\n        WHERE\n          is_being_approved = 1\n        AND\n          type = \"FACULTY\"\n        AND\n          emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// sends fsr to admin\nexport const sendToAdmin = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      UPDATE EMPLOYEE\n      SET\n        is_being_approved = 1\n      WHERE\n        emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// rejects fsr\nexport const rejectFSR = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      UPDATE EMPLOYEE\n      SET\n        is_being_approved = 0\n      WHERE\n        emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/fsr/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/position/add', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.office &&\n    req.body.credit_units &&\n    req.body.nature_of_work &&\n    req.body.work_position &&\n    req.body.emp_id\n  ) {\n    try {\n      const id = await Ctrl.addPosition(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added position'\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/position/delete', async (req, res) => {\n  try {\n    const consultation = await Ctrl.getPosition(req.body);\n    await Ctrl.removePosition(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed position',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//edit a position\nrouter.post('/api/position/edit', async (req, res) => {\n  console.log(req.body);\n  try {\n    await Ctrl.editPosition(req.body);\n    const position = await Ctrl.getPosition({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited position',\n      data: position\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/position/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getPosition(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched position',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/position/viewHis', async (req, res) => {\n  if(req.body.id){\n    try {\n      const book = await Ctrl.getHisPosition(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched position',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Position not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nrouter.get('/api/position/viewAll', async (req, res) => {\n  try {\n    const positions = await Ctrl.getAllPositions();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all positions',\n      data: positions\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// add position\nexport const addPosition = ({\n  office,\n  credit_units,\n  nature_of_work,\n  work_position,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const values = [\n      office,\n      credit_units,\n      nature_of_work,\n      work_position,\n      emp_id\n    ];\n    const queryString = SqlString.format(\n      `\n      CALL insert_position(?, ?, ?, ?, ?);\n    `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// get position\nexport const getPosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          CALL\n          view_position_by_ID(?)\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// get all positions\nexport const getAllPositions = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL \n          view_position();\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getHisPosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n    SELECT * from POSITIONN where emp_id = ?\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n// removes position\nexport const removePosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      CALL delete_position(?);\n    `,\n      [id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a position\nexport const editPosition = ({\n  position_id,\n  office,\n  credit_units,\n  nature_of_work,\n  work_position,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const values = [\n      position_id,\n      office,\n      credit_units,\n      nature_of_work,\n      work_position,\n      emp_id\n    ];\n    const queryString = SqlString.format(\n      `\n      CALL update_position(?, ?, ?, ?, ?, ?);\n    `,\n      values\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n//add a consultation hours\nrouter.post('/api/consulHours/add', async (req, res) => {\n  if (\n    req.body.consultation_start_time &&\n    req.body.consultation_end_time &&\n    req.body.consultation_place &&\n    req.body.day &&\n    req.body.emp_id\n  ) {\n    try {\n      const id = await Ctrl.addConsulHours(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added consultation hours'\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n//delete a consultation hours\nrouter.post('/api/consulHours/delete', async (req, res) => {\n  try {\n    // const consultation = await Ctrl.getConsultation({ id: req.body.id });\n    console.log(req.body);\n    await Ctrl.removeConsulHours(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed consulation hours',\n      data: []\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation hours not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//edit a consultation hours\nrouter.post('/api/consulHours/edit', async (req, res) => {\n  try {\n    console.log(req.body);\n    await Ctrl.editConsulHours(req.body);\n    const consultation = await Ctrl.getConsultation({\n      id: req.body.consultation_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited consultation hour',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//view all consultation hours\nrouter.get('/api/consulHours/viewAll', async (req, res) => {\n  try {\n    const consultations = await Ctrl.getAllConsulHours();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all consultations',\n      data: consultations\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nrouter.post('/api/consulHours/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getConsultation(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched consultation',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/consulHours/viewOne', async (req, res) => {\n  try {\n    const book = await Ctrl.getSpecificConsul(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched consultation',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\nexport const addConsulHours = ({\n  consultation_start_time,\n  consultation_end_time,\n  consultation_place,\n  day,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const values = [\n      consultation_start_time,\n      consultation_end_time,\n      consultation_place,\n      day,\n      emp_id\n    ];\n    const queryString = SqlString.format(\n      `\n      CALL \n      insert_consultation(?, ?, ?, ?, ?);\n    `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes consultation hours\nexport const removeConsulHours = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n    CALL \n    delete_consultation(?)\n    `,\n      [id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// get a consultation hour\nexport const getConsultation = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          CALL\n          view_employee_consultation(?);\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// get a consultation by id\nexport const getSpecificConsul = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    console.log(SqlString.escape(id));\n    const queryString = SqlString.format(\n      `\n          CALL\n          view_consultation_by_ID(?);\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n//gets all consultation hours\nexport const getAllConsulHours = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        view_consultation()\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const editConsulHours = ({\n  consultation_id,\n  consultation_start_time,\n  consultation_end_time,\n  consultation_place,\n  day\n}) => {\n  return new Promise((resolve, reject) => {\n    const values = [\n      consultation_id,\n      consultation_start_time,\n      consultation_end_time,\n      consultation_place,\n      day\n    ];\n    const queryString = SqlString.format(\n      `\n     CALL \n     update_consultation(?, ?, ?, ?, ?);\n    `,\n      values\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// get a faculty grant by emp id\nrouter.post('/api/facultygrant/viewEmp', async (req, res) => {\n  if (req.body.emp_id) {\n    try {\n      const facultygrant = await Ctrl.getAllFacultyGrantByEmp(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched faculty grant',\n        data: facultygrant\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty grant not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad Request' });\n  }\n});\n\n// gets a faculty grant by id\nrouter.get('/api/facultygrant/view', async (req, res) => {\n  if (req.body.id) {\n    try {\n      const facultygrant = await Ctrl.getFacultyGrant(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched faculty grant',\n        data: facultygrant\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty grant not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad Request' });\n  }\n});\n\n// gets a faculty grant by id\nrouter.get('/api/facultygrant/viewAll', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getAllFacultyGrant(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a faculty grant\nrouter.post('/api/facultygrant/add', async (req, res) => {\n  if (req.body) {\n    try {\n      const id = await Ctrl.addFacultyGrant(req.body);\n      // const facultygrant = await Ctrl.getFacultyGrant({faculty_grant_id: id});\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created faculty grant'\n        // data: facultygrant\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a faculty grant\nrouter.post('/api/facultygrant/delete', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    await Ctrl.removeFacultyGrant(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a facultygrant\nrouter.post('/api/facultygrant/edit', async (req, res) => {\n  if (req.body.emp_id && req.body.type) {\n    try {\n      await Ctrl.editFacultyGrant(req.body);\n      // const facultygrant = await Ctrl.getAllFacultyGrantByEmp(req.body)({\n      //   emp_id: req.body.emp_id\n      // });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited faculty grant'\n        // data: facultygrant\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty grant not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n//adds a faculty grant\nexport const addFacultyGrant = ({ emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const values = [emp_id];\n    const queryString = SqlString.format(\n      `\n        CALL \n        insert_faculty_grant(NULL, NULL, NULL, NULL, NULL, NULL, NULL, ?);\n      `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// gets all faculty\nexport const getAllFacultyGrant = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(`\n        CALL view_faculty_grant();\n      `);\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets a faculty grant by id\nexport const getFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          SELECT \n            *\n          FROM \n            FACULTYGRANT\n          WHERE\n            faculty_grant_id = ?\n        `,\n      [id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets a faculty grant by id by emp_id\nexport const getAllFacultyGrantByEmp = ({ emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          CALL view_faculty_grant_by_emp_id(?)\n        `,\n      [emp_id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes a faculty grant\nexport const removeFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      CALL\n      delete_faculty_grant(?);\n    `,\n      [id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a faculty grant\nexport const editFacultyGrant = ({\n  emp_id,\n  type,\n  is_approved,\n  professional_chair,\n  grants,\n  grant_title,\n  start_date,\n  end_date\n}) => {\n  return new Promise((resolve, reject) => {\n    if (type === 'Yes') {\n      const values = [\n        emp_id,\n        type,\n        is_approved,\n        professional_chair,\n        grants,\n        grant_title,\n        start_date,\n        end_date\n      ];\n      console.log('goes here');\n      const queryString = SqlString.format(\n        `\n      CALL \n      update_faculty_grant(?, ?, ?, ?, ?, ?, ?, ?);\n    `,\n        values\n      );\n\n      db.query(queryString, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    } else {\n      console.log('no goes here');\n      const values = [emp_id];\n      const queryString = SqlString.format(\n        `\n        CALL \n        update_faculty_grant(?, NULL, NULL, NULL, NULL, NULL, NULL, NULL);\n      `,\n        values\n      );\n\n      db.query(queryString, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/limitedpractice/add', async (req, res) => {\n  if (\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      // const sample = await Ctrl.getLimitedPractice({ limited_practice_id: id });\n      await Ctrl.addLimitedPractice(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created limited practice',\n        // data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\nrouter.post('/api/limitedpractice/delete', async (req, res) => {\n  if (\n    req.body.limited_practice_id\n  ) {\n    try {\n      // const book = await Ctrl.getLimitedPractice(req.body);\n      await Ctrl.removeLimitedPractice(req.body);\n  \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed limited practice',\n        // data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\nrouter.post('/api/limitedpractice/edit', async (req, res) => {\n  if (\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      await Ctrl.editLimitedPractice(req.body);\n      // const sample = await Ctrl.getLimitedPractice({\n      //   limited_practice_id: req.body.limited_practice_id\n      // });\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited limited practice',\n        // data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/limitedpractice/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getLimitedPractice(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched limited practice',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Limited practice not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/limitedpractice/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllLimitedPractice();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all limited practice',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\nexport const addLimitedPractice = ({ haveApplied, date_submitted, emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const values = [haveApplied, date_submitted, emp_id];\n    const queryString = SqlString.format(\n      `\n      CALL  \n      insert_limited_practice(?, ?, ?)\n    `,\n      values\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeLimitedPractice = ({ limited_practice_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n        CALL\n        delete_limited_practice(?);\n      `,\n      [limited_practice_id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editLimitedPractice = ({\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    if (haveApplied == 1) {\n      const values = [haveApplied, date_submitted, emp_id];\n      const queryString = SqlString.format(\n        `\n          CALL\n          update_limited_practice(?, ?, ?)\n        `,\n        values\n      );\n\n      db.query(queryString, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    } else {\n      const values = [haveApplied, emp_id];\n      const queryString = SqlString.format(\n        `\n      CALL\n      update_limited_practice(?, null, ?)\n        `,\n        values\n      );\n\n      db.query(queryString, (err, res) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n\n        if (!res.affectedRows) {\n          return reject(404);\n        }\n\n        return resolve();\n      });\n    }\n  });\n};\n\nexport const getLimitedPractice = ({ emp_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          CALL\n          view_limited_practice_by_emp_id(?)\n        `,\n      [emp_id]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllLimitedPractice = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(`\n        CALL\n        view_limited_practice()\n      `);\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\nconst nameRegex = /^[A-Za-z\\-'\\s]+$/;\nconst alphanumRegex = /^[A-Za-z0-9]+$/;\nconst passRegex = /^[A-Za-z0-9\\-_.]+$/;\nconst empIdRegex = /^[0-9]{9}$/;\nconst emailRegex = /^[^;\"']+@up.edu.ph$/;\n\n// edits the faculty\nrouter.post('/api/faculty/edit', async (req, res) => {\n  if (\n    req.body.empid &&\n    req.body.empid.match(empIdRegex) &&\n    req.body.username &&\n    req.body.username.match(alphanumRegex) &&\n    req.body.password &&\n    req.body.password.length >= 6 &&\n    req.body.password.length <= 16 &&\n    req.body.password.match(passRegex) &&\n    req.body.fname &&\n    req.body.fname.match(nameRegex) &&\n    req.body.mname &&\n    req.body.mname.match(nameRegex) &&\n    req.body.lname &&\n    req.body.lname.match(nameRegex) &&\n    req.body.emptype &&\n    req.body.emptypeno &&\n    req.body.email &&\n    req.body.email.match(emailRegex) &&\n    req.body.college &&\n    req.body.dept &&\n    req.body.is_full_time\n  ) {\n    try {\n      await Ctrl.editFaculty(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited faculty'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// edits the semester information\nrouter.post('/api/faculty/termEdit', async (req, res) => {\n  if (\n    req.body.year &&\n    req.body.term &&\n    req.body.empid &&\n    req.body.empid.match(empIdRegex) &&\n    req.body.isnew\n  ) {\n    try {\n      await Ctrl.editTerm(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited term information'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get the faculty data\nrouter.post('/api/faculty/data', async (req, res) => {\n  if (req.body.empid && req.body.empid.match(empIdRegex)) {\n    try {\n      const data = await Ctrl.getData(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched faculty data',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/profile/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// edits the faculty\nexport const editFaculty = ({\n  empid,\n  username,\n  password,\n  fname,\n  mname,\n  lname,\n  dept,\n  college,\n  emptype,\n  emptypeno,\n  email,\n  is_full_time\n}) => {\n  return new Promise((resolve, reject) => {\n    const values = [\n      empid,\n      username,\n      password,\n      fname,\n      mname,\n      lname,\n      dept,\n      college,\n      emptype,\n      emptypeno,\n      email,\n      is_full_time\n    ];\n    const queryString = SqlString.format(\n      `\n      call update_employee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 1, 0);\n    `,\n      values\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits the faculty\nexport const editTerm = ({ empid, year, term, isnew }) => {\n  return new Promise((resolve, reject) => {\n    const values = [year, term, isnew, empid];\n    const queryString = SqlString.format(\n      `\n    UPDATE \n      EMPLOYEE\n    SET \n      year = ?,\n      semester = ?,\n      is_new = ?\n    WHERE \n      emp_id = ?;\n    `,\n      values\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// gets faculty data\nexport const getData = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id = ?\n        `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/profile/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\nconst empidRegex = /^[0-9]{9}$/;\nconst nameRegex = /^[A-Za-z\\-'\\s]+$/;\n\n// enable faculty\nrouter.post('/api/admin/enable', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      await Ctrl.enableFaculty(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully enabled faculty'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// disable faculty\nrouter.post('/api/admin/disable', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      await Ctrl.disableFaculty(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully disabled faculty'\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get a faculty by id\nrouter.post('/api/faculty/searchById', async (req, res) => {\n  if (req.body.empid.match(empidRegex)) {\n    try {\n      const data = await Ctrl.getFacultyById(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched faculty',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\n// get a faculty by name\nrouter.post('/api/faculty/searchByName', async (req, res) => {\n  if (req.body.name.match(nameRegex)) {\n    try {\n      const data = await Ctrl.getFacultyByName(req.body);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched faculties',\n        data: data\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Faculty not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/admin/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\n// enables a faculty\nexport const enableFaculty = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      UPDATE EMPLOYEE\n      SET\n        is_active = 1\n      WHERE\n        emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// disables a faculty\nexport const disableFaculty = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n        UPDATE EMPLOYEE\n        SET\n          is_active = 0\n        WHERE\n          emp_id = ?\n      `,\n      [empid]\n    );\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// search a faculty by name\nexport const getFacultyByName = ({ name }) => {\n  return new Promise((resolve, reject) => {\n    var values = [name, name, name];\n    const queryString = SqlString.format(\n      `\n        SELECT \n            *\n        FROM \n            EMPLOYEE\n        WHERE\n            f_name = ? OR\n            m_name = ? OR\n            l_name = ?\n        `,\n      values\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// search a faculty by id\nexport const getFacultyById = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n        SELECT \n        *\n        FROM \n        EMPLOYEE\n        WHERE\n        emp_id = ?\n    `,\n      [empid]\n    );\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return resolve(null);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/admin/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets samples\nrouter.post('/api/subject/viewAll', async (req, res) => {\n  try {\n    const subject = await Ctrl.getSubjects();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all subjects',\n      data: subject\n    }); \n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nrouter.post('/api/subject/getsubjectid', async (req, res) => {\n  try {\n    const subject = await Ctrl.getSubjectByID(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched subject',\n      data: subject\n    }); \n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets sample\nrouter.post('/api/subject/viewsubject', async (req, res) => {\n  try {\n    const subject = await Ctrl.getSubject(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched subject',\n      data: subject\n    }); \n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a sample\nrouter.post('/api/subject/add', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.subject_code &&\n    req.body.section_code &&\n    req.body.isLecture &&\n    req.body.isGraduate &&\n    req.body.units &&\n    req.body.room &&\n    req.body.start_time &&\n    req.body.end_time\n  ) {\n    try {\n      const id = await Ctrl.addSubject(req.body);\n      // console.log(id);\n      // const subject = await Ctrl.getSubjectByID({ subject_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created subject',\n        data: id\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a subject\nrouter.post('/api/subject/delete', async (req, res) => {\n  console.log(req.body);\n  try {\n    const subject = await Ctrl.getSubjectByID(req.body);\n    await Ctrl.removeSubject(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed subject',\n      data: subject\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Sample not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\n// edits a subject\nrouter.post('/api/subject/edit', async (req, res) => {\n  console.log(req.body);\n  try {\n    await Ctrl.editSubject(req.body);\n    const subject = await Ctrl.getSubjectByID(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited subject',\n      data: subject\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Subject not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/subject/router.js","import db from '../../database';\nvar SqlString = require('sqlstring');\n\nexport const getSubject = ({ subject_code, section_code }) => {\n  return new Promise((resolve, reject) => {\n    const values = [subject_code, section_code];\n    const queryString =  SqlString.format(\n    `\n          SELECT \n            *\n          FROM \n            SUBJECT\n          WHERE\n            subject_code = ? and section_code = ?;\n        `, values\n        );\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getSubjectByID = ({ subject_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString =  SqlString.format(\n    `\n          SELECT \n            *\n          FROM \n            SUBJECT\n          WHERE\n            subject_id = ?;\n        `, [subject_id]\n        );\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all subjects\nexport const getSubjects = () => {\n  return new Promise((resolve, reject) => {\n    // const queryString = `\n      // CALL view_subjects()\n    // `;\n    const queryString = `\n      CALL view_subjects_with_day();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n// adds a sample\nexport const addSubject = ({ subject_code, section_code, isLecture, isGraduate, units, room, days, start_time, end_time }) => {\n  return new Promise((resolve, reject) => {\n    const values = [subject_code, section_code, isLecture, isGraduate, units, room, start_time, end_time];\n    const queryString = SqlString.format(\n    `\n            CALL add_subject(?,?,?,?,?,?,?, ?);\n    `, values\n    );\n\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        console.log('ERROR!!');\n        return reject(500);\n      }\n      const queryID=SqlString.format(`select subject_id from SUBJECT where section_code=? and subject_code=?;`, [section_code, subject_code]);\n      db.query(queryID, (err, res)=>{\n        if (err) {\n          console.log(err);\n          console.log('ERROR!!');\n          return reject(500);\n        }\n        const queryAddSubjectDay = SqlString.format(\n          `\n          CALL add_subject_day(?,?);\n          `, [days, res[0].subject_id]\n          );\n        db.query(queryAddSubjectDay, (err, result)=>{\n          if (err) {\n            console.log(err);\n            console.log('ERROR!!');\n            return reject(500);\n          }\n        })\n      })\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a sample\nexport const removeSubject = ({ subject_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = SqlString.format(\n      `\n      CALL delete_subject(?)\n    `, [subject_id]\n    );\n\n    db.query(queryString, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\nexport const editSubject = ({subject_id, subject_code, section_code, isLecture, isGraduate, units, room, start_time, end_time}) => {\n  return new Promise((resolve, reject) => {\n    const values = [subject_id, subject_code, section_code, isLecture, isGraduate, units, room, start_time, end_time];\n    const queryString = SqlString.format(\n      `\n        CALL update_subject(?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `, values\n      );\n\n\n    db.query(queryString, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getSubjectDay = (json) => {\n  return new Promise((resolve, reject) => {\n    // const emp_id = json.emp_id;\n    // const queryString = \n    // `\n    //       SELECT \n    //         CONCAT(\n    //         (SELECT subject_code,section_code, room,start_time,end_time FROM SUBJECT WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD WHERE emp_id = ?)),\n    //         (SELECT no_of_students FROM TEACHINGLOAD WHERE emp_id = ?), \n    //         (SELECT * FROM SUBJECT_DAY WHERE subject_id IN(SELECT subject_id FROM TEACHINGLOAD WHERE emp_id = ?)) \n    //         );\n    //     `;\n\n    const queryString =  `\n      SELECT * FROM TEACHINGLOAD JOIN SUBJECT_DAY WHERE SUBJECT_DAY.subject_id = TEACHINGLOAD.subject_id ;\n    `;\n    db.query(queryString, (err, results) => {\n      if (err) {\n        return reject(500);\n      }\n\n      if (!results.length) {\n        return reject(404);\n      }\n      console.log(results);\n      return resolve(results);\n    });\n  });\n};\n\n\n// WEBPACK FOOTER //\n// ./src/entities/subject/controller.js"],"sourceRoot":""}