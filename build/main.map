{"version":3,"sources":["webpack:///webpack/bootstrap a1793f93fe25393a4753","webpack:///external \"express\"","webpack:///./src/database/index.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./src/index.js","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"express-session\"","webpack:///external \"express-mysql-session\"","webpack:///external \"mysql\"","webpack:///./src/router.js","webpack:///./src/entities/auth/router.js","webpack:///external \"regenerator-runtime\"","webpack:///./src/entities/auth/controller.js","webpack:///./src/entities/extension/router.js","webpack:///./src/entities/extension/controller.js","webpack:///./src/entities/publications/router.js","webpack:///./src/entities/publications/controller.js","webpack:///./src/entities/signup/router.js","webpack:///./src/entities/signup/controller.js","webpack:///./src/entities/studyload/router.js","webpack:///./src/entities/studyload/controller.js","webpack:///./src/entities/teachload/router.js","webpack:///./src/entities/teachload/controller.js","webpack:///external \"util\"","webpack:///./src/entities/facultylist/router.js","webpack:///./src/entities/facultylist/controller.js","webpack:///./src/entities/adminWork/router.js","webpack:///./src/entities/adminWork/controller.js","webpack:///./src/entities/consulHours/router.js","webpack:///./src/entities/consulHours/controller.js","webpack:///./src/entities/facultygrant/router.js","webpack:///./src/entities/facultygrant/controller.js","webpack:///./src/entities/limitedpractice/router.js","webpack:///./src/entities/limitedpractice/controller.js","webpack:///./src/entities/profile/router.js","webpack:///./src/entities/profile/controller.js"],"names":["db","mysql","createConnection","host","user","password","dateStrings","connect","err","console","log","message","query","app","express","MySQLStore","store","sessionStore","use","bodyParser","json","urlencoded","encoded","logger","session","key","secret","resave","saveUninitialized","createDatabaseTable","checkExpirationInterval","expiration","port","process","env","PORT","server","listen","router","Router","post","req","res","body","status","data","login","username","Promise","resolve","reject","queryString","values","rows","length","get","extensions","extension","extension_type","extension_name","no_of_hours","no_of_participants","extension_role","credit_unit","funding_agency","id","extension_id","extensionEdited","getExtension","getExtensions","addExtension","start_time","end_time","emp_id","results","insertId","removeExtension","affectedRows","editExtension","extension_id_update","credit_unit_update","extension_name_update","extension_type_update","no_of_hours_update","no_of_participants_update","extension_role_update","start_time_update","end_time_update","funding_agency_update","emp_id_update","publication","publications","credit_units","category","title","publication_id","row","getPublication","getPublications","empid","addPublication","funding","role","start_date","end_date","addPublicationLog","addCoworker","coworker_id","checkIfExisting","removePublication","editPublication","getEmployees","getEmployeeCoworkers","removeCoworkers","getCoworkers","type","f_name","m_name","l_name","department","college","emp_type","is_full_time","email","addEmployee","getEmployee","credits","courseno","school","no_of_days","studyload_id","sample","book","subjects","degree","uni","studyleave","fellowship","addStudyLoad","removeStudyLoad","editStudyLoad","getStudyLoad","getStudyEmp","getAllStudyLoad","getStudyCredentials","editStudyCredentials","university","no_of_students","subject_code","section_code","room","days","hours","creditw","teachingload_id","addTeachLoad","removeTeachLoad","editTeachLoad","getTeachLoad","getTeachEmp","getAllTeachLoad","faculty","getFaculty","getAllFaculty","office","consultation","put","positionEdited","addPosition","getPosition","getAllPositions","removePosition","editPosition","position_id","consultation_start_time","consultation_end_time","consultation_place","day","consultation_id","addConsulHours","removeConsultation","getConsultation","getAllConsulHours","editConsulHours","facultygrant","addFacultyGrant","getAllFacultyGrant","getFacultyGrant","getAllFacultyGrantByEmp","removeFacultyGrant","editFacultyGrant","is_approved","professional_chair","grants","grant_title","haveApplied","date_submitted","limited_practice_id","addLimitedPractice","removeLimitedPractice","editLimitedPractice","getLimitedPractice","getAllLimitedPractice","editFaculty","fname","mname","lname","dept","emptype","editTerm","year","term","isnew","getData"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,oC;;;;;;;;;ACAA;;AAEA,IAAMA,KAAK,6CAAAC,CAAMC,gBAAN,CAAuB;AAChCC,QAAM,WAD0B;AAEhCC,QAAM,QAF0B;AAGhCC,YAAU,QAHsB;AAIhCL,MAAI,QAJ4B;AAKhCM,eAAa;AALmB,CAAvB,CAAX;;AAQAN,GAAGO,OAAH,CAAW,eAAO;AAChB,MAAIC,GAAJ,EAAS;AACPC,YAAQC,GAAR,CAAY,iCAAZ;AACAD,YAAQC,GAAR,CAAYF,IAAIG,OAAhB;AACD,GAHD,MAGO;AACLF,YAAQC,GAAR,CAAY,mCAAZ;AACD;AACF,CAPD;;AASAV,GAAGY,KAAH,CAAS,YAAT;;AAEA,yDAAeZ,EAAf,E;;;;;;ACrBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMa,MAAM,+CAAAC,EAAZ;AACA,IAAMC,aAAa,6DAAAC,CAAM,uDAAN,CAAnB;AACA,IAAMC,eAAe,IAAIF,UAAJ,CAAe,EAAf,EAAmB,0DAAnB,CAArB;;AAEAF,IAAIK,GAAJ,CAAQ,mDAAAC,CAAWC,IAAX,EAAR;AACAP,IAAIK,GAAJ,CAAQ,mDAAAC,CAAWE,UAAX,CAAsB,EAAEC,SAAS,IAAX,EAAtB,CAAR;AACAT,IAAIK,GAAJ,CAAQ,8CAAAK,CAAO,KAAP,CAAR;;AAEAV,IAAIK,GAAJ,CACE,uDAAAM,CAAQ;AACNC,OAAK,QADC;AAENC,UAAQ,QAFF;AAGNC,UAAQ,IAHF;AAINC,qBAAmB,IAJb;AAKNZ,SAAOC,YALD;AAMNY,uBAAqB,IANf;AAONC,2BAAyB,MAPnB;AAQNC,cAAY;AARN,CAAR,CADF;;AAaAlB,IAAIK,GAAJ,CAAQ,wDAAR;;AAEA,IAAMc,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA,IAAMC,SAASvB,IAAIwB,MAAJ,CAAWL,IAAX,EAAiB,YAAM;AACpCvB,UAAQC,GAAR,iCAA0CsB,IAA1C;AACD,CAFc,CAAf;;AAIA,+DAAeI,MAAf,E;;;;;;ACrCA,wC;;;;;;ACAA,mC;;;;;;ACAA,4C;;;;;;ACAA,kD;;;;;;ACAA,kC;;;;;;;;;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAME,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOpB,GAAP,CAAW,GAAX,EAAgB,sEAAhB;AACAoB,OAAOpB,GAAP,CAAW,2EAAX;AACAoB,OAAOpB,GAAP,CAAW,8EAAX;AACAoB,OAAOpB,GAAP,CAAW,wEAAX;AACAoB,OAAOpB,GAAP,CAAW,2EAAX;AACAoB,OAAOpB,GAAP,CAAW,2EAAX;AACAoB,OAAOpB,GAAP,CAAW,6EAAX;AACA;AACAoB,OAAOpB,GAAP,CAAW,2EAAX;AACAoB,OAAOpB,GAAP,CAAW,6EAAX;AACAoB,OAAOpB,GAAP,CAAW,+EAAX;AACAoB,OAAOpB,GAAP,CAAW,kFAAX;AACAoB,OAAOpB,GAAP,CAAW,0EAAX;;AAEA,yDAAeoB,MAAf,E;;;;;;;;;;;;;;;;;;AClCA;AACA;;AAEA,IAAMA,SAAS,uDAAAC,EAAf;;AAEAD,OAAOE,IAAP,CAAY,YAAZ;AAAA,oLAA0B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEH,2DAAWD,IAAIE,IAAf,CAFG;;AAAA;AAEhBvC,gBAFgB;;AAGtBqC,gBAAIjB,OAAJ,CAAYpB,IAAZ,GAAmBA,IAAnB;AACAsC,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,wBAFU;AAGnBkC,oBAAMzC;AAHa,aAArB;AAJsB;AAAA;;AAAA;AAAA;AAAA;AAUlBO,mBAVkB,GAUR,EAVQ;AAAA;AAAA,4CAYf,GAZe,wBAef,GAfe;AAAA;;AAAA;AAalBA,sBAAU,wCAAV;AAbkB;;AAAA;AAgBlBA,sBAAU,mBAAV;AAhBkB;;AAAA;AAmBtB+B,gBAAIE,MAAJ,cAAmBxB,IAAnB,CAAwB,EAAEwB,mBAAF,EAAUjC,gBAAV,EAAxB;;AAnBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAuBA2B,OAAOE,IAAP,CAAY,aAAZ,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvCD,MAAIjB,OAAJ,CAAYpB,IAAZ,GAAmB,IAAnB;AACAsC,MAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,YAAQ,GADW;AAEnBjC,aAAS;AAFU,GAArB;AAID,CAND;;AAQA2B,OAAOE,IAAP,CAAY,cAAZ,EAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxCA,MAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,YAAQ,GADW;AAEnBjC,aAAS,sCAFU;AAGnBkC,UAAMJ,IAAIjB,OAAJ,CAAYpB,IAAZ,GAAmBqC,IAAIjB,OAAJ,CAAYpB,IAA/B,GAAsC;AAHzB,GAArB;AAKD,CAND;;AAQA,yDAAekC,MAAf,E;;;;;;AC5CA,gD;;;;;;;;;ACAA;;AAEO,IAAMQ,QAAQ,SAARA,KAAQ,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAf1C,QAAe,QAAfA,QAAe;;AAC/C,SAAO,IAAI2C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,mKAAN;;AAUA,QAAMC,SAAS,CAACL,QAAD,EAAW1C,QAAX,CAAf;;AAEAL,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAM6C,IAAN,EAAe;AAC3C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAzBM,CAAP;AA0BD,CA3BM,C;;;;;;;;;;;;;;;;;;ACFP;AACA;;AAEA,IAAMf,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOiB,GAAP,CAAW,wBAAX;AAAA,oLAAqC,iBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAER,oEAFQ;;AAAA;AAE3Bc,sBAF2B;;AAGjCd,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,qCAFU;AAGnBkC,oBAAMW;AAHa,aAArB;AAHiC;AAAA;;AAAA;AAAA;AAAA;AAS7B7C,mBAT6B,GASnB,EATmB;AAAA;AAAA,4CAY1B,GAZ0B;AAAA;;AAAA;AAa7BA,sBAAU,uBAAV;AAb6B;;AAAA;;AAiBjC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,mBAAF,EAAUjC,gBAAV,EAArB;;AAjBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAqBA;AACA2B,OAAOE,IAAP,CAAY,qBAAZ;AAAA,qLAAmC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEP,kEAAkBD,IAAIE,IAAtB,CAFO;;AAAA;AAEzBc,qBAFyB;;AAG/Bf,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,gCAFU;AAGnBkC,oBAAMY;AAHa,aAArB;AAH+B;AAAA;;AAAA;AAAA;AAAA;AAS3B9C,mBAT2B,GASjB,EATiB;AAAA;AAAA,8CAWxB,GAXwB,yBAcxB,GAdwB;AAAA;;AAAA;AAY3BA,sBAAU,qBAAV;AAZ2B;;AAAA;AAe3BA,sBAAU,uBAAV;AAf2B;;AAAA;AAkB/B+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAsBA;AACA2B,OAAOE,IAAP,CAAY,oBAAZ;AAAA,qLAAkC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAE9BD,IAAIE,IAAJ,CAASe,cAAT,IACAjB,IAAIE,IAAJ,CAASgB,cADT,IAEAlB,IAAIE,IAAJ,CAASiB,WAAT,IAAwB,CAFxB,IAGAnB,IAAIE,IAAJ,CAASkB,kBAAT,IAA+B,CAH/B,IAIApB,IAAIE,IAAJ,CAASmB,cAJT,IAKArB,IAAIE,IAAJ,CAASoB,WAAT,IAAwB,CALxB,IAMAtB,IAAIE,IAAJ,CAASqB,cARqB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAWX,kEAAkBvB,IAAIE,IAAtB,CAXW;;AAAA;AAWtBsB,cAXsB;;AAY5B;;AAEAvB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS;AACT;AAHmB,aAArB;AAd4B;AAAA;;AAAA;AAAA;AAAA;;AAoB5B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AApB4B;AAAA;AAAA;;AAAA;AAuB9B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAvB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AA2BA;AACA2B,OAAOE,IAAP,CAAY,uBAAZ;AAAA,qLAAqC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAET,kEAAkBD,IAAIE,IAAtB,CAFS;;AAAA;AAE3Bc,qBAF2B;AAAA;AAAA,mBAG3B,qEAAqBhB,IAAIE,IAAzB,CAH2B;;AAAA;;AAKjCD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,6BAFU;AAGnBkC,oBAAMY;AAHa,aAArB;AALiC;AAAA;;AAAA;AAAA;AAAA;AAW7B9C,mBAX6B,GAWnB,EAXmB;AAAA;AAAA,8CAa1B,GAb0B,yBAgB1B,GAhB0B;AAAA;;AAAA;AAc7BA,sBAAU,oCAAV;AAd6B;;AAAA;AAiB7BA,sBAAU,uBAAV;AAjB6B;;AAAA;AAoBjC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AApBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAwBA;AACA2B,OAAOE,IAAP,CAAY,qBAAZ;AAAA,qLAAmC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEzB,mEAAmBD,IAAIE,IAAvB,CAFyB;;AAAA;AAAA;AAAA,mBAGD,kEAAkB,EAAEsB,IAAIxB,IAAIE,IAAJ,CAASuB,YAAf,EAAlB,CAHC;;AAAA;AAGzBC,2BAHyB;;;AAK/BzB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,+BAFU;AAGnBkC,oBAAMsB;AAHa,aAArB;AAL+B;AAAA;;AAAA;AAAA;AAAA;AAW3BxD,mBAX2B,GAWjB,EAXiB;AAAA;AAAA,8CAaxB,GAbwB,yBAgBxB,GAhBwB;AAAA;;AAAA;AAc3BA,sBAAU,qBAAV;AAd2B;;AAAA;AAiB3BA,sBAAU,uBAAV;AAjB2B;;AAAA;AAoB/B+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AApB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAwBA,yDAAe2B,MAAf,E;;;;;;;;;;;;;AChIA;;AAEA;AACO,IAAM8B,eAAe,SAAfA,YAAe,OAAY;AAAA,MAATH,EAAS,QAATA,EAAS;;AACtC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,oFAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAM6C,IAAN,EAAe;AACvC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBP;AACO,IAAMgB,gBAAgB,SAAhBA,aAAgB,GAAM;AACjC,SAAO,IAAIrB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,2DAAN;;AAKAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAdM,CAAP;AAeD,CAhBM;;AAkBP;AACO,IAAMiB,eAAe,SAAfA,YAAe,QAWtB;AAAA,MAVJP,WAUI,SAVJA,WAUI;AAAA,MATJJ,cASI,SATJA,cASI;AAAA,MARJD,cAQI,SARJA,cAQI;AAAA,MAPJE,WAOI,SAPJA,WAOI;AAAA,MANJC,kBAMI,SANJA,kBAMI;AAAA,MALJC,cAKI,SALJA,cAKI;AAAA,MAJJS,UAII,SAJJA,UAII;AAAA,MAHJC,QAGI,SAHJA,QAGI;AAAA,MAFJR,cAEI,SAFJA,cAEI;AAAA,MADJS,MACI,SADJA,MACI;;AACJ,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,4FAAN;;AAIA,QAAMC,SAAS,CACbW,WADa,EAEbJ,cAFa,EAGbD,cAHa,EAIbE,WAJa,EAKbC,kBALa,EAMbC,cANa,EAObS,UAPa,EAQbC,QARa,EASbR,cATa,EAUbS,MAVa,CAAf;;AAaAzE,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GA1BM,CAAP;AA2BD,CAvCM;;AAyCP;AACO,IAAMC,kBAAkB,SAAlBA,eAAkB,QAAY;AAAA,MAATX,EAAS,SAATA,EAAS;;AACzC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,uDAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAMkE,OAAN,EAAkB;AAC1C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBP;AACO,IAAM6B,gBAAgB,SAAhBA,aAAgB,QAYvB;AAAA,MAXJC,mBAWI,SAXJA,mBAWI;AAAA,MAVJC,kBAUI,SAVJA,kBAUI;AAAA,MATJC,qBASI,SATJA,qBASI;AAAA,MARJC,qBAQI,SARJA,qBAQI;AAAA,MAPJC,kBAOI,SAPJA,kBAOI;AAAA,MANJC,yBAMI,SANJA,yBAMI;AAAA,MALJC,qBAKI,SALJA,qBAKI;AAAA,MAJJC,iBAII,SAJJA,iBAII;AAAA,MAHJC,eAGI,SAHJA,eAGI;AAAA,MAFJC,qBAEI,SAFJA,qBAEI;AAAA,MADJC,aACI,SADJA,aACI;;AACJ,SAAO,IAAIzC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,qFAAN;;AAIA,QAAMC,SAAS,CACb2B,mBADa,EAEbC,kBAFa,EAGbC,qBAHa,EAIbC,qBAJa,EAKbC,kBALa,EAMbC,yBANa,EAObC,qBAPa,EAQbC,iBARa,EASbC,eATa,EAUbC,qBAVa,EAWbC,aAXa,CAAf;;AAcAzF,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GA/BM,CAAP;AAgCD,CA7CM,C;;;;;;;;;;;;;;;;;;AC5GP;AACA;;AAEA,IAAMX,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOE,IAAP,CAAY,uBAAZ;AAAA,oLAAqC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEP,oEAAoBD,IAAIE,IAAxB,CAFO;;AAAA;AAE3B+C,uBAF2B;;AAGjChD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,kCAFU;AAGnBkC,oBAAM6C;AAHa,aAArB;AAHiC;AAAA;;AAAA;AAAA;AAAA;AAS7B/E,mBAT6B,GASnB,EATmB;AAAA;AAAA,4CAW1B,GAX0B,wBAc1B,GAd0B;AAAA;;AAAA;AAY7BA,sBAAU,uBAAV;AAZ6B;;AAAA;AAe7BA,sBAAU,uBAAV;AAf6B;;AAAA;AAkBjC+B,gBAAIE,MAAJ,cAAmBxB,IAAnB,CAAwB,EAAEwB,mBAAF,EAAUjC,gBAAV,EAAxB;;AAlBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAsBA;AACA2B,OAAOE,IAAP,CAAY,0BAAZ;AAAA,qLAAwC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAET,qEAAqBD,IAAIE,IAAzB,CAFS;;AAAA;AAE9BgD,wBAF8B;;AAGpCjD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,uCAFU;AAGnBkC,oBAAM8C;AAHa,aAArB;AAHoC;AAAA;;AAAA;AAAA;AAAA;AAShChF,mBATgC,GAStB,EATsB;AAAA;AAAA,8CAY7B,GAZ6B;AAAA;;AAAA;AAahCA,sBAAU,uBAAV;AAbgC;;AAAA;;AAiBpC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAArB;;AAjBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;;AAAA;AAAA;AAAA;AAAA;;AAqBA;AACA2B,OAAOE,IAAP,CAAY,sBAAZ;AAAA,qLAAoC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEhCD,IAAIE,IAAJ,CAASiD,YAAT,IAAyB,CAAzB,IACAnD,IAAIE,IAAJ,CAASkD,QADT;AAEA;AACApD,gBAAIE,IAAJ,CAASmD;AACT;AACA;AACA;AARgC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAWb,oEAAoBrD,IAAIE,IAAxB,CAXa;;AAAA;AAWxBsB,cAXwB;;AAY9BxD,oBAAQC,GAAR,CAAY,OAAZ;AACAD,oBAAQC,GAAR,CAAY+B,IAAIE,IAAJ,CAASmD,KAArB;AACA;AACA;;AAEApD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,kCAFU;AAGnBkC,oBAAMoB;AACN;AAJmB,aAArB;AAjB8B;AAAA;;AAAA;AAAA;AAAA;;AAwB9BvB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAxB8B;AAAA;AAAA;;AAAA;AA2BhC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AA3BgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;;AA+BA;AACA2B,OAAOE,IAAP,CAAY,mBAAZ;AAAA,qLAAiC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAC3BD,IAAIE,IAAJ,CAASoD,cADkB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAGrB,iEAAiBtD,IAAIE,IAArB,CAHqB;;AAAA;AAIrBqD,eAJqB,GAIf,qEAAqBvD,IAAIE,IAAzB,CAJe;;;AAM3BD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,6BAFU;AAGnBkC,oBAAMmD;AAHa,aAArB;AAN2B;AAAA;;AAAA;AAAA;AAAA;;AAY3BtD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAZ2B;AAAA;AAAA;;AAAA;AAe7B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAf6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;;AAmBA;AACA2B,OAAOE,IAAP,CAAY,yBAAZ;AAAA,qLAAuC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAET,oEAAoBD,IAAIE,IAAxB,CAFS;;AAAA;AAE7B+C,uBAF6B;AAAA;AAAA,mBAG7B,uEAAuBjD,IAAIE,IAA3B,CAH6B;;AAAA;;AAKnCD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,kCAFU;AAGnBkC,oBAAM6C;AAHa,aAArB;AALmC;AAAA;;AAAA;AAAA;AAAA;AAW/B/E,mBAX+B,GAWrB,EAXqB;AAAA;AAAA,8CAa5B,GAb4B,yBAgB5B,GAhB4B;AAAA;;AAAA;AAc/BA,sBAAU,uBAAV;AAd+B;;AAAA;AAiB/BA,sBAAU,uBAAV;AAjB+B;;AAAA;AAoBnC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AApBmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA;;AAwBA;AACA2B,OAAOE,IAAP,CAAY,uBAAZ;AAAA,qLAAqC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE3B,qEAAqBD,IAAIE,IAAzB,CAF2B;;AAAA;AAAA;AAAA,mBAGP,oEAAoB;AAC5CsB,kBAAIxB,IAAIE,IAAJ,CAASoD;AAD+B,aAApB,CAHO;;AAAA;AAG3BL,uBAH2B;;;AAOjChD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,iCAFU;AAGnBkC,oBAAM6C;AAHa,aAArB;AAPiC;AAAA;;AAAA;AAAA;AAAA;AAa7B/E,mBAb6B,GAanB,EAbmB;AAAA;AAAA,8CAe1B,GAf0B,yBAkB1B,GAlB0B;AAAA;;AAAA;AAgB7BA,sBAAU,uBAAV;AAhB6B;;AAAA;AAmB7BA,sBAAU,uBAAV;AAnB6B;;AAAA;AAsBjC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAtBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AA0BA;AACA2B,OAAOiB,GAAP,CAAW,gCAAX;AAAA,qLAA6C,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEd,mEAFc;;AAAA;AAEnCiD,wBAFmC;;AAGzCjD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,+BAFU;AAGnBkC,oBAAM8C;AAHa,aAArB;AAHyC;AAAA;;AAAA;AAAA;AAAA;AASrChF,mBATqC,GAS3B,EAT2B;AAAA;AAAA,8CAYlC,GAZkC;AAAA;;AAAA;AAarCA,sBAAU,uBAAV;AAbqC;;AAAA;;AAiBzC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAArB;;AAjByC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7C;;AAAA;AAAA;AAAA;AAAA;;AAqBA;AACA2B,OAAOE,IAAP,CAAY,wCAAZ;AAAA,qLAAsD,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEvB,0EAA0BD,IAAIE,IAA9B,CAFuB;;AAAA;AAE5CgD,wBAF4C;;AAGlDjD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,6CAFU;AAGnBkC,oBAAM8C;AAHa,aAArB;AAHkD;AAAA;;AAAA;AAAA;AAAA;AAS9ChF,mBAT8C,GASpC,EAToC;AAAA;AAAA,8CAY3C,GAZ2C;AAAA;;AAAA;AAa9CA,sBAAU,uBAAV;AAb8C;;AAAA;;AAiBlD+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAArB;;AAjBkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtD;;AAAA;AAAA;AAAA;AAAA;;AAqBA;AACA2B,OAAOiB,GAAP,CAAW,gCAAX;AAAA,qLAA6C,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEd,kEAAkBD,IAAIE,IAAtB,CAFc;;AAAA;AAEnCgD,wBAFmC;;AAGzCjD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,oCAFU;AAGnBkC,oBAAM8C;AAHa,aAArB;AAHyC;AAAA;;AAAA;AAAA;AAAA;AASrChF,mBATqC,GAS3B,EAT2B;AAAA;AAAA,8CAYlC,GAZkC;AAAA;;AAAA;AAarCA,sBAAU,uBAAV;AAbqC;;AAAA;;AAiBzC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAArB;;AAjByC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7C;;AAAA;AAAA;AAAA;AAAA;;AAqBA;AACA2B,OAAOE,IAAP,CAAY,kCAAZ;AAAA,sLAAgD,mBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGtC,qEAAqBD,IAAIE,IAAzB,CAHsC;;AAAA;;AAK5CD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS;AACT;AAHmB,aAArB;AAL4C;AAAA;;AAAA;AAAA;AAAA;AAWxCA,mBAXwC,GAW9B,EAX8B;AAAA;AAAA,gDAarC,GAbqC,0BAgBrC,GAhBqC;AAAA;;AAAA;AAcxCA,sBAAU,uBAAV;AAdwC;;AAAA;AAiBxCA,sBAAU,uBAAV;AAjBwC;;AAAA;AAoB5C+B,gBAAIE,MAAJ,gBAAmBxB,IAAnB,CAAwB,EAAEwB,qBAAF,EAAUjC,gBAAV,EAAxB;;AApB4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhD;;AAAA;AAAA;AAAA;AAAA;;AAwBA;AACA2B,OAAOE,IAAP,CAAY,+BAAZ;AAAA,sLAA6C,mBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEd,kEAAkBD,IAAIE,IAAtB,CAFc;;AAAA;AAEnCgD,wBAFmC;;AAGzCjD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,+BAFU;AAGnBkC,oBAAM8C;AAHa,aAArB;AAHyC;AAAA;;AAAA;AAAA;AAAA;AASrChF,mBATqC,GAS3B,EAT2B;AAAA;AAAA,gDAWlC,GAXkC,0BAclC,GAdkC;AAAA;;AAAA;AAYrCA,sBAAU,uBAAV;AAZqC;;AAAA;AAerCA,sBAAU,uBAAV;AAfqC;;AAAA;;AAmBzC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,qBAAF,EAAUjC,gBAAV,EAArB;;AAnByC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7C;;AAAA;AAAA;AAAA;AAAA;;AAuBA,yDAAe2B,MAAf,E;;;;;;;;;;;;;;;;;;;;AC7QA;;AAEA;AACO,IAAM2D,iBAAiB,SAAjBA,cAAiB,OAAY;AAAA,MAAThC,EAAS,QAATA,EAAS;;AACxC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,qEAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAM6C,IAAN,EAAe;AACvC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBP;AACO,IAAM6C,kBAAkB,SAAlBA,eAAkB,QAAe;AAAA,MAAZC,KAAY,SAAZA,KAAY;;AAC5C,SAAO,IAAInD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,gEAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBgD,KAAtB,EAA6B,UAAC3F,GAAD,EAAM6C,IAAN,EAAe;AAC1C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAbM,CAAP;AAcD,CAfM;;AAiBP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACO,IAAM+C,iBAAiB,SAAjBA,cAAiB,QASxB;AAAA,MARJR,YAQI,SARJA,YAQI;AAAA,MAPJC,QAOI,SAPJA,QAOI;AAAA,MANJQ,OAMI,SANJA,OAMI;AAAA,MALJP,KAKI,SALJA,KAKI;AAAA,MAJJQ,IAII,SAJJA,IAII;AAAA,MAHJC,UAGI,SAHJA,UAGI;AAAA,MAFJC,QAEI,SAFJA,QAEI;AAAA,MADJ/B,MACI,SADJA,MACI;;AACJ,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIqD,eAAe,EAAf,IAAqBC,aAAa,EAAtC,EAA0C;AACxC,UAAMrD,0GAAN;;AAIA,UAAMC,UAAS,CAACwC,YAAD,EAAeC,QAAf,EAAyBQ,OAAzB,EAAkCP,KAAlC,EAAyCQ,IAAzC,EAA+C7B,MAA/C,CAAf;AACD,KAND,MAMO;AACL,UAAMtB,qGAAN;;AAIA,UAAMC,WAAS,CACbwC,YADa,EAEbC,QAFa,EAGbQ,OAHa,EAIbP,KAJa,EAKbQ,IALa,EAMbC,UANa,EAObC,QAPa,EAQb/B,MARa,CAAf;AAUD;;AAEDzE,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACAC,gBAAQC,GAAR,CAAY,SAAZ;AACA,eAAOwC,OAAO,GAAP,CAAP;AACD;;AAED;AACA,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KATD;AAUD,GAlCM,CAAP;AAmCD,CA7CM;;AA+CA,IAAM8B,oBAAoB,SAApBA,iBAAoB,QAAe;AAAA,MAAZX,KAAY,SAAZA,KAAY;;AAC9C,SAAO,IAAI9C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,qIAAN;;AAIA,QAAMC,SAAS,CAAC0C,KAAD,CAAf;;AAEA9F,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACAC,gBAAQC,GAAR,CAAY,SAAZ;AACA,eAAOwC,OAAO,GAAP,CAAP;AACD;;AAED;AACA,aAAOD,QAAQyB,OAAR,CAAP;AACD,KATD;AAUD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBP;AACO,IAAMgC,cAAc,SAAdA,WAAc,QAAqC;AAAA,MAAlCC,WAAkC,SAAlCA,WAAkC;AAAA,MAArBZ,cAAqB,SAArBA,cAAqB;;AAC9D,SAAO,IAAI/C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,mEAAN;;AAIA,QAAMC,SAAS,CAACuD,WAAD,EAAcZ,cAAd,CAAf;;AAEA/F,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED;AACA,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KARD;AASD,GAhBM,CAAP;AAiBD,CAlBM;;AAoBP;AACO,IAAMiC,kBAAkB,SAAlBA,eAAkB,QAAqC;AAAA,MAAlCD,WAAkC,SAAlCA,WAAkC;AAAA,MAArBZ,cAAqB,SAArBA,cAAqB;;AAClE,SAAO,IAAI/C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,8EAAN;;AAIA,QAAMC,SAAS,CAACuD,WAAD,EAAcZ,cAAd,CAAf;;AAEA/F,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAM6C,IAAN,EAAe;AAC3C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAPD;AAQD,GAfM,CAAP;AAgBD,CAjBM;;AAmBP;AACO,IAAMwD,oBAAoB,SAApBA,iBAAoB,QAAY;AAAA,MAAT5C,EAAS,SAATA,EAAS;;AAC3C,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,yDAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAMkE,OAAN,EAAkB;AAC1C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBP;AACO,IAAM6D,kBAAkB,SAAlBA,eAAkB,QASzB;AAAA,MARJlB,YAQI,SARJA,YAQI;AAAA,MAPJC,QAOI,SAPJA,QAOI;AAAA,MANJQ,OAMI,SANJA,OAMI;AAAA,MALJP,KAKI,SALJA,KAKI;AAAA,MAJJQ,IAII,SAJJA,IAII;AAAA,MAHJC,UAGI,SAHJA,UAGI;AAAA,MAFJC,QAEI,SAFJA,QAEI;AAAA,MADJT,cACI,SADJA,cACI;;AACJ,SAAO,IAAI/C,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,8EAAN;;AAIA,QAAMC,SAAS,CACbwC,YADa,EAEbC,QAFa,EAGbQ,OAHa,EAIbP,KAJa,EAKbQ,IALa,EAMbC,UANa,EAObC,QAPa,EAQbT,cARa,CAAf;;AAWA/F,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GA5BM,CAAP;AA6BD,CAvCM;;AAyCP;AACO,IAAM8D,eAAe,SAAfA,YAAe,GAAM;AAChC,SAAO,IAAI/D,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,qDAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAbM,CAAP;AAcD,CAfM;;AAiBP;AACO,IAAM2D,uBAAuB,SAAvBA,oBAAuB,QAAe;AAAA,MAAZb,KAAY,SAAZA,KAAY;;AACjD,SAAO,IAAInD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,uEAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBgD,KAAtB,EAA6B,UAAC3F,GAAD,EAAM6C,IAAN,EAAe;AAC1C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAbM,CAAP;AAcD,CAfM;;AAiBP;AACO,IAAM4D,kBAAkB,SAAlBA,eAAkB,SAAY;AAAA,MAAThD,EAAS,UAATA,EAAS;;AACzC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,sDAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAMkE,OAAN,EAAkB;AAC1C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBP;AACO,IAAMiE,eAAe,SAAfA,YAAe,SAAY;AAAA,MAATjD,EAAS,UAATA,EAAS;;AACtC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,+IAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAMkE,OAAN,EAAkB;AAC1C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,OAAR,CAAP;AACD,KAPD;AAQD,GAbM,CAAP;AAcD,CAfM,C;;;;;;;;;;;;;;;;;;ACnSP;AACA;;AAEA,IAAMpC,SAAS,uDAAAC,EAAf;;AAEAD,OAAOE,IAAP,CAAY,aAAZ;AAAA,oLAA2B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEvBD,IAAIE,IAAJ,CAAS8B,MAAT,IACAhC,IAAIE,IAAJ,CAASI,QADT,IAEAN,IAAIE,IAAJ,CAAStC,QAFT,IAGAoC,IAAIE,IAAJ,CAASwE,IAHT,IAIA1E,IAAIE,IAAJ,CAASyE,MAJT,IAKA3E,IAAIE,IAAJ,CAAS0E,MALT,IAMA5E,IAAIE,IAAJ,CAAS2E,MANT,IAOA7E,IAAIE,IAAJ,CAAS4E,UAPT,IAQA9E,IAAIE,IAAJ,CAAS6E,OART,IASA/E,IAAIE,IAAJ,CAAS8E,QATT,IAUAhF,IAAIE,IAAJ,CAAS+E,YAVT,IAWAjF,IAAIE,IAAJ,CAASgF,KAbc;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAgBJ,iEAAiBlF,IAAIE,IAArB,CAhBI;;AAAA;AAgBfsB,cAhBe;;AAiBrB;;AAEAvB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS;AACT;AAHmB,aAArB;AAnBqB;AAAA;;AAAA;AAAA;AAAA;;AAyBrB+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAzBqB;AAAA;AAAA;;AAAA;AA4BvB+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AA5BuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAgCA,yDAAe2B,MAAf,E;;;;;;;;;;ACrCA;;AAEA;AACO,IAAMsF,cAAc,SAAdA,WAAc,OAarB;AAAA,MAZJnD,MAYI,QAZJA,MAYI;AAAA,MAXJ1B,QAWI,QAXJA,QAWI;AAAA,MAVJ1C,QAUI,QAVJA,QAUI;AAAA,MATJ8G,IASI,QATJA,IASI;AAAA,MARJC,MAQI,QARJA,MAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,MAMI,QANJA,MAMI;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,KACI,QADJA,KACI;;AACJ,SAAO,IAAI3E,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,qHAAN;;AAIA,QAAMC,SAAS,CACbqB,MADa,EAEb1B,QAFa,EAGb1C,QAHa,EAIb8G,IAJa,EAKbC,MALa,EAMbC,MANa,EAObC,MAPa,EAQbC,UARa,EASbC,OATa,EAUbC,QAVa,EAWbC,YAXa,EAYbC,KAZa,CAAf;;AAeA3H,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED;AACA,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KARD;AASD,GA7BM,CAAP;AA8BD,CA5CM;;AA8CP;AACO,IAAMkD,cAAc,SAAdA,WAAc,QAAY;AAAA,MAAT5D,EAAS,SAATA,EAAS;;AACrC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,uJAAN;;AASAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAM6C,IAAN,EAAe;AACvC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAtBM,CAAP;AAuBD,CAxBM,C;;;;;;;;;;;;;;;;;;AClDP;AACA;;AAEA,IAAMf,SAAS,uDAAAC,EAAf;;AAEAD,OAAOE,IAAP,CAAY,oBAAZ;AAAA,oLAAkC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChCjC,oBAAQC,GAAR,CAAY+B,IAAIE,IAAhB;;AADgC,kBAE5BF,IAAIE,IAAJ,CAASmF,OAAT,IACArF,IAAIE,IAAJ,CAASoF,QADT,IAEAtF,IAAIjB,OAAJ,CAAYpB,IAAZ,CAAiBqE,MAFjB,IAGAhC,IAAIE,IAAJ,CAAS4B,UAHT,IAIA9B,IAAIE,IAAJ,CAASqF,MAJT,IAKAvF,IAAIE,IAAJ,CAASsF,UAPmB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAWX,kEAAkBxF,IAAIE,IAAtB,EAA2BF,IAAIjB,OAAJ,CAAYpB,IAAvC,CAXW;;AAAA;AAWtB6D,cAXsB;AAAA;AAAA,mBAYP,kEAAkB,EAAEiE,cAAcjE,EAAhB,EAAlB,CAZO;;AAAA;AAYtBkE,kBAZsB;;;AAc5BzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,iCAFU;AAGnBkC,oBAAMsF;AAHa,aAArB;AAd4B;AAAA;;AAAA;AAAA;AAAA;;AAoB5BzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AApB4B;AAAA;AAAA;;AAAA;AAuB9B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAvB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AA2BA2B,OAAOE,IAAP,CAAY,uBAAZ;AAAA,qLAAqC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAC/BD,IAAIE,IAAJ,CAASuF,YADsB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAGZ,kEAAkBzF,IAAIE,IAAtB,CAHY;;AAAA;AAGzByF,gBAHyB;AAAA;AAAA,mBAIzB,qEAAqB3F,IAAIE,IAAzB,CAJyB;;AAAA;;AAM/BD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,iCAFU;AAGnBkC,oBAAMuF;AAHa,aAArB;AAN+B;AAAA;;AAAA;AAAA;AAAA;;AAY/B1F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAZ+B;AAAA;AAAA;;AAAA;AAejC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAfiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAmBA2B,OAAOE,IAAP,CAAY,qBAAZ;AAAA,qLAAmC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCjC,oBAAQC,GAAR,CAAY+B,IAAIE,IAAhB;;AADiC,kBAG/BF,IAAIE,IAAJ,CAASuF,YAAT,IACAzF,IAAIE,IAAJ,CAASmF,OADT,IAEArF,IAAIE,IAAJ,CAASoF,QAFT,IAGAtF,IAAIE,IAAJ,CAAS4B,UAHT,IAIA9B,IAAIE,IAAJ,CAASqF,MAJT,IAKAvF,IAAIE,IAAJ,CAASsF,UALT,IAMAxF,IAAIjB,OAAJ,CAAYpB,IATmB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAYvB,mEAAmBqC,IAAIE,IAAvB,EAA4BF,IAAIjB,OAAJ,CAAYpB,IAAZ,CAAiBqE,MAA7C,CAZuB;;AAAA;AAAA;AAAA,mBAaR,kEAAkB;AACrCyD,4BAAczF,IAAIE,IAAJ,CAASuF;AADc,aAAlB,CAbQ;;AAAA;AAavBC,kBAbuB;;AAgB7BzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,gCAFU;AAGnBkC,oBAAMsF;AAHa,aAArB;AAhB6B;AAAA;;AAAA;AAAA;AAAA;;AAsB7BzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAtB6B;AAAA;AAAA;;AAAA;AAyB/B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAzB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AA6BA2B,OAAOE,IAAP,CAAY,qBAAZ;AAAA,qLAAmC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEZ,iEAAiBD,IAAIjB,OAAJ,CAAYpB,IAA7B,CAFY;;AAAA;AAEzBgI,gBAFyB;;AAG/B1F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,iCAFU;AAGnBkC,oBAAMuF;AAHa,aAArB;AAH+B;AAAA;;AAAA;AAAA;AAAA;AAS3BzH,mBAT2B,GASjB,EATiB;AAAA;AAAA,8CAWxB,GAXwB,yBAcxB,GAdwB;AAAA;;AAAA;AAY3BA,sBAAU,sBAAV;AAZ2B;;AAAA;AAe3BA,sBAAU,uBAAV;AAf2B;;AAAA;AAkB/B+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;AAqBA2B,OAAOE,IAAP,CAAY,kCAAZ;AAAA,qLAAgD,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAE5CD,IAAIjB,OAAJ,CAAYpB,IAAZ,IACAqC,IAAIE,IAAJ,CAASuF,YAHmC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAMvB,kEAAkBzF,IAAIE,IAAJ,CAASuF,YAA3B,CANuB;;AAAA;AAMpCE,gBANoC;;AAO1C1F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,iCAFU;AAGnBkC,oBAAMuF;AAHa,aAArB;AAP0C;AAAA;;AAAA;AAAA;AAAA;AAatCzH,mBAbsC,GAa5B,EAb4B;AAAA;AAAA,8CAenC,GAfmC,yBAkBnC,GAlBmC;AAAA;;AAAA;AAgBtCA,sBAAU,sBAAV;AAhBsC;;AAAA;AAmBtCA,sBAAU,uBAAV;AAnBsC;;AAAA;AAsB1C+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAtB0C;AAAA;AAAA;;AAAA;AAyB5C+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAzB4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhD;;AAAA;AAAA;AAAA;AAAA;;AA6BA2B,OAAOiB,GAAP,CAAW,wBAAX;AAAA,qLAAqC,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEV,sEAFU;;AAAA;AAE3B2F,oBAF2B;;AAGjC3F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,oCAFU;AAGnBkC,oBAAMwF;AAHa,aAArB;AAHiC;AAAA;;AAAA;AAAA;AAAA;AAS7B1H,mBAT6B,GASnB,EATmB;AAAA;AAAA,8CAY1B,GAZ0B;AAAA;;AAAA;AAa7BA,sBAAU,uBAAV;AAb6B;;AAAA;;AAiBjC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAArB;;AAjBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;AAoBA2B,OAAOiB,GAAP,CAAW,qCAAX;AAAA,qLAAkD,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE3B,yEAAyBD,IAAIjB,OAAJ,CAAYpB,IAArC,CAF2B;;AAAA;AAExCgI,gBAFwC;;AAG9C1F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,wCAFU;AAGnBkC,oBAAMuF;AAHa,aAArB;AAH8C;AAAA;;AAAA;AAAA;AAAA;AAS1CzH,mBAT0C,GAShC,EATgC;AAAA;AAAA,8CAWvC,GAXuC,yBAcvC,GAduC;AAAA;;AAAA;AAY1CA,sBAAU,uBAAV;AAZ0C;;AAAA;AAe1CA,sBAAU,uBAAV;AAf0C;;AAAA;AAkB9C+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlB8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlD;;AAAA;AAAA;AAAA;AAAA;;AAsBA2B,OAAOE,IAAP,CAAY,qCAAZ;AAAA,qLAAmD,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AACjDjC,oBAAQC,GAAR,CAAY+B,IAAIE,IAAhB;;AADiD,kBAG/CF,IAAIE,IAAJ,CAAS2F,MAAT,IACA7F,IAAIE,IAAJ,CAAS4F,GADT,IAEA9F,IAAIE,IAAJ,CAAS6F,UAFT,IAGA/F,IAAIE,IAAJ,CAAS8F,UAHT,IAIAhG,IAAIjB,OAAJ,CAAYpB,IAPmC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAUvC,0EAA0BqC,IAAIE,IAA9B,EAAmCF,IAAIjB,OAAJ,CAAYpB,IAAZ,CAAiBqE,MAApD,CAVuC;;AAAA;AAW7C/B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS;AAFU,aAArB;AAX6C;AAAA;;AAAA;AAAA;AAAA;;AAgB7C+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAhB6C;AAAA;AAAA;;AAAA;AAmB/C+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAnB+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD;;AAAA;AAAA;AAAA;AAAA;AAsBA,yDAAe2B,MAAf,E;;;;;;;;;;;;;;;;AClMA;;AAEO,IAAMoG,eAAe,SAAfA,YAAe,OAO1BtH,IAP0B,EAQvB;AAAA,MAPH0G,OAOG,QAPHA,OAOG;AAAA,MANHC,QAMG,QANHA,QAMG;AAAA,MALHxD,UAKG,QALHA,UAKG;AAAA,MAJHyD,MAIG,QAJHA,MAIG;AAAA,MAHHC,UAGG,QAHHA,UAGG;;AACH,SAAO,IAAIjF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMuB,SAASrD,KAAKqD,MAApB;AACA,QAAMtB,kEAAN;;AAIA,QAAMC,SAAS,CAAC0E,OAAD,EAAUC,QAAV,EAAoBtD,MAApB,EAA4BF,UAA5B,EAAwCyD,MAAxC,EAAgDC,UAAhD,CAAf;AACAjI,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GAfM,CAAP;AAgBD,CAzBM;;AA2BA,IAAMgE,kBAAkB,SAAlBA,eAAkB,QAAsB;AAAA,MAAnBT,YAAmB,SAAnBA,YAAmB;;AACnD,SAAO,IAAIlF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,oDAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB+E,YAAtB,EAAoC,UAAC1H,GAAD,EAAMkE,OAAN,EAAkB;AACpD,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBA,IAAM2F,gBAAgB,SAAhBA,aAAgB,CAACxH,IAAD,EAAMqD,MAAN,EAAiB;AAC1C,MAAMyD,eAAe9G,KAAK8G,YAA1B;AACA,MAAMJ,UAAU1G,KAAK0G,OAArB;AACA,MAAMC,WAAW3G,KAAK2G,QAAtB;AACA,MAAMxD,aAAanD,KAAKmD,UAAxB;AACA,MAAMyD,SAAS5G,KAAK4G,MAApB;AACA,MAAMC,aAAa7G,KAAK6G,UAAxB;AACF,SAAO,IAAIjF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,gEAAN;;AAIA,QAAMC,SAAS,CACb8E,YADa,EAEbJ,OAFa,EAGbC,QAHa,EAIbxD,UAJa,EAKbyD,MALa,EAMbC,UANa,EAObxD,MAPa,CAAf;;AAUAzE,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GA3BM,CAAP;AA4BD,CAnCM;;AAqCA,IAAM4F,eAAe,SAAfA,YAAe,QAAsB;AAAA,MAAnBX,YAAmB,SAAnBA,YAAmB;;AAChD,SAAO,IAAIlF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,qEAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB+E,YAAtB,EAAoC,UAAC1H,GAAD,EAAM6C,IAAN,EAAe;AACjD,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;AAoBA,IAAMyF,cAAc,SAAdA,WAAc,CAAE1H,IAAF,EAAY;AACrC,SAAO,IAAI4B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMuB,SAASrD,KAAKqD,MAApB;AACA,QAAMtB,mEAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,CAACsB,MAAD,CAAtB,EAAgC,UAACjE,GAAD,EAAM6C,IAAN,EAAe;AAC7C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAlBM,CAAP;AAmBD,CApBM;;AAuBA,IAAM0F,kBAAkB,SAAlBA,eAAkB,GAAM;AACnC,SAAO,IAAI/F,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,iDAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAbM,CAAP;AAcD,CAfM;;AAiBA,IAAM2F,sBAAsB,SAAtBA,mBAAsB,CAAE5H,IAAF,EAAY;AAC7C,SAAO,IAAI4B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMuB,SAASrD,KAAKqD,MAApB;AACA,QAAMtB,8EAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,CAACsB,MAAD,CAAtB,EAAgC,UAACjE,GAAD,EAAM6C,IAAN,EAAe;AAC7C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAlBM,CAAP;AAmBD,CApBM;;AAsBA,IAAM4F,uBAAuB,SAAvBA,oBAAuB,CAAC7H,IAAD,EAAMqD,MAAN,EAAiB;AACnD,MAAMyE,aAAa9H,KAAKmH,GAAxB;AACA,MAAMD,SAASlH,KAAKkH,MAApB;AACA,MAAIG,aAAa,KAAjB;AACA,MAAID,aAAa,KAAjB;AACA,MAAGpH,KAAKqH,UAAL,KAAoB,KAAvB,EAA6B;AAC3BA,iBAAa,IAAb;AACD;AACD,MAAGrH,KAAKoH,UAAL,KAAoB,KAAvB,EAA6B;AAC3BA,iBAAa,IAAb;AACD;;AAEH,SAAO,IAAIxF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,gEAAN;;AAIA,QAAMC,SAAS,CACbqB,MADa,EAEb6D,MAFa,EAGbY,UAHa,EAIbV,UAJa,EAKbC,UALa,CAAf;;AAQAzI,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAzBM,CAAP;AA0BC,CAtCM,C;;;;;;;;;;;;;;;;;;;;ACzKP;AACA;AACA;;AAEA,IAAMX,SAAS,uDAAAC,EAAf;;AAEAD,OAAOE,IAAP,CAAY,oBAAZ;AAAA,oLAAkC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChCjC,oBAAQC,GAAR,CAAY+B,GAAZ;;AADgC,kBAG9BA,IAAIE,IAAJ,CAASwG,cAAT,IACA1G,IAAIE,IAAJ,CAASyG,YADT,IAEA3G,IAAIE,IAAJ,CAAS0G,YAFT,IAGA5G,IAAIE,IAAJ,CAAS2G,IAHT,IAIA7G,IAAIE,IAAJ,CAAS4G,IAJT,IAKA9G,IAAIE,IAAJ,CAAS4B,UALT,IAMA9B,IAAIE,IAAJ,CAAS6B,QANT,IAOA/B,IAAIE,IAAJ,CAAS6G,KAPT,IAQA/G,IAAIE,IAAJ,CAAS8G,OAXqB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAgBX,kEAAkBhH,IAAIE,IAAtB,EAA4BF,IAAIjB,OAAJ,CAAYpB,IAAxC,CAhBW;;AAAA;AAgBtB6D,cAhBsB;AAAA;AAAA,mBAiBP,kEAAkB,EAAEyF,iBAAiBzF,EAAnB,EAAlB,CAjBO;;AAAA;AAiBtBkE,kBAjBsB;;;AAmB5BzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,oCAFU;AAGnBkC,oBAAMsF;AAHa,aAArB;AAnB4B;AAAA;;AAAA;AAAA;AAAA;;AAyB5BzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAzB4B;AAAA;AAAA;;AAAA;AA4B9B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AA5B8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AAgCA2B,OAAOE,IAAP,CAAY,wBAAZ;AAAA,qLAAsC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAChCD,IAAIE,IAAJ,CAAS+G,eADuB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAGb,kEAAkBjH,IAAIE,IAAtB,CAHa;;AAAA;AAG1ByF,gBAH0B;AAAA;AAAA,mBAI1B,qEAAqB3F,IAAIE,IAAzB,CAJ0B;;AAAA;;AAMhCD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,iCAFU;AAGnBkC,oBAAMuF;AAHa,aAArB;AANgC;AAAA;;AAAA;AAAA;AAAA;;AAYhC1F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAZgC;AAAA;AAAA;;AAAA;AAelC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAfkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAmBA2B,OAAOE,IAAP,CAAY,sBAAZ;AAAA,qLAAoC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEhCD,IAAIE,IAAJ,CAAS8B,MAAT,IACAhC,IAAIE,IAAJ,CAASwG,cADT,IAEA1G,IAAIE,IAAJ,CAASyG,YAFT,IAGA3G,IAAIE,IAAJ,CAAS0G,YAHT,IAIA5G,IAAIE,IAAJ,CAAS2G,IAJT,IAKA7G,IAAIE,IAAJ,CAAS4G,IALT,IAMA9G,IAAIE,IAAJ,CAAS4B,UANT,IAOA9B,IAAIE,IAAJ,CAAS6B,QAPT,IAQA/B,IAAIE,IAAJ,CAAS6G,KART,IASA/G,IAAIE,IAAJ,CAAS8G,OAXuB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAcxB,mEAAmBhH,IAAIE,IAAvB,CAdwB;;AAAA;AAAA;AAAA,mBAeT,iEAAiB;AACpC8B,sBAAQhC,IAAIE,IAAJ,CAAS8B;AADmB,aAAjB,CAfS;;AAAA;AAexB0D,kBAfwB;;;AAmB9BzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,gCAFU;AAGnBkC,oBAAMsF;AAHa,aAArB;AAnB8B;AAAA;;AAAA;AAAA;AAAA;;AAyB9BzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAzB8B;AAAA;AAAA;;AAAA;AA4BhC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AA5BgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;;AAgCA2B,OAAOE,IAAP,CAAY,qBAAZ;AAAA,qLAAmC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEZ,iEAAiBD,IAAIjB,OAAJ,CAAYpB,IAA7B,CAFY;;AAAA;AAEzBgI,gBAFyB;;AAG/B1F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,iCAFU;AAGnBkC,oBAAMuF;AAHa,aAArB;AAH+B;AAAA;;AAAA;AAAA;AAAA;AAS3BzH,mBAT2B,GASjB,EATiB;AAAA;AAAA,8CAWxB,GAXwB,yBAcxB,GAdwB;AAAA;;AAAA;AAY3BA,sBAAU,sBAAV;AAZ2B;;AAAA;AAe3BA,sBAAU,uBAAV;AAf2B;;AAAA;AAkB/B+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAsBA2B,OAAOiB,GAAP,CAAW,wBAAX;AAAA,qLAAqC,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEV,sEAFU;;AAAA;AAE3B2F,oBAF2B;;AAGjC3F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,wCAFU;AAGnBkC,oBAAMwF;AAHa,aAArB;AAHiC;AAAA;;AAAA;AAAA;AAAA;AAS7B1H,mBAT6B,GASnB,EATmB;AAAA;AAAA,8CAY1B,GAZ0B;AAAA;;AAAA;AAa7BA,sBAAU,uBAAV;AAb6B;;AAAA;;AAiBjC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAArB;;AAjBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAqBA,yDAAe2B,MAAf,E;;;;;;;;;;;;;;ACpIA;;AAEO,IAAMqH,eAAe,SAAfA,YAAe,OAA0FvI,IAA1F,EAAmG;AAAA,MAAhG+H,cAAgG,QAAhGA,cAAgG;AAAA,MAAhFC,YAAgF,QAAhFA,YAAgF;AAAA,MAAlEC,YAAkE,QAAlEA,YAAkE;AAAA,MAApDC,IAAoD,QAApDA,IAAoD;AAAA,MAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,MAAxChF,UAAwC,QAAxCA,UAAwC;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBiF,OAAkB,QAAlBA,OAAkB;;AAC7H,SAAO,IAAIzG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMuB,SAASrD,KAAKqD,MAApB;AACA,QAAMtB,qQAAN;AAQA;AACA;AACA,QAAMC,SAAS,CAACqB,MAAD,EAAS0E,cAAT,EAAyBC,YAAzB,EAAuCC,YAAvC,CAAf;;AAEArJ,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GAtBM,CAAP;AAuBD,CAxBM;;AA0BA,IAAMiF,kBAAkB,SAAlBA,eAAkB,QAAyB;AAAA,MAAtBF,eAAsB,SAAtBA,eAAsB;;AACtD,SAAO,IAAI1G,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,qHAAN;;AAOAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBuG,eAAtB,EAAuC,UAAClJ,GAAD,EAAMkE,OAAN,EAAkB;AACvD,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GApBM,CAAP;AAqBD,CAtBM;;AAwBA,IAAM4G,gBAAgB,SAAhBA,aAAgB,QAAsG;AAAA,MAAnGV,cAAmG,SAAnGA,cAAmG;AAAA,MAAnF1E,MAAmF,SAAnFA,MAAmF;AAAA,MAA3E2E,YAA2E,SAA3EA,YAA2E;AAAA,MAA7DC,YAA6D,SAA7DA,YAA6D;AAAA,MAA/CC,IAA+C,SAA/CA,IAA+C;AAAA,MAAzCC,IAAyC,SAAzCA,IAAyC;AAAA,MAAnChF,UAAmC,SAAnCA,UAAmC;AAAA,MAAvBC,QAAuB,SAAvBA,QAAuB;AAAA,MAAbiF,OAAa,SAAbA,OAAa;;AACjI,SAAO,IAAIzG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,qSAAN;;AAWA,QAAMC,SAAS,CAAC+F,cAAD,EAAiB1E,MAAjB,EAAyB2E,YAAzB,EAAuCC,YAAvC,CAAf;;AAEArJ,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GA1BM,CAAP;AA2BD,CA5BM;;AA8BA,IAAM6G,eAAe,SAAfA,YAAe,QAAyB;AAAA,MAAtBJ,eAAsB,SAAtBA,eAAsB;;AACnD,SAAO,IAAI1G,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,0JAAN;;AASAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBuG,eAAtB,EAAuC,UAAClJ,GAAD,EAAM6C,IAAN,EAAe;AACpD,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAtBM,CAAP;AAuBD,CAxBM;;AA0BA,IAAM0G,cAAc,SAAdA,WAAc,CAAC3I,IAAD,EAAU;AACnC,SAAO,IAAI4B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMuB,SAASrD,KAAKqD,MAApB;AACA,QAAMtB,sEAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,CAACsB,MAAD,CAAtB,EAAgC,UAACjE,GAAD,EAAM6C,IAAN,EAAe;AAC7C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAlBM,CAAP;AAmBD,CApBM;;AAsBA,IAAM2G,kBAAkB,SAAlBA,eAAkB,GAAM;AACnC,SAAO,IAAIhH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,2EAAN;;AAKAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAdM,CAAP;AAeD,CAhBM,C;;;;;;AClIP,iC;;;;;;;;;;;;;;;;;;ACAA;AACA;;AAEA,IAAMf,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOE,IAAP,CAAY,mBAAZ;AAAA,oLAAiC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEP,gEAAgBD,IAAIE,IAApB,CAFO;;AAAA;AAEvBsH,mBAFuB;;AAG7BvH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,8BAFU;AAGnBkC,oBAAMoH;AAHa,aAArB;AAH6B;AAAA;;AAAA;AAAA;AAAA;AASzBtJ,mBATyB,GASf,EATe;AAAA;AAAA,4CAWtB,GAXsB,wBActB,GAdsB;AAAA;;AAAA;AAYzBA,sBAAU,mBAAV;AAZyB;;AAAA;AAezBA,sBAAU,uBAAV;AAfyB;;AAAA;AAkB7B+B,gBAAIE,MAAJ,cAAmBxB,IAAnB,CAAwB,EAAEwB,mBAAF,EAAUjC,gBAAV,EAAxB;;AAlB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;;AAsBA;AACA2B,OAAOiB,GAAP,CAAW,sBAAX;AAAA,qLAAmC,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAET,oEAFS;;AAAA;AAEzBuH,mBAFyB;;AAG/BvH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,kCAFU;AAGnBkC,oBAAMoH;AAHa,aAArB;AAH+B;AAAA;;AAAA;AAAA;AAAA;AAS3BtJ,mBAT2B,GASjB,EATiB;AAAA;AAAA,8CAYxB,GAZwB;AAAA;;AAAA;AAa3BA,sBAAU,uBAAV;AAb2B;;AAAA;;AAiB/B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAArB;;AAjB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAqBA,yDAAe2B,MAAf,E;;;;;;;;;;AClDA;;AAEA;AACO,IAAM4H,aAAa,SAAbA,UAAa,OAAY;AAAA,MAATjG,EAAS,QAATA,EAAS;;AACpC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,kEAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAM6C,IAAN,EAAe;AACvC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBP;AACO,IAAM8G,gBAAgB,SAAhBA,aAAgB,GAAM;AACjC,SAAO,IAAInH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,mDAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM,C;;;;;;;;;;;;;;;;;;ACzBP;AACA;;AAEA,IAAMf,SAAS,uDAAAC,EAAf;;AAEAD,OAAOE,IAAP,CAAY,mBAAZ;AAAA,oLAAiC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAE7BD,IAAIE,IAAJ,CAASyH,MAAT,IACA3H,IAAIE,IAAJ,CAASiD,YADT,IAEAnD,IAAIE,IAAJ,CAAS8B,MAJoB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAOV,iEAAiBhC,IAAIE,IAArB,CAPU;;AAAA;AAOrBsB,cAPqB;;AAQ3B;;AAEAvB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS;AACT;;AAHmB,aAArB;AAV2B;AAAA;;AAAA;AAAA;AAAA;;AAiB3B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAjB2B;AAAA;AAAA;;AAAA;AAoB7B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AApB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;;AAwBA2B,OAAOE,IAAP,CAAY,sBAAZ;AAAA,qLAAoC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEL,iEAAiBD,IAAIE,IAArB,CAFK;;AAAA;AAE1B0H,wBAF0B;AAAA;AAAA,mBAG1B,oEAAoB5H,IAAIE,IAAxB,CAH0B;;AAAA;;AAKhCD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,+BAFU;AAGnBkC,oBAAMwH;AAHa,aAArB;AALgC;AAAA;;AAAA;AAAA;AAAA;AAW5B1J,mBAX4B,GAWlB,EAXkB;AAAA;AAAA,8CAazB,GAbyB,yBAgBzB,GAhByB;AAAA;;AAAA;AAc5BA,sBAAU,oBAAV;AAd4B;;AAAA;AAiB5BA,sBAAU,uBAAV;AAjB4B;;AAAA;AAoBhC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AApBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;;AAwBA;AACA2B,OAAOgI,GAAP,CAAW,oBAAX;AAAA,qLAAiC,kBAAO7H,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEvB,kEAAkBD,IAAIE,IAAtB,CAFuB;;AAAA;AAAA;AAAA,mBAGA,iEAAiB,EAAEsB,IAAIxB,IAAIE,IAAJ,CAASsB,EAAf,EAAjB,CAHA;;AAAA;AAGvBsG,0BAHuB;;;AAK7B7H,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,8BAFU;AAGnBkC,oBAAM0H;AAHa,aAArB;AAL6B;AAAA;;AAAA;AAAA;AAAA;AAWzB5J,mBAXyB,GAWf,EAXe;AAAA;AAAA,8CAatB,GAbsB,yBAgBtB,GAhBsB;AAAA;;AAAA;AAczBA,sBAAU,mBAAV;AAdyB;;AAAA;AAiBzBA,sBAAU,uBAAV;AAjByB;;AAAA;AAoB7B+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AApB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;;AAwBA2B,OAAOE,IAAP,CAAY,oBAAZ;AAAA,qLAAkC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEX,iEAAiBD,IAAIE,IAArB,CAFW;;AAAA;AAExByF,gBAFwB;;AAG9B1F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,+BAFU;AAGnBkC,oBAAMuF;AAHa,aAArB;AAH8B;AAAA;;AAAA;AAAA;AAAA;AAS1BzH,mBAT0B,GAShB,EATgB;AAAA;AAAA,8CAWvB,GAXuB,yBAcvB,GAduB;AAAA;;AAAA;AAY1BA,sBAAU,oBAAV;AAZ0B;;AAAA;AAe1BA,sBAAU,uBAAV;AAf0B;;AAAA;AAkB9B+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AAuBA2B,OAAOiB,GAAP,CAAW,uBAAX;AAAA,qLAAoC,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAET,sEAFS;;AAAA;AAE1B2F,oBAF0B;;AAGhC3F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,oCAFU;AAGnBkC,oBAAMwF;AAHa,aAArB;AAHgC;AAAA;;AAAA;AAAA;AAAA;AAS5B1H,mBAT4B,GASlB,EATkB;AAAA;AAAA,8CAYzB,GAZyB;AAAA;;AAAA;AAa5BA,sBAAU,uBAAV;AAb4B;;AAAA;;AAiBhC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAArB;;AAjBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;;AAqBA,yDAAe2B,MAAf,E;;;;;;;;;;;;;AC1HA;;AAEA;AACO,IAAMkI,cAAc,SAAdA,WAAc,OAAoC;AAAA,MAAlCJ,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BxE,YAA0B,QAA1BA,YAA0B;AAAA,MAAZnB,MAAY,QAAZA,MAAY;;AAC7D,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,4DAAN;;AAIA,QAAMC,SAAS,CAACgH,MAAD,EAASxE,YAAT,EAAuBnB,MAAvB,CAAf;;AAEAzE,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,IAAIG,OAAhB;AACA,eAAOuC,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GAfM,CAAP;AAgBD,CAjBM;;AAmBP;AACO,IAAM8F,cAAc,SAAdA,WAAc,QAAY;AAAA,MAATxG,EAAS,SAATA,EAAS;;AACrC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,mJAAN;;AASAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,CAACc,EAAD,EAAKA,EAAL,CAAtB,EAAgC,UAACzD,GAAD,EAAM6C,IAAN,EAAe;AAC7C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAtBM,CAAP;AAuBD,CAxBM;;AA0BP;AACO,IAAMqH,kBAAkB,SAAlBA,eAAkB,QAAY;AAAA,MAATzG,EAAS,SAATA,EAAS;;AACzC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,2DAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,CAACc,EAAD,EAAKA,EAAL,CAAtB,EAAgC,UAACzD,GAAD,EAAM6C,IAAN,EAAe;AAC7C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBP;AACO,IAAMsH,iBAAiB,SAAjBA,cAAiB,QAAY;AAAA,MAAT1G,EAAS,SAATA,EAAS;;AACxC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,sDAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAMkE,OAAN,EAAkB;AAC1C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBP;AACO,IAAM2H,eAAe,SAAfA,YAAe,QAEtB;AAAA,MADJC,WACI,SADJA,WACI;AAAA,MADST,MACT,SADSA,MACT;AAAA,MADiBxE,YACjB,SADiBA,YACjB;AAAA,MAD+BnB,MAC/B,SAD+BA,MAC/B;;AACJ,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,+DAAN;;AAIA,QAAMC,SAAS,CACbgH,MADa,EACLxE,YADK,EACSnB,MADT,CAAf;;AAIAzE,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GArBM,CAAP;AAsBD,CAzBM,C;;;;;;;;;;;;;;;;;;AC9FP;AACA;;AAEA,IAAMX,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOE,IAAP,CAAY,uBAAZ;AAAA,oLAAqC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACnCjC,oBAAQC,GAAR,CAAY+B,IAAIE,IAAhB;;AADmC,kBAGjCF,IAAIE,IAAJ,CAASmI,uBAAT,IACArI,IAAIE,IAAJ,CAASoI,qBADT,IAEAtI,IAAIE,IAAJ,CAASqI,kBAFT,IAGAvI,IAAIE,IAAJ,CAASsI,GANwB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAQd,oEAAoBxI,IAAIE,IAAxB,EAA6BF,IAAIjB,OAAJ,CAAYpB,IAAzC,CARc;;AAAA;AAQzB6D,cARyB;;AAS/BvB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS;AAFU,aAArB;AAT+B;AAAA;;AAAA;AAAA;AAAA;;AAc/B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAd+B;AAAA;AAAA;;AAAA;AAiBjC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAjBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAqBA;AACA2B,OAAOE,IAAP,CAAY,0BAAZ;AAAA,qLAAwC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAClCD,IAAIE,IAAJ,CAASuI,eADyB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAGP,qEAAqBzI,IAAIE,IAAzB,CAHO;;AAAA;AAG5B0H,wBAH4B;AAAA;AAAA,mBAI5B,wEAAwB5H,IAAIE,IAA5B,CAJ4B;;AAAA;;AAMlCD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,wCAFU;AAGnBkC,oBAAMwH;AAHa,aAArB;AANkC;AAAA;;AAAA;AAAA;AAAA;AAY9B1J,mBAZ8B,GAYpB,EAZoB;AAAA;AAAA,8CAc3B,GAd2B,yBAiB3B,GAjB2B;AAAA;;AAAA;AAe9BA,sBAAU,8BAAV;AAf8B;;AAAA;AAkB9BA,sBAAU,uBAAV;AAlB8B;;AAAA;AAqBlC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AArBkC;AAAA;AAAA;;AAAA;AAwBpC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAACwB,QAAQ,GAAT,EAAcjC,SAAS,aAAvB,EAArB;;AAxBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;;AAAA;AAAA;AAAA;AAAA;;AA4BA;AACA2B,OAAOgI,GAAP,CAAW,wBAAX;AAAA,qLAAqC,kBAAO7H,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE3B,qEAAqBD,IAAIE,IAAzB,CAF2B;;AAAA;AAAA;AAAA,mBAGJ,qEAAqB,EAAEsB,IAAIxB,IAAIE,IAAJ,CAASsB,EAAf,EAArB,CAHI;;AAAA;AAG3BsG,0BAH2B;;;AAKjC7H,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,uCAFU;AAGnBkC,oBAAM0H;AAHa,aAArB;AALiC;AAAA;;AAAA;AAAA;AAAA;AAW7B5J,mBAX6B,GAWnB,EAXmB;AAAA;AAAA,8CAa1B,GAb0B,yBAgB1B,GAhB0B;AAAA;;AAAA;AAc7BA,sBAAU,mBAAV;AAd6B;;AAAA;AAiB7BA,sBAAU,uBAAV;AAjB6B;;AAAA;AAoBjC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AApBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAwBA;AACA2B,OAAOiB,GAAP,CAAW,2BAAX;AAAA,qLAAwC,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEb,wEAFa;;AAAA;AAE9B2F,oBAF8B;;AAGpC3F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,wCAFU;AAGnBkC,oBAAMwF;AAHa,aAArB;AAHoC;AAAA;;AAAA;AAAA;AAAA;AAShC1H,mBATgC,GAStB,EATsB;AAAA;AAAA,8CAY7B,GAZ6B;AAAA;;AAAA;AAahCA,sBAAU,uBAAV;AAbgC;;AAAA;;AAiBpC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAArB;;AAjBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;;AAAA;AAAA;AAAA;AAAA;;AAqBA2B,OAAOE,IAAP,CAAY,wBAAZ;AAAA,qLAAsC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEf,qEAAqBD,IAAIjB,OAAJ,CAAYpB,IAAjC,CAFe;;AAAA;AAE5BgI,gBAF4B;;AAGlC1F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,mCAFU;AAGnBkC,oBAAMuF;AAHa,aAArB;AAHkC;AAAA;;AAAA;AAAA;AAAA;AAS9BzH,mBAT8B,GASpB,EAToB;AAAA;AAAA,8CAW3B,GAX2B,yBAc3B,GAd2B;AAAA;;AAAA;AAY9BA,sBAAU,wBAAV;AAZ8B;;AAAA;AAe9BA,sBAAU,uBAAV;AAf8B;;AAAA;AAkBlC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlBkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAsBA,yDAAe2B,MAAf,E;;;;;;;;;;;;;AC7HA;;AAEO,IAAM6I,iBAAiB,SAAjBA,cAAiB,OAM5B/J,IAN4B,EAOzB;AAAA,MANH0J,uBAMG,QANHA,uBAMG;AAAA,MALHC,qBAKG,QALHA,qBAKG;AAAA,MAJHC,kBAIG,QAJHA,kBAIG;AAAA,MAHHC,GAGG,QAHHA,GAGG;;AACH,SAAO,IAAIjI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMuB,SAAUrD,KAAKqD,MAArB;;AAEA,QAAMtB,6EAAN;;AAKA,QAAMC,SAAS,CACb0H,uBADa,EAEbC,qBAFa,EAGbC,kBAHa,EAIbC,GAJa,EAKbxG,MALa,CAAf;;AAQAzE,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,IAAIG,OAAhB;AACA,eAAOuC,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GAxBM,CAAP;AAyBD,CAjCM;;AAmCP;AACO,IAAMyG,qBAAqB,SAArBA,kBAAqB,QAAyB;AAAA,MAAtBF,eAAsB,SAAtBA,eAAsB;;AACzD,SAAO,IAAIlI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,+DAAN;;AAKAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB+H,eAAtB,EAAuC,UAAC1K,GAAD,EAAMkE,OAAN,EAAkB;AACvD,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAlBM,CAAP;AAmBD,CApBM;;AAsBP;AACO,IAAMoI,kBAAkB,SAAlBA,eAAkB,CAAEH,eAAF,EAAuB;AACpD,SAAO,IAAIlI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,QAAMC,2NAAN;;AAUAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBsB,MAAtB,EAA+B,UAACjE,GAAD,EAAM6C,IAAN,EAAe;AAC5C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAxBM,CAAP;AAyBD,CA1BM;;AA4BP;AACO,IAAMiI,oBAAoB,SAApBA,iBAAoB,GAAM;AACrC,SAAO,IAAItI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,iEAAN;;AAKAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAXD;AAYD,GAlBM,CAAP;AAmBD,CApBM;;AAsBA,IAAMkI,kBAAkB,SAAlBA,eAAkB,QAMzB;AAAA,MALJT,uBAKI,SALJA,uBAKI;AAAA,MAJJC,qBAII,SAJJA,qBAII;AAAA,MAHJC,kBAGI,SAHJA,kBAGI;AAAA,MAFJC,GAEI,SAFJA,GAEI;AAAA,MADJxG,MACI,SADJA,MACI;;AACJ,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,2EAAN;;AAKA,QAAMC,SAAS,CACb0H,uBADa,EAEbC,qBAFa,EAGbC,kBAHa,EAIbC,GAJa,EAKbxG,MALa,CAAf;;AAQAzE,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GA1BM,CAAP;AA2BD,CAlCM,C;;;;;;;;;;;;;;;;;;AChHP;AACA;;AAEA,IAAMX,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOE,IAAP,CAAY,2BAAZ;AAAA,oLAAyC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEV,6EAA6BD,IAAIE,IAAjC,CAFU;;AAAA;AAE/B6I,wBAF+B;;AAGrC9I,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,oCAFU;AAGnBkC,oBAAM2I;AAHa,aAArB;AAHqC;AAAA;;AAAA;AAAA;AAAA;AASjC7K,mBATiC,GASvB,EATuB;AAAA;AAAA,4CAW9B,GAX8B,wBAc9B,GAd8B;AAAA;;AAAA;AAYjCA,sBAAU,yBAAV;AAZiC;;AAAA;AAejCA,sBAAU,uBAAV;AAfiC;;AAAA;AAkBrC+B,gBAAIE,MAAJ,cAAmBxB,IAAnB,CAAwB,EAAEwB,mBAAF,EAAUjC,gBAAV,EAAxB;;AAlBqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzC;;AAAA;AAAA;AAAA;AAAA;;AAsBA;AACA2B,OAAOiB,GAAP,CAAW,wBAAX;AAAA,qLAAqC,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEN,qEAAqBD,IAAIE,IAAzB,CAFM;;AAAA;AAE3B6I,wBAF2B;;AAGjC9I,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,oCAFU;AAGnBkC,oBAAM2I;AAHa,aAArB;AAHiC;AAAA;;AAAA;AAAA;AAAA;AAS7B7K,mBAT6B,GASnB,EATmB;AAAA;AAAA,8CAW1B,GAX0B,yBAc1B,GAd0B;AAAA;;AAAA;AAY7BA,sBAAU,yBAAV;AAZ6B;;AAAA;AAe7BA,sBAAU,uBAAV;AAf6B;;AAAA;AAkBjC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAuBA;AACA2B,OAAOiB,GAAP,CAAW,2BAAX;AAAA,qLAAwC,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAET,wEAAwBD,IAAIE,IAA5B,CAFS;;AAAA;AAE9B6I,wBAF8B;;AAGpC9I,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,wCAFU;AAGnBkC,oBAAM2I;AAHa,aAArB;AAHoC;AAAA;;AAAA;AAAA;AAAA;AAShC7K,mBATgC,GAStB,EATsB;AAAA;AAAA,8CAW7B,GAX6B,yBAc7B,GAd6B;AAAA;;AAAA;AAYhCA,sBAAU,yBAAV;AAZgC;;AAAA;AAehCA,sBAAU,uBAAV;AAfgC;;AAAA;AAkBpC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;;AAAA;AAAA;AAAA;AAAA;;AAsBA;AACA2B,OAAOE,IAAP,CAAY,uBAAZ;AAAA,qLAAqC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEjCD,IAAIE,IAF6B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAKd,qEAAqBF,IAAIE,IAAzB,CALc;;AAAA;AAKzBsB,cALyB;;AAMhC;;AAECvB,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS;AACT;AAHmB,aAArB;AAR+B;AAAA;;AAAA;AAAA;AAAA;;AAc/B+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAd+B;AAAA;AAAA;;AAAA;AAiBjC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAjBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAuBA;AACA2B,OAAOE,IAAP,CAAY,0BAAZ;AAAA,qLAAwC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAET,qEAAqBD,IAAIE,IAAzB,CAFS;;AAAA;AAE9B6I,wBAF8B;AAAA;AAAA,mBAG9B,wEAAwB/I,IAAIE,IAA5B,CAH8B;;AAAA;;AAKpCD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,oCAFU;AAGnBkC,oBAAM2I;AAHa,aAArB;AALoC;AAAA;;AAAA;AAAA;AAAA;AAWhC7K,mBAXgC,GAWtB,EAXsB;AAAA;AAAA,8CAa7B,GAb6B,yBAgB7B,GAhB6B;AAAA;;AAAA;AAchCA,sBAAU,yBAAV;AAdgC;;AAAA;AAiBhCA,sBAAU,uBAAV;AAjBgC;;AAAA;AAoBpC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AApBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;;AAAA;AAAA;AAAA;AAAA;;AAwBA;AACA2B,OAAOE,IAAP,CAAY,wBAAZ;AAAA,qLAAsC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE5B,sEAAsBD,IAAIE,IAA1B,CAF4B;;AAAA;AAGlC;AACA;AACA;;AAEAD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS;AACT;AAHmB,aAArB;AAPkC;AAAA;;AAAA;AAAA;AAAA;AAa9BA,mBAb8B,GAapB,EAboB;AAAA;AAAA,8CAe3B,GAf2B,yBAkB3B,GAlB2B;AAAA;;AAAA;AAgB9BA,sBAAU,yBAAV;AAhB8B;;AAAA;AAmB9BA,sBAAU,uBAAV;AAnB8B;;AAAA;AAsBlC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAtBkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AA0BA,yDAAe2B,MAAf,E;;;;;;;;;;;;;;ACvJA;;AAEA;AACS,IAAMmJ,kBAAkB,SAAlBA,eAAkB,OAAc;AAAA,MAAZhH,MAAY,QAAZA,MAAY;;AAC3ChE,UAAQC,GAAR,CAAY,EAAC+D,cAAD,EAAZ;AACA,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,mHAAN;AAIA,QAAMC,SAAS,CAACqB,MAAD,CAAf;;AAEAzE,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAqBC,MAArB,EAA6B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC7C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,IAAIG,OAAhB;AACA,eAAOuC,OAAO,GAAP,CAAP;AACD;AACD,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAND;AAOD,GAdM,CAAP;AAeD,CAjBM;;AAmBT;AACS,IAAM+G,qBAAqB,SAArBA,kBAAqB,GAAM;AACtC,SAAO,IAAI1I,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,4DAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAqBT;AACO,IAAMsI,kBAAkB,SAAlBA,eAAkB,QAAY;AAAA,MAAT1H,EAAS,SAATA,EAAS;;AACzC,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,0JAAN;;AASAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAM6C,IAAN,EAAe;AACvC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAtBM,CAAP;AAuBD,CAxBM;;AA0BP;AACO,IAAMuI,0BAA0B,SAA1BA,uBAA0B,QAAY;AAAA,MAAT3H,EAAS,SAATA,EAAS;;AACjD,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,0EAAN;;AAIAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAM6C,IAAN,EAAe;AACvC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAjBM,CAAP;AAkBD,CAnBM;;AAsBP;AACO,IAAMwI,qBAAqB,SAArBA,kBAAqB,QAAY;AAAA,MAAT5H,EAAS,SAATA,EAAS;;AAC5C,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,iEAAN;;AAKAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBc,EAAtB,EAA0B,UAACzD,GAAD,EAAMkE,OAAN,EAAkB;AAC1C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAlBM,CAAP;AAmBD,CApBM;;AAsBP;AACO,IAAM6I,mBAAmB,SAAnBA,gBAAmB,QAU1B;AAAA,MATJrH,MASI,SATJA,MASI;AAAA,MARL0C,IAQK,SARLA,IAQK;AAAA,MAPL4E,WAOK,SAPLA,WAOK;AAAA,MANLC,kBAMK,SANLA,kBAMK;AAAA,MALLC,MAKK,SALLA,MAKK;AAAA,MAJLC,WAIK,SAJLA,WAIK;AAAA,MAHL3F,UAGK,SAHLA,UAGK;AAAA,MAFLC,QAEK,SAFLA,QAEK;;AACJ,SAAO,IAAIxD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,wFAAN;;AAKA,QAAMC,SAAS,CACbqB,MADa,EAEb0C,IAFa,EAGb4E,WAHa,EAIbC,kBAJa,EAKbC,MALa,EAMbC,WANa,EAOb3F,UAPa,EAQbC,QARa,CAAf;;AAWAxG,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GA7BM,CAAP;AA8BD,CAzCM,C;;;;;;;;;;;;;;;;;;ACtHP;AACA;;AAEA,IAAMX,SAAS,uDAAAC,EAAf;;AAEAD,OAAOE,IAAP,CAAY,0BAAZ;AAAA,oLAAwC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEpCD,IAAIE,IAAJ,CAASwJ,WAAT,IACA1J,IAAIE,IAAJ,CAASyJ,cADT,IAEA3J,IAAIE,IAAJ,CAAS8B,MAJ2B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAOjB,wEAAwBhC,IAAIE,IAA5B,CAPiB;;AAAA;AAO5BsB,cAP4B;AAAA;AAAA,mBAQb,wEAAwB,EAAEoI,qBAAqBpI,EAAvB,EAAxB,CARa;;AAAA;AAQ5BkE,kBAR4B;;;AAUlCzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,uCAFU;AAGnBkC,oBAAMsF;AAHa,aAArB;AAVkC;AAAA;;AAAA;AAAA;AAAA;;AAgBlCzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAhBkC;AAAA;AAAA;;AAAA;AAmBpC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAnBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;;AAAA;AAAA;AAAA;AAAA;;AAwBA2B,OAAOE,IAAP,CAAY,6BAAZ;AAAA,qLAA2C,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEvCD,IAAIE,IAAJ,CAAS0J,mBAF8B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAKlB,wEAAwB5J,IAAIE,IAA5B,CALkB;;AAAA;AAK/ByF,gBAL+B;AAAA;AAAA,mBAM/B,2EAA2B3F,IAAIE,IAA/B,CAN+B;;AAAA;;AAQrCD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,uCAFU;AAGnBkC,oBAAMuF;AAHa,aAArB;AARqC;AAAA;;AAAA;AAAA;AAAA;;AAcrC1F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAdqC;AAAA;AAAA;;AAAA;AAiBvC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AAjBuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3C;;AAAA;AAAA;AAAA;AAAA;;AAuBA2B,OAAOE,IAAP,CAAY,2BAAZ;AAAA,qLAAyC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAErCD,IAAIE,IAAJ,CAAS0J,mBAAT,IACA5J,IAAIE,IAAJ,CAASwJ,WADT,IAEA1J,IAAIE,IAAJ,CAASyJ,cAFT,IAGA3J,IAAIE,IAAJ,CAAS8B,MAL4B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAQ7B,yEAAyBhC,IAAIE,IAA7B,CAR6B;;AAAA;AAAA;AAAA,mBASd,wEAAwB;AAC3C0J,mCAAqB5J,IAAIE,IAAJ,CAAS0J;AADa,aAAxB,CATc;;AAAA;AAS7BlE,kBAT6B;;AAYnCzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,sCAFU;AAGnBkC,oBAAMsF;AAHa,aAArB;AAZmC;AAAA;;AAAA;AAAA;AAAA;;AAkBnCzF,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,uBAAxB,EAArB;;AAlBmC;AAAA;AAAA;;AAAA;AAqBrC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,QAAQ,GAAV,EAAejC,SAAS,aAAxB,EAArB;;AArBqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzC;;AAAA;AAAA;AAAA;AAAA;;AAyBA2B,OAAOE,IAAP,CAAY,2BAAZ;AAAA,qLAAyC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAElB,wEAAwBD,IAAIE,IAA5B,CAFkB;;AAAA;AAE/ByF,gBAF+B;;AAGrC1F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,uCAFU;AAGnBkC,oBAAMuF;AAHa,aAArB;AAHqC;AAAA;;AAAA;AAAA;AAAA;AASjCzH,mBATiC,GASvB,EATuB;AAAA;AAAA,8CAW9B,GAX8B,yBAc9B,GAd8B;AAAA;;AAAA;AAYjCA,sBAAU,4BAAV;AAZiC;;AAAA;AAejCA,sBAAU,uBAAV;AAfiC;;AAAA;AAkBrC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlBqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzC;;AAAA;AAAA;AAAA;AAAA;;AAsBA2B,OAAOiB,GAAP,CAAW,8BAAX;AAAA,qLAA2C,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEhB,4EAFgB;;AAAA;AAEjC2F,oBAFiC;;AAGvC3F,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,2CAFU;AAGnBkC,oBAAMwF;AAHa,aAArB;AAHuC;AAAA;;AAAA;AAAA;AAAA;AASnC1H,mBATmC,GASzB,EATyB;AAAA;AAAA,8CAYhC,GAZgC;AAAA;;AAAA;AAanCA,sBAAU,uBAAV;AAbmC;;AAAA;AAgBvC+B,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAArB;;AAhBuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3C;;AAAA;AAAA;AAAA;AAAA;;AAoBA,yDAAe2B,MAAf,E;;;;;;;;;;;;;ACvHA;;AAEO,IAAMgK,qBAAqB,SAArBA,kBAAqB,OAI5B;AAAA,MAHJH,WAGI,QAHJA,WAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJ3H,MACI,QADJA,MACI;;AACJ,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,4EAAN;;AAKA,QAAMC,SAAS,CACb+I,WADa,EAEbC,cAFa,EAGb3H,MAHa,CAAf;;AAMAzE,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkE,OAAN,EAAkB;AAC9C,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQyB,QAAQC,QAAhB,CAAP;AACD,KAPD;AAQD,GApBM,CAAP;AAqBD,CA1BM;;AA6BA,IAAM4H,wBAAwB,SAAxBA,qBAAwB,QAA6B;AAAA,MAA1BF,mBAA0B,SAA1BA,mBAA0B;;AAChE,SAAO,IAAIrJ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,2EAAN;;AAKAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBkJ,mBAAtB,EAA2C,UAAC7L,GAAD,EAAMkE,OAAN,EAAkB;AAC3D,UAAIlE,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACwB,QAAQG,YAAb,EAA2B;AACzB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAlBM,CAAP;AAmBD,CApBM;;AAuBA,IAAMuJ,sBAAsB,SAAtBA,mBAAsB,QAK7B;AAAA,MAJJH,mBAII,SAJJA,mBAII;AAAA,MAHJF,WAGI,SAHJA,WAGI;AAAA,MAFJC,cAEI,SAFJA,cAEI;AAAA,MADJ3H,MACI,SADJA,MACI;;AACJ,SAAO,IAAIzB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,mFAAN;;AAKA,QAAMC,SAAS,CACb+I,WADa,EAEbC,cAFa,EAGb3H,MAHa,EAIb4H,mBAJa,CAAf;;AAOArM,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GAzBM,CAAP;AA0BD,CAhCM;;AAkCA,IAAMwJ,qBAAqB,SAArBA,kBAAqB,QAA6B;AAAA,MAA1BJ,mBAA0B,SAA1BA,mBAA0B;;AAC7D,SAAO,IAAIrJ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,wFAAN;;AAKAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBkJ,mBAAtB,EAA2C,UAAC7L,GAAD,EAAM6C,IAAN,EAAe;AACxD,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAlBM,CAAP;AAmBD,CApBM;;AAsBA,IAAMqJ,wBAAwB,SAAxBA,qBAAwB,GAAM;AACzC,SAAO,IAAI1J,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,uEAAN;;AAKAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsB,UAAC3C,GAAD,EAAM6C,IAAN,EAAe;AACnC,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,IAAR,CAAP;AACD,KAPD;AAQD,GAdM,CAAP;AAeD,CAhBM,C;;;;;;;;;;;;;;;;;;AC9GP;AACA;;AAEA,IAAMf,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOE,IAAP,CAAY,mBAAZ;AAAA,oLAAiC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEvB,iEAAiBD,IAAIE,IAArB,CAFuB;;AAAA;;AAI7BD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS;AAFU,aAArB;AAJ6B;AAAA;;AAAA;AAAA;AAAA;AASzBA,mBATyB,GASf,EATe;AAAA;AAAA,4CAWtB,GAXsB,wBActB,GAdsB;AAAA;;AAAA;AAYzBA,sBAAU,mBAAV;AAZyB;;AAAA;AAezBA,sBAAU,uBAAV;AAfyB;;AAAA;AAkB7B+B,gBAAIE,MAAJ,cAAmBxB,IAAnB,CAAwB,EAAEwB,mBAAF,EAAUjC,gBAAV,EAAxB;;AAlB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;;AAsBA;AACA2B,OAAOE,IAAP,CAAY,uBAAZ;AAAA,qLAAqC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE3B,8DAAcD,IAAIE,IAAlB,CAF2B;;AAAA;;AAIjCD,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS;AAFU,aAArB;AAJiC;AAAA;;AAAA;AAAA;AAAA;AAS7BA,mBAT6B,GASnB,EATmB;AAAA;AAAA,8CAW1B,GAX0B,yBAc1B,GAd0B;AAAA;;AAAA;AAY7BA,sBAAU,mBAAV;AAZ6B;;AAAA;AAe7BA,sBAAU,uBAAV;AAf6B;;AAAA;AAkBjC+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAsBA;AACA2B,OAAOE,IAAP,CAAY,mBAAZ;AAAA,qLAAiC,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEV,6DAAaD,IAAIE,IAAjB,CAFU;;AAAA;AAEvBE,gBAFuB;;AAG7BH,gBAAIE,MAAJ,CAAW,GAAX,EAAgBxB,IAAhB,CAAqB;AACnBwB,sBAAQ,GADW;AAEnBjC,uBAAS,mCAFU;AAGnBkC,oBAAMA;AAHa,aAArB;AAH6B;AAAA;;AAAA;AAAA;AAAA;AASzBlC,mBATyB,GASf,EATe;AAAA;AAAA,8CAWtB,GAXsB,yBActB,GAdsB;AAAA;;AAAA;AAYzBA,sBAAU,mBAAV;AAZyB;;AAAA;AAezBA,sBAAU,uBAAV;AAfyB;;AAAA;AAkB7B+B,gBAAIE,MAAJ,eAAmBxB,IAAnB,CAAwB,EAAEwB,oBAAF,EAAUjC,gBAAV,EAAxB;;AAlB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;;AAsBA,yDAAe2B,MAAf,E;;;;;;;;;;;AC1EA;;AAEA;AACO,IAAMqK,cAAc,SAAdA,WAAc,OAYrB;AAAA,MAXJxG,KAWI,QAXJA,KAWI;AAAA,MAVJpD,QAUI,QAVJA,QAUI;AAAA,MATJ1C,QASI,QATJA,QASI;AAAA,MARJuM,KAQI,QARJA,KAQI;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJvF,OAII,QAJJA,OAII;AAAA,MAHJwF,OAGI,QAHJA,OAGI;AAAA,MAFJrF,KAEI,QAFJA,KAEI;AAAA,MADJD,YACI,QADJA,YACI;;AACJ,SAAO,IAAI1E,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,0FAAN;;AAIA,QAAMC,SAAS,CACb+C,KADa,EAEbpD,QAFa,EAGb1C,QAHa,EAIbuM,KAJa,EAKbC,KALa,EAMbC,KANa,EAObC,IAPa,EAQbvF,OARa,EASbwF,OATa,EAUbrF,KAVa,EAWbD,YAXa,CAAf;;AAcA1H,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GA/BM,CAAP;AAgCD,CA7CM;;AA+CP;AACO,IAAMgK,WAAW,SAAXA,QAAW,QAAkC;AAAA,MAA/B9G,KAA+B,SAA/BA,KAA+B;AAAA,MAAxB+G,IAAwB,SAAxBA,IAAwB;AAAA,MAAlBC,IAAkB,SAAlBA,IAAkB;AAAA,MAAZC,KAAY,SAAZA,KAAY;;AACxD,SAAO,IAAIpK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,oJAAN;;AAWA,QAAMC,SAAS,CAAC8J,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBjH,KAApB,CAAf;;AAEAnG,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBC,MAAtB,EAA8B,UAAC5C,GAAD,EAAMkC,GAAN,EAAc;AAC1C,UAAIlC,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACR,IAAImC,YAAT,EAAuB;AACrB,eAAO3B,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,SAAP;AACD,KAXD;AAYD,GA1BM,CAAP;AA2BD,CA5BM;;AA8BP;AACO,IAAMoK,UAAU,SAAVA,OAAU,QAAe;AAAA,MAAZlH,KAAY,SAAZA,KAAY;;AACpC,SAAO,IAAInD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,4IAAN;;AASAnD,IAAA,0DAAAA,CAAGY,KAAH,CAASuC,WAAT,EAAsBgD,KAAtB,EAA6B,UAAC3F,GAAD,EAAM6C,IAAN,EAAe;AAC1C,UAAI7C,GAAJ,EAAS;AACPC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,eAAO0C,OAAO,GAAP,CAAP;AACD;;AAED,UAAI,CAACG,KAAKC,MAAV,EAAkB;AAChB,eAAOJ,OAAO,GAAP,CAAP;AACD;;AAED,aAAOD,QAAQI,KAAK,CAAL,CAAR,CAAP;AACD,KAXD;AAYD,GAtBM,CAAP;AAuBD,CAxBM,C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a1793f93fe25393a4753","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","import mysql from 'mysql';\n\nconst db = mysql.createConnection({\n  host: 'localhost',\n  user: 'skydev',\n  password: 'skydev',\n  db: 'skydev',\n  dateStrings: true\n});\n\ndb.connect(err => {\n  if (err) {\n    console.log('Error in connecting to database');\n    console.log(err.message);\n  } else {\n    console.log('Success in connecting to database');\n  }\n});\n\ndb.query('USE skydev');\n\nexport default db;\n\n\n\n// WEBPACK FOOTER //\n// ./src/database/index.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 2\n// module chunks = 0","import express from 'express';\nimport bodyParser from 'body-parser';\nimport logger from 'morgan';\nimport session from 'express-session';\nimport store from 'express-mysql-session';\nimport db from './database';\nimport router from './router';\n\nconst app = express();\nconst MySQLStore = store(session);\nconst sessionStore = new MySQLStore({}, db);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ encoded: true }));\napp.use(logger('dev'));\n\napp.use(\n  session({\n    key: 'skydev',\n    secret: 'skydev',\n    resave: true,\n    saveUninitialized: true,\n    store: sessionStore,\n    createDatabaseTable: true,\n    checkExpirationInterval: 900000,\n    expiration: 86400000\n  })\n);\n\napp.use(router);\n\nconst port = process.env.PORT || 3001;\n\nconst server = app.listen(port, () => {\n  console.log(`Server is running at port: ${port}`);\n});\n\nexport default server;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"express-mysql-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-mysql-session\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"mysql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mysql\"\n// module id = 9\n// module chunks = 0","import { Router } from 'express';\n\n// put import routers here\nimport authRouter from './entities/auth/router';\nimport extensionRouter from './entities/extension/router';\nimport publicationsRouter from './entities/publications/router';\nimport signupRouter from './entities/signup/router';\nimport studyRouter from './entities/studyload/router';\nimport teachRouter from './entities/teachload/router';\nimport facultyRouter from './entities/facultylist/router';\n// import fsrRouter from './entities/fsrlist/router';\nimport adminWorkRouter from './entities/adminWork/router';\nimport consulHourRouter from './entities/consulHours/router';\nimport facultygrantRouter from './entities/facultygrant/router';\nimport limitedpracticeRouter from './entities/limitedpractice/router';\nimport profileRouter from './entities/profile/router';\n\nconst router = Router();\n\n// put use statements here\nrouter.use('/', authRouter);\nrouter.use(extensionRouter);\nrouter.use(publicationsRouter);\nrouter.use(signupRouter);\nrouter.use(studyRouter);\nrouter.use(teachRouter);\nrouter.use(facultyRouter);\n// router.use(fsrRouter);\nrouter.use(adminWorkRouter);\nrouter.use(consulHourRouter);\nrouter.use(facultygrantRouter);\nrouter.use(limitedpracticeRouter);\nrouter.use(profileRouter);\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/login', async (req, res) => {\n  try {\n    const user = await Ctrl.login(req.body);\n    req.session.user = user;\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully logged in',\n      data: user\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 500:\n        message = 'Internal server error while logging in';\n        break;\n      case 404:\n        message = 'Wrong credentials';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/logout', (req, res) => {\n  req.session.user = null;\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully logged out'\n  });\n});\n\nrouter.post('/api/session', (req, res) => {\n  res.status(200).json({\n    status: 200,\n    message: 'Successfully fetched current session',\n    data: req.session.user ? req.session.user : null\n  });\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/router.js","module.exports = require(\"regenerator-runtime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"regenerator-runtime\"\n// module id = 12\n// module chunks = 0","import db from '../../database';\n\nexport const login = ({ username, password }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT \n        *\n      FROM\n        EMPLOYEE\n      WHERE\n        username = BINARY ? and\n        password = BINARY sha2(?,256)\n    `;\n\n    const values = [username, password];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/auth/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets extension\nrouter.get('/api/extension/viewAll', async (req, res) => {\n  try {\n    const extensions = await Ctrl.getExtensions();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all Extensions',\n      data: extensions\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// get a extensions\nrouter.post('/api/extension/view', async (req, res) => {\n  try {\n    const extension = await Ctrl.getExtension(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched Extension',\n      data: extension\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a extension\nrouter.post('/api/extension/add', async (req, res) => {\n  if (\n    req.body.extension_type &&\n    req.body.extension_name &&\n    req.body.no_of_hours >= 0 &&\n    req.body.no_of_participants >= 0 &&\n    req.body.extension_role &&\n    req.body.credit_unit >= 0 &&\n    req.body.funding_agency\n  ) {\n    try {\n      const id = await Ctrl.addExtension(req.body);\n      // const extensionAdded = await Ctrl.getExtension({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added Extension',\n        // data: extensionAdded\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes an extension\nrouter.post('/api/extension/delete', async (req, res) => {\n  try {\n    const extension = await Ctrl.getExtension(req.body);\n    await Ctrl.removeExtension(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed sample',\n      data: extension\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Cannot Delete: Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a extension\nrouter.post('/api/extension/edit', async (req, res) => {\n  try {\n    await Ctrl.editExtension(req.body);\n    const extensionEdited = await Ctrl.getExtension({ id: req.body.extension_id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited extension',\n      data: extensionEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Extension not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extension/router.js","import db from '../../database';\n\n// gets a extension\nexport const getExtension = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT * from EXTENSION where extension_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all extensions\nexport const getExtensions = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      view_extension();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// adds a extension\nexport const addExtension = ({\n  credit_unit,\n  extension_name,\n  extension_type,\n  no_of_hours,\n  no_of_participants,\n  extension_role,\n  start_time,\n  end_time,\n  funding_agency,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_extension(?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\n        `;\n\n    const values = [\n      credit_unit,\n      extension_name,\n      extension_type,\n      no_of_hours,\n      no_of_participants,\n      extension_role,\n      start_time,\n      end_time,\n      funding_agency,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes a extension\nexport const removeExtension = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_extension(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a sample\nexport const editExtension = ({\n  extension_id_update,\n  credit_unit_update,\n  extension_name_update,\n  extension_type_update,\n  no_of_hours_update,\n  no_of_participants_update,\n  extension_role_update,\n  start_time_update,\n  end_time_update,\n  funding_agency_update,\n  emp_id_update\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_extension(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      extension_id_update,\n      credit_unit_update,\n      extension_name_update,\n      extension_type_update,\n      no_of_hours_update,\n      no_of_participants_update,\n      extension_role_update,\n      start_time_update,\n      end_time_update,\n      funding_agency_update,\n      emp_id_update\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/extension/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets a publication by id\nrouter.post('/api/publication/view', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.post('/api/publication/viewAll', async (req, res) => {\n  try {\n    const publications = await Ctrl.getPublications(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all publications',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// add a publication\nrouter.post('/api/publication/add', async (req, res) => {\n  if (\n    req.body.credit_units >= 0 &&\n    req.body.category &&\n    // req.body.funding &&\n    req.body.title\n    // req.body.role &&\n    // req.body.start_date &&\n    // req.body.end_date\n  ) {\n    try {\n      const id = await Ctrl.addPublication(req.body);\n      console.log('title');\n      console.log(req.body.title);\n      // const log = await Ctrl.addPublicationLog(req.body.title);\n      // const publication = await Ctrl.getPublication({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created publication',\n        data: id\n        // data: log\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// add a coworker\nrouter.post('/api/coworker/add', async (req, res) => {\n  if (req.body.publication_id) {\n    try {\n      await Ctrl.addCoworker(req.body);\n      const row = Ctrl.checkIfExisting(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added coworker',\n        data: row\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/delete', async (req, res) => {\n  try {\n    const publication = await Ctrl.getPublication(req.body);\n    await Ctrl.removePublication(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a publication\nrouter.post('/api/publication/edit', async (req, res) => {\n  try {\n    await Ctrl.editPublication(req.body);\n    const publication = await Ctrl.getPublication({\n      id: req.body.publication_id\n    });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited publication',\n      data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewEmployees', async (req, res) => {\n  try {\n    const publications = await Ctrl.getEmployees();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all emps',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.post('/api/publication/viewEmployeeCoworkers', async (req, res) => {\n  try {\n    const publications = await Ctrl.getEmployeeCoworkers(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all possible coworkers',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// gets publications\nrouter.get('/api/publication/viewCoworkers', async (req, res) => {\n  try {\n    const publications = await Ctrl.getCoworkers(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all coworkers',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\n// removes a publication\nrouter.post('/api/publication/deleteCoworkers', async (req, res) => {\n  try {\n    // const publication = await Ctrl.getPublication(req.body);\n    await Ctrl.removeCoworkers(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed coworkers'\n      // data: publication\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets coworkers of a publication\nrouter.post('/api/publication/getCoworkers', async (req, res) => {\n  try {\n    const publications = await Ctrl.getCoworkers(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all emps',\n      data: publications\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Publication not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/router.js","import db from '../../database';\n\n// gets a publication by id\nexport const getPublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_publication_by_ID(?);\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all publications\nexport const getPublications = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL view_employee_publication(?);\n    `;\n\n    db.query(queryString, empid, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// export const getCoworkers = ({ id }) => {\n//   return new Promise((resolve, reject) => {\n//     const queryString = `\n//     SELECT * FROM COWORKER;`;\n\n//     db.query(queryString, (err, rows) => {\n//       if (err) {\n//         console.log(err);\n//         return reject(500);\n//       }\n\n//       return resolve(rows);\n//     });\n//   });\n// };\n\n// adds a publication\nexport const addPublication = ({\n  credit_units,\n  category,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    if (start_date === '' || end_date === '') {\n      const queryString = `\n          INSERT INTO PUBLICATION values(NULL, ?, ?, ?, ?, ?, null, null, ?);\n        `;\n\n      const values = [credit_units, category, funding, title, role, emp_id];\n    } else {\n      const queryString = `\n          INSERT INTO PUBLICATION values(NULL, ?, ?, ?, ?, ?, ?, ?, ?);\n        `;\n\n      const values = [\n        credit_units,\n        category,\n        funding,\n        title,\n        role,\n        start_date,\n        end_date,\n        emp_id\n      ];\n    }\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        console.log('ERROR!!');\n        return reject(500);\n      }\n\n      // console.log(results.insertId);\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const addPublicationLog = ({ title }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        call insert_log(concat(\"Publication with title\", ?, \" has been added to the table PUBLICATION\"));\n        `;\n\n    const values = [title];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        console.log('ERROR!!');\n        return reject(500);\n      }\n\n      // console.log(results.insertId);\n      return resolve(results);\n    });\n  });\n};\n\n// adds a coworker\nexport const addCoworker = ({ coworker_id, publication_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL insert_coworker(?, ?);\n        `;\n\n    const values = [coworker_id, publication_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      // console.log(inserted:\"+results.insertId);\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// checks if publication_id and coworker_id exists\nexport const checkIfExisting = ({ coworker_id, publication_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n            CALL view_publication_coworkers(?, ?);\n        `;\n\n    const values = [coworker_id, publication_id];\n\n    db.query(queryString, values, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes a publication\nexport const removePublication = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_publication(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a publication\nexport const editPublication = ({\n  credit_units,\n  category,\n  funding,\n  title,\n  role,\n  start_date,\n  end_date,\n  publication_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_publication(?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      credit_units,\n      category,\n      funding,\n      title,\n      role,\n      start_date,\n      end_date,\n      publication_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// gets all publications\nexport const getEmployees = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT * from EMPLOYEE;\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// gets all employee except self\nexport const getEmployeeCoworkers = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT * from EMPLOYEE WHERE emp_id != ?;\n    `;\n\n    db.query(queryString, empid, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n// removes a publication\nexport const removeCoworkers = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_coworker(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// gets all publications\nexport const getCoworkers = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      SELECT c.emp_id, e.f_name, e.l_name FROM COWORKER c, EMPLOYEE e WHERE c.emp_id = e.emp_id and publication_id = ?;\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/publications/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/signup', async (req, res) => {\n  if (\n    req.body.emp_id &&\n    req.body.username &&\n    req.body.password &&\n    req.body.type &&\n    req.body.f_name &&\n    req.body.m_name &&\n    req.body.l_name &&\n    req.body.department &&\n    req.body.college &&\n    req.body.emp_type &&\n    req.body.is_full_time &&\n    req.body.email\n  ) {\n    try {\n      const id = await Ctrl.addEmployee(req.body);\n      // const employee = await Ctrl.getEmployee({ id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created employee'\n        // data: employee\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/router.js","import db from '../../database';\n\n//adds an employee\nexport const addEmployee = ({\n  emp_id,\n  username,\n  password,\n  type,\n  f_name,\n  m_name,\n  l_name,\n  department,\n  college,\n  emp_type,\n  is_full_time,\n  email\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL insert_employee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, '2nd', '2017-2018', ?, ?, 1, 0);\n    `;\n\n    const values = [\n      emp_id,\n      username,\n      password,\n      type,\n      f_name,\n      m_name,\n      l_name,\n      department,\n      college,\n      emp_type,\n      is_full_time,\n      email\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      // console.log(results);\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// gets an employee\nexport const getEmployee = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id_increment = ?;\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/signup/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/studyload/add', async (req, res) => {\n  console.log(req.body);\n  if (req.body.credits &&\n      req.body.courseno &&\n      req.session.user.emp_id &&\n      req.body.start_time &&\n      req.body.school &&\n      req.body.no_of_days){\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addStudyLoad(req.body,req.session.user);\n      const sample = await Ctrl.getStudyLoad({ studyload_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created study load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/delete', async (req, res) => {\n  if (req.body.studyload_id) {\n    try {\n      const book = await Ctrl.getStudyLoad(req.body);\n      await Ctrl.removeStudyLoad(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed study load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/edit', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.studyload_id &&\n    req.body.credits &&\n    req.body.courseno &&\n    req.body.start_time &&\n    req.body.school &&\n    req.body.no_of_days &&\n    req.session.user\n  ) {\n    try {\n      await Ctrl.editStudyLoad(req.body,req.session.user.emp_id);\n      const sample = await Ctrl.getStudyLoad({\n        studyload_id: req.body.studyload_id\n      });\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/studyload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyEmp(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Study load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\nrouter.post('/api/studyload/viewByStudyloadId', async (req, res) => {\n  if(\n    req.session.user &&\n    req.body.studyload_id\n  ){\n    try {\n      const book = await Ctrl.getStudyLoad(req.body.studyload_id);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched study load',\n        data: book\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Study load not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  }else{\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n  });\n\nrouter.get('/api/studyload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllStudyLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all studyload',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\nrouter.get('/api/studyload/viewStudyCredentials', async (req, res) => {\n  try {\n    const book = await Ctrl.getStudyCredentials(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched study credentials',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Credentials not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/studyload/editStudyCredentials', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.degree &&\n    req.body.uni &&\n    req.body.studyleave &&\n    req.body.fellowship &&\n    req.session.user\n  ) {\n    try {\n      await Ctrl.editStudyCredentials(req.body,req.session.user.emp_id);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited study credentials',\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/router.js","import db from '../../database';\n\nexport const addStudyLoad = ({\n  credits,\n  courseno,\n  start_time,\n  school,\n  no_of_days\n},\n  json\n) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      call insert_studyload(?, ?, ?,?,?,?)\n    `;\n\n    const values = [credits, courseno, emp_id, start_time, school, no_of_days];\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call delete_studyload(?)\n    `;\n\n    db.query(queryString, studyload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editStudyLoad = (json,emp_id) => {\n    const studyload_id = json.studyload_id;\n    const credits = json.credits;\n    const courseno = json.courseno;\n    const start_time = json.start_time;\n    const school = json.school;\n    const no_of_days = json.no_of_days\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call update_studyload(?,?,?,?,?,?,?)\n    `;\n\n    const values = [\n      studyload_id,\n      credits,\n      courseno,\n      start_time,\n      school,\n      no_of_days,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getStudyLoad = ({ studyload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call view_studyload_id_studyload(?)\n        `;\n\n    db.query(queryString, studyload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\nexport const getStudyEmp = ( json ) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n        call view_employee_studyload(?)\n        `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\nexport const getAllStudyLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    call view_studyload()\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\nexport const getStudyCredentials = ( json ) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      SELECT * FROM STUDY_CREDENTIALS WHERE emp_id = ?\n    `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const editStudyCredentials = (json,emp_id) => {\n  const university = json.uni;\n  const degree = json.degree;\n  var fellowship = false;\n  var studyleave = false;\n  if(json.fellowship === \"Yes\"){\n    fellowship = true;\n  }\n  if(json.studyleave === \"Yes\"){\n    studyleave = true;\n  }\n\nreturn new Promise((resolve, reject) => {\n  const queryString = `\n  call update_study_credentials(?,?,?,?,?)\n  `;\n\n  const values = [\n    emp_id,\n    degree,\n    university,\n    studyleave,\n    fellowship\n  ];\n\n  db.query(queryString, values, (err, res) => {\n    if (err) {\n      console.log(err);\n      return reject(500);\n    }\n\n    if (!res.affectedRows) {\n      return reject(403);\n    }\n\n    return resolve();\n  });\n});\n};\n\n\n// WEBPACK FOOTER //\n// ./src/entities/studyload/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\nimport { isNull } from 'util';\n\nconst router = Router();\n\nrouter.post('/api/teachload/add', async (req, res) => {\n  console.log(req)\n  if (\n    req.body.no_of_students &&\n    req.body.subject_code &&\n    req.body.section_code &&\n    req.body.room &&\n    req.body.days &&\n    req.body.start_time &&\n    req.body.end_time &&\n    req.body.hours &&\n    req.body.creditw\n  ) {\n    try {\n      // await Ctrl.checkUser(req.body.empNo);\n      // this checks if the empno is already assigned to a faculty\n      const id = await Ctrl.addTeachLoad(req.body, req.session.user);\n      const sample = await Ctrl.getTeachLoad({ teachingload_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created teaching load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/delete/', async (req, res) => {\n  if (req.body.teachingload_id) {\n    try {\n      const book = await Ctrl.getTeachLoad(req.body);\n      await Ctrl.removeTeachLoad(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed teach load',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/edit/', async (req, res) => {\n  if (\n    req.body.emp_id &&\n    req.body.no_of_students &&\n    req.body.subject_code &&\n    req.body.section_code &&\n    req.body.room &&\n    req.body.days &&\n    req.body.start_time &&\n    req.body.end_time &&\n    req.body.hours &&\n    req.body.creditw\n  ) {\n    try {\n      await Ctrl.editTeachLoad(req.body);\n      const sample = await Ctrl.getTeachEmp({\n        emp_id: req.body.emp_id\n      });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited teach load',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/teachload/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getTeachEmp(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched teach load',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Teach load not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/teachload/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllTeachLoad();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all teaching load',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/router.js","import db from '../../database';\n\nexport const addTeachLoad = ({ no_of_students, subject_code, section_code, room, days, start_time, end_time, creditw},json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n      INSERT INTO TEACHINGLOAD\n          (emp_id, no_of_students, subject_id)\n        VALUES\n          (?, ?, (SELECT subject_id FROM SUBJECT \n                  WHERE subject_code = ? AND\n                        section_code = ? ));\n    `;\n    //FIX QUERY LATER ON ADD SUBJECT IF SUBJECT DOES NOT EXIST\n    // console.log(no_of_students);\n    const values = [emp_id, no_of_students, subject_code, section_code];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\nexport const removeTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        DELETE \n          FROM TEACHINGLOAD\n        WHERE \n          teachingload_id = ?\n      `;\n\n    db.query(queryString, teachingload_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const editTeachLoad = ({ no_of_students, emp_id, subject_code, section_code, room, days, start_time, end_time, creditw}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      UPDATE TEACHINGLOAD\n        SET\n          no_of_students = ?\n        WHERE\n          emp_id = ? AND\n          subject_id = (SELECT subject_id FROM SUBJECT \n                        WHERE subject_code = ? AND\n                              section_code = ? );\n    `;\n   \n    const values = [no_of_students, emp_id, subject_code, section_code];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getTeachLoad = ({ teachingload_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            TEACHINGLOAD\n          WHERE\n            teachingload_id = ?;\n        `;\n\n    db.query(queryString, teachingload_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getTeachEmp = (json) => {\n  return new Promise((resolve, reject) => {\n    const emp_id = json.emp_id;\n    const queryString = `\n        call view_employee_teachingload(?)\n        `;\n\n    db.query(queryString, [emp_id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllTeachLoad = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT *\n          FROM TEACHINGLOAD\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/teachload/controller.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 24\n// module chunks = 0","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// gets one faculty\nrouter.post('/api/faculty/view', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getFaculty(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets all faculty\nrouter.get('/api/faculty/viewAll', async (req, res) => {\n  try {\n    const faculty = await Ctrl.getAllFaculty();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty',\n      data: faculty\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/router.js","import db from '../../database';\n\n// gets one faculty\nexport const getFaculty = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          call view_employee_by_id(?);\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets all faculty\nexport const getAllFaculty = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call view_employee();\n    `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultylist/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/position/add', async (req, res) => {\n  if (\n    req.body.office &&\n    req.body.credit_units &&\n    req.body.emp_id\n  ) {\n    try {  \n      const id = await Ctrl.addPosition(req.body);\n      // const sample = await Ctrl.getPosition({ id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added position',\n        // data: sample\n\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/position/delete', async (req, res) => {\n  try {\n    const consultation = await Ctrl.getPosition(req.body);\n    await Ctrl.removePosition(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed position',\n      data: consultation\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//edit a position\nrouter.put('/api/position/edit', async (req, res) => {\n  try {\n    await Ctrl.editPosition(req.body);\n    const positionEdited = await Ctrl.getPosition({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited position',\n      data: positionEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.post('/api/position/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getPosition(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched position',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Position not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\nrouter.get('/api/position/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllPositions();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all positions',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/router.js","import db from '../../database';\n\n// add position\nexport const addPosition = ({office, credit_units, emp_id}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL insert_position(?, ?, ?);\n    `;\n\n    const values = [office, credit_units, emp_id];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// get position\nexport const getPosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            POSITIONN\n          WHERE\n            position_id = ?;\n        `;\n\n    db.query(queryString, [id, id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// get all positions\nexport const getAllPositions = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_position();\n        `;\n\n    db.query(queryString, [id, id], (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// removes position\nexport const removePosition = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL delete_position(?);\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits a position\nexport const editPosition = ({\n  position_id, office, credit_units, emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL update_position(?, ?, ?, ?);\n    `;\n\n    const values = [\n      office, credit_units, emp_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n// WEBPACK FOOTER //\n// ./src/entities/adminWork/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n//add a consultation hours\nrouter.post('/api/consultation/add', async (req, res) => {\n  console.log(req.body);\n  if (\n    req.body.consultation_start_time &&\n    req.body.consultation_end_time &&\n    req.body.consultation_place &&\n    req.body.day) {\n    try {\n      const id = await Ctrl.addConsulHours(req.body,req.session.user);\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully added consultation hours'\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n//delete a consultation hours\nrouter.post('/api/consultation/delete', async (req, res) => {\n  if (req.body.consultation_id){\n    try {\n      const consultation = await Ctrl.getConsultation(req.body);\n      await Ctrl.removeConsultation(req.body);\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed consulation hours',\n        data: consultation\n      });\n    } catch (status) {\n      let message = '';\n      switch (status) {\n        case 404:\n          message = 'Consultation hours not found';\n          break;\n        case 500:\n          message = 'Internal server error';\n          break;\n      }\n      res.status(status).json({ status, message });\n    }\n  } else {\n    res.status(400).json({status: 400, message: 'Bad request' });\n  }\n});\n\n//edit a consultation hours\nrouter.put('/api/consultation/edit', async (req, res) => {\n  try {\n    await Ctrl.editConsulHours(req.body);\n    const positionEdited = await Ctrl.getConsultation({ id: req.body.id });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited consultation hour',\n      data: positionEdited\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Service not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n//view all consultation hours\nrouter.get('/api/consultation/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllConsulHours();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all consultations',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n\n    res.status(200).json({ status, message });\n  }\n});\n\nrouter.post('/api/consultation/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getConsultation(req.session.user);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched consultation',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Consultation not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/router.js","import db from '../../database';\n\nexport const addConsulHours = ({\n  consultation_start_time,\n  consultation_end_time,\n  consultation_place,\n  day,\n},\n  json\n) => {\n  return new Promise((resolve, reject) => {\n    const emp_id =  json.emp_id;\n\n    const queryString = `\n      CALL\n      insert_consultation(?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      consultation_start_time,\n      consultation_end_time,\n      consultation_place,\n      day,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err.message);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n// removes consultation hours\nexport const removeConsultation = ({ consultation_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    CALL \n      delete_consultation(?)\n    `;\n\n    db.query(queryString, consultation_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// get a consultation hour\nexport const getConsultation = ( consultation_id ) => {\n  return new Promise((resolve, reject) => {\n\n    const queryString = `\n          SELECT \n            consultation_start_time, consultation_end_time, consultation_place\n          FROM \n            CONSULTATION\n          WHERE\n            consultation_id = ?;\n        `;\n\n\n    db.query(queryString, emp_id , (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n//gets all consultation hours\nexport const getAllConsulHours = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      view_consultation()\n        `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\nexport const editConsulHours = ({\n  consultation_start_time,\n  consultation_end_time,\n  consultation_place,\n  day,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n     CALL \n     update_consultation(?, ?, ?, ?, ?)\n    `;\n\n    const values = [\n      consultation_start_time,\n      consultation_end_time,\n      consultation_place,\n      day,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/consulHours/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// get a faculty grant by emp id\nrouter.post('/api/facultygrant/viewEmp', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getAllFacultyGrantByEmp(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// gets a faculty grant by id\nrouter.get('/api/facultygrant/view', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n\n// gets a faculty grant by id\nrouter.get('/api/facultygrant/viewAll', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getAllFacultyGrant(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// add a faculty grant\nrouter.post('/api/facultygrant/add', async (req, res) => {\n  if (\n    req.body\n  ) {\n    try {\n      const id = await Ctrl.addFacultyGrant(req.body);\n     // const facultygrant = await Ctrl.getFacultyGrant({faculty_grant_id: id});\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created faculty grant',\n        // data: facultygrant\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\n// removes a faculty grant\nrouter.post('/api/facultygrant/delete', async (req, res) => {\n  try {\n    const facultygrant = await Ctrl.getFacultyGrant(req.body);\n    await Ctrl.removeFacultyGrant(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully removed faculty grant',\n      data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits a facultygrant\nrouter.post('/api/facultygrant/edit', async (req, res) => {\n  try {\n    await Ctrl.editFacultyGrant(req.body);\n    // const facultygrant = await Ctrl.getAllFacultyGrantByEmp(req.body)({\n    //   emp_id: req.body.emp_id\n    // });\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited faculty grant',\n      // data: facultygrant\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty grant not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/router.js","import db from '../../database';\n\n//adds a faculty grant\n  export const addFacultyGrant = ({emp_id}) => {\n    console.log({emp_id})\n    return new Promise((resolve, reject) => {\n      const queryString = `\n        CALL \n        insert_faculty_grant(NULL, NULL, NULL, NULL, NULL, NULL, NULL, ?);\n      `;\n      const values = [emp_id];\n  \n      db.query(queryString,values, (err, results) => {\n        if (err) {\n          console.log(err.message);\n          return reject(500);\n        }\n        return resolve(results.insertId);\n      });\n    });\n  };\n  \n// gets all faculty\n  export const getAllFacultyGrant = () => {\n    return new Promise((resolve, reject) => {\n      const queryString = `\n        CALL view_faculty_grant();\n      `;\n  \n      db.query(queryString, (err, rows) => {\n        if (err) {\n          console.log(err);\n          return reject(500);\n        }\n  \n        if (!rows.length) {\n          return reject(404);\n        }\n  \n        return resolve(rows);\n      });\n    });\n  };\n  \n// gets a faculty grant by id\nexport const getFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            FACULTYGRANT\n          WHERE\n            faculty_grant_id = ?\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n// gets a faculty grant by id by emp_id\nexport const getAllFacultyGrantByEmp = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL view_faculty_grant_by_emp_id(?)\n        `;\n\n    db.query(queryString, id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n// removes a faculty grant\nexport const removeFacultyGrant = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL\n      delete_faculty_grant();\n    `;\n\n    db.query(queryString, id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve(); \n    });\n  });\n};\n\n// edits a faculty grant\nexport const editFacultyGrant = ({\n  emp_id,\n\ttype,\n\tis_approved,\n\tprofessional_chair,\n\tgrants,\n\tgrant_title,\n\tstart_date,\n\tend_date\n\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL \n      update_faculty_grant(?, ?, ?, ?, ?, ?, ?, ?);\n    `;\n\n    const values = [\n      emp_id,\n      type,\n      is_approved,\n      professional_chair,\n      grants,\n      grant_title,\n      start_date,\n      end_date\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/facultygrant/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\nrouter.post('/api/limitedpractice/add', async (req, res) => {\n  if (\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      const id = await Ctrl.addLimitedPractice(req.body);\n      const sample = await Ctrl.getLimitedPractice({ limited_practice_id: id });\n\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully created limited practice',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\nrouter.post('/api/limitedpractice/delete', async (req, res) => {\n  if (\n    req.body.limited_practice_id\n  ) {\n    try {\n      const book = await Ctrl.getLimitedPractice(req.body);\n      await Ctrl.removeLimitedPractice(req.body);\n  \n      res.status(200).json({\n        status: 200,\n        message: 'Successfully removed limited practice',\n        data: book\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\n\n\nrouter.post('/api/limitedpractice/edit', async (req, res) => {\n  if (\n    req.body.limited_practice_id &&\n    req.body.haveApplied &&\n    req.body.date_submitted &&\n    req.body.emp_id\n  ) {\n    try {\n      await Ctrl.editLimitedPractice(req.body);\n      const sample = await Ctrl.getLimitedPractice({\n        limited_practice_id: req.body.limited_practice_id\n      });\n      res.status(200).json({\n        status: 200,\n        message: 'Successfully edited limited practice',\n        data: sample\n      });\n    } catch (status) {\n      res.status(500).json({ status: 500, message: 'Internal server error' });\n    }\n  } else {\n    res.status(400).json({ status: 400, message: 'Bad request' });\n  }\n});\n\nrouter.post('/api/limitedpractice/view', async (req, res) => {\n  try {\n    const book = await Ctrl.getLimitedPractice(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched limited practice',\n      data: book\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Limited practice not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nrouter.get('/api/limitedpractice/viewAll', async (req, res) => {\n  try {\n    const subjects = await Ctrl.getAllLimitedPractice();\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched all limited practice',\n      data: subjects\n    });\n  } catch (status) {\n    let message = '';\n\n    switch (status) {\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(200).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/router.js","import db from '../../database';\n\nexport const addLimitedPractice = ({\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      CALL  \n      insert_limited_practice(?, ?, ?)\n    `;\n    \n    const values = [\n      haveApplied,\n      date_submitted,\n      emp_id\n    ];\n\n    db.query(queryString, values, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(results.insertId);\n    });\n  });\n};\n\n\nexport const removeLimitedPractice = ({ limited_practice_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        delete_limited_practice(?);\n      `;\n\n    db.query(queryString, limited_practice_id, (err, results) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!results.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n\nexport const editLimitedPractice = ({\n  limited_practice_id,\n  haveApplied,\n  date_submitted,\n  emp_id\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        update_limited_practice(?, ?, ?, ?)\n      `;\n\n    const values = [\n      haveApplied,\n      date_submitted,\n      emp_id,\n      limited_practice_id\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\nexport const getLimitedPractice = ({ limited_practice_id }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          CALL\n          view_limited_practice_by_emp_id(?)\n        `;\n\n    db.query(queryString, limited_practice_id, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\nexport const getAllLimitedPractice = () => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n        CALL\n        view_limited_practice()\n      `;\n\n    db.query(queryString, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      return resolve(rows);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/limitedpractice/controller.js","import { Router } from 'express';\nimport * as Ctrl from './controller';\n\nconst router = Router();\n\n// edits the faculty\nrouter.post('/api/faculty/edit', async (req, res) => {\n  try {\n    await Ctrl.editFaculty(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited faculty'\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// edits the semester information\nrouter.post('/api/faculty/termEdit', async (req, res) => {\n  try {\n    await Ctrl.editTerm(req.body);\n\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully edited term information'\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\n// get the faculty data\nrouter.post('/api/faculty/data', async (req, res) => {\n  try {\n    const data = await Ctrl.getData(req.body);\n    res.status(200).json({\n      status: 200,\n      message: 'Successfully fetched faculty data',\n      data: data\n    });\n  } catch (status) {\n    let message = '';\n    switch (status) {\n      case 404:\n        message = 'Faculty not found';\n        break;\n      case 500:\n        message = 'Internal server error';\n        break;\n    }\n    res.status(status).json({ status, message });\n  }\n});\n\nexport default router;\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/profile/router.js","import db from '../../database';\n\n// edits the faculty\nexport const editFaculty = ({\n  empid,\n  username,\n  password,\n  fname,\n  mname,\n  lname,\n  dept,\n  college,\n  emptype,\n  email,\n  is_full_time\n}) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n      call update_employee(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 1, 0);\n    `;\n\n    const values = [\n      empid,\n      username,\n      password,\n      fname,\n      mname,\n      lname,\n      dept,\n      college,\n      emptype,\n      email,\n      is_full_time\n    ];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// edits the faculty\nexport const editTerm = ({ empid, year, term, isnew }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n    UPDATE \n      EMPLOYEE\n    SET \n      year = ?,\n      semester = ?,\n      is_new = ?\n    WHERE \n      emp_id = ?;\n    `;\n\n    const values = [year, term, isnew, empid];\n\n    db.query(queryString, values, (err, res) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!res.affectedRows) {\n        return reject(404);\n      }\n\n      return resolve();\n    });\n  });\n};\n\n// gets faculty data\nexport const getData = ({ empid }) => {\n  return new Promise((resolve, reject) => {\n    const queryString = `\n          SELECT \n            *\n          FROM \n            EMPLOYEE\n          WHERE\n            emp_id = ?\n        `;\n\n    db.query(queryString, empid, (err, rows) => {\n      if (err) {\n        console.log(err);\n        return reject(500);\n      }\n\n      if (!rows.length) {\n        return reject(404);\n      }\n\n      return resolve(rows[0]);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/entities/profile/controller.js"],"sourceRoot":""}