#!/usr/bin/env node
(function() {
    if (process.argv.length < 6) {
        console.log("Usage: backpack-list <path> <data file id> <redis host> <redis port>");
        return;
    }

    var args        = process.argv,
        path        = require("path"),
        redis       = require("redis").createClient(args[5], args[4], { return_buffers: true }),
        FileManager = require("../index").FileManager,
        manager     = new FileManager(args[2], redis);

    manager.load(function(error) {
        if (error) {
            throw error;
        }

        manager.getFile(args[3], function(error, file) {
            if (error) {
                throw error;
            }

            file.meta.getContents(function(error, contents) {
                if (error) {
                    throw error;
                }

                (function processNext() {
                    var item = contents.pop();

                    if (!item) {
                        redis.quit();
                        return;
                    }

                    manager.keySerializer(item[0], function(error, key) {
                        if (error) {
                            console.log("error for " + item.join(" "));
                            console.log(error);
                            processNext();
                            return;
                        }

                        redis.get(key, function(error, value) {
                            if (error) {
                                throw error;
                            }

                            if (value) {
                                processNext();
                                return;
                            }

                            console.log("No record in redis for " + item[0] + ", restoring..");

                            manager.valueSerializer(args[3], item[1], item[2], function(error, value) {
                                if (error) {
                                    console.log("error for " + item.join(" "));
                                    console.log(error);
                                    processNext();
                                    return;
                                }

                                redis.setnx(key, value, function(error) {
                                    if (error) {
                                        throw error;
                                    }

                                    processNext();
                                })
                            });
                        });
                    })
                })();
            });
        });
    });
})();
